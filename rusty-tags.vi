!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
A	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^pub const A: YearFlags = YearFlags(0o15);$/;"	c
AG	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^pub const AG: YearFlags = YearFlags(0o05);$/;"	c
ALT_SHIFT	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/crossterm.rs	/^    const ALT_SHIFT: KeyModifiers = KeyModifiers::from_bits_truncate($/;"	c
ALWAYS_TRUE	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/bernoulli.rs	/^const ALWAYS_TRUE: u64 = u64::MAX;$/;"	c
A_BILLION	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        const A_BILLION: i64 = 1_000_000_000;$/;"	c
Action	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^enum Action {$/;"	g
AdjustTokenPrivileges	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            fn AdjustTokenPrivileges($/;"	f
Alphanumeric	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/other.rs	/^pub struct Alphanumeric;$/;"	s
AnyObject	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/container.rs	/^struct AnyObject {$/;"	s
ArcRef	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^pub type ArcRef<T, U = T> = OwningRef<Arc<T>, U>;$/;"	T
Array	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^pub type Array = Vec<Value>;$/;"	T
ArrayToken	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/array.rs	/^pub struct ArrayToken {$/;"	s
AtToken	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/at.rs	/^pub type AtToken = Option<Instant>;$/;"	T
AtomicDialog	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog_try.rs	/^pub struct AtomicDialog<T: View> {$/;"	s
AtomicFileTransitFlags	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^enum AtomicFileTransitFlags$/;"	g
AtomicTextView	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_text_view.rs	/^pub struct AtomicTextView {$/;"	s
Atomic_Button	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_button.rs	/^pub struct Atomic_Button {$/;"	s
Atomic_Dialog	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^pub struct Atomic_Dialog {$/;"	s
B	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^pub const B: YearFlags = YearFlags(0o14);$/;"	c
BA	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^pub const BA: YearFlags = YearFlags(0o04);$/;"	c
BAD_FORMAT	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^const BAD_FORMAT: ParseError = ParseError(ParseErrorKind::BadFormat);$/;"	c
BLOCK_CAP	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^const BLOCK_CAP: usize = LAP - 1;$/;"	c
BUF_SIZE	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^const BUF_SIZE: u32 = 16384;$/;"	c
Backend	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/blt.rs	/^pub struct Backend {$/;"	s
Backend	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/crossterm.rs	/^pub struct Backend {$/;"	s
Backend	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/n.rs	/^pub struct Backend {$/;"	s
Backend	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/pan.rs	/^pub struct Backend {$/;"	s
Backend	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/mod.rs	/^pub struct Backend {$/;"	s
Backend	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/termion.rs	/^pub struct Backend {$/;"	s
Bar	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        struct Bar {$/;"	s
Bernoulli	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/bernoulli.rs	/^pub struct Bernoulli {$/;"	s
BernoulliError	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/bernoulli.rs	/^pub enum BernoulliError {$/;"	g
Block	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^struct Block<T> {$/;"	s
BoxRef	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^pub type BoxRef<T, U = T> = OwningRef<Box<T>, U>;$/;"	T
BoxRefMut	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^pub type BoxRefMut<T, U = T> = OwningRefMut<Box<T>, U>;$/;"	T
C	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^pub const C: YearFlags = YearFlags(0o13);$/;"	c
C	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^        const C: [[f32; 2]; 2] = [[1.6, 8.0 \/ 45.0], [10.0, 70.0 \/ 9.0]];$/;"	c
C	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^        const C: [f32; 2] = [270.0, 330.0 \/ 9.0];$/;"	c
CB	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^pub const CB: YearFlags = YearFlags(0o03);$/;"	c
CFRunLoopIsWaiting	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^    pub fn CFRunLoopIsWaiting(runloop: cf::CFRunLoopRef) -> bool;$/;"	f
CHAR_SURROGATE_LEN	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^const CHAR_SURROGATE_LEN: u32 = 0xE000 - CHAR_SURROGATE_START;$/;"	c
CHAR_SURROGATE_START	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^const CHAR_SURROGATE_START: u32 = 0xD800;$/;"	c
CHMOD	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^            const CHMOD       = 0b000_0001;$/;"	c
CHMOD	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    pub const CHMOD: Op = Op::CHMOD;$/;"	c
CLOSE_WRITE	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^            const CLOSE_WRITE = 0b010_0000;$/;"	c
CLOSE_WRITE	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    pub const CLOSE_WRITE: Op = Op::CLOSE_WRITE;$/;"	c
CONTEXT	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/context.rs	/^            static CONTEXT: Cell<Option<Context>> = Cell::new(Some(Context::new()));$/;"	c
CREATE	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^            const CREATE      = 0b000_0010;$/;"	c
CREATE	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    pub const CREATE: Op = Op::CREATE;$/;"	c
CTRL_ALT	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/crossterm.rs	/^    const CTRL_ALT: KeyModifiers = KeyModifiers::from_bits_truncate($/;"	c
CTRL_SHIFT	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/crossterm.rs	/^    const CTRL_SHIFT: KeyModifiers = KeyModifiers::from_bits_truncate($/;"	c
Channel	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/array.rs	/^pub struct Channel<T> {$/;"	s
Channel	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/at.rs	/^pub struct Channel {$/;"	s
Channel	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^pub struct Channel<T> {$/;"	s
Channel	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/never.rs	/^pub struct Channel<T> {$/;"	s
Channel	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/tick.rs	/^pub struct Channel {$/;"	s
Channel	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/zero.rs	/^pub struct Channel<T> {$/;"	s
ChildButton	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^struct ChildButton {$/;"	s
ChunkHintedIterator	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^    struct ChunkHintedIterator<I: ExactSizeIterator + Iterator + Clone> {$/;"	s
CloneStableDeref	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/stable_deref_trait-1.2.0/src/lib.rs	/^pub unsafe trait CloneStableDeref: StableDeref + Clone {}$/;"	t
ColorRole	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/blt.rs	/^enum ColorRole {$/;"	g
Config	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/config.rs	/^pub struct Config {$/;"	s
ConfigError	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/error.rs	/^pub enum ConfigError {$/;"	g
ConfigKind	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/config.rs	/^enum ConfigKind {$/;"	g
ConfigSerializer	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^pub struct ConfigSerializer {$/;"	s
Container	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/container.rs	/^pub struct Container {$/;"	s
Context	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/context.rs	/^pub struct Context {$/;"	s
CopyOptions	/home/artie/Documents/Repos/fs_extra/src/dir.rs	/^pub struct CopyOptions {$/;"	s
CopyOptions	/home/artie/Documents/Repos/fs_extra/src/file.rs	/^pub struct CopyOptions {$/;"	s
Counter	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/counter.rs	/^struct Counter<C> {$/;"	s
CursiveExt	/home/artie/Documents/Repos/smallB_cursive/cursive/src/cursive_ext.rs	/^pub trait CursiveExt {$/;"	t
CursiveRunnable	/home/artie/Documents/Repos/smallB_cursive/cursive/src/cursive_runnable.rs	/^pub struct CursiveRunnable {$/;"	s
D	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^pub const D: YearFlags = YearFlags(0o12);$/;"	c
DATE_ITEMS	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^        const DATE_ITEMS: &'static [Item<'static>] = &[$/;"	c
DC	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^pub const DC: YearFlags = YearFlags(0o02);$/;"	c
DENOM	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/bernoulli.rs	/^        const DENOM: u32 = 10;$/;"	c
DENOM	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rng.rs	/^        const DENOM: u32 = 10;$/;"	c
DESTROY	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^const DESTROY: usize = 4;$/;"	c
D_FMT	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^static D_FMT: &'static [Item<'static>] =$/;"	c
D_T_FMT	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^static D_T_FMT: &'static [Item<'static>] = &[$/;"	c
Date	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^pub struct Date<Tz: TimeZone> {$/;"	s
DateImpl	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^pub type DateImpl = i32;$/;"	T
DateTime	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^pub struct DateTime<Tz: TimeZone> {$/;"	s
DateTimeVisitor	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    struct DateTimeVisitor;$/;"	s
Datelike	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^pub trait Datelike: Sized {$/;"	t
Debounce	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/mod.rs	/^pub struct Debounce {$/;"	s
DebouncedEvent	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^pub enum DebouncedEvent {$/;"	g
DelayedFormat	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub struct DelayedFormat<I> {$/;"	s
Delimiter	/home/artie/Documents/Projects/rust/FileManager/src/internals/delimiter.rs	/^pub struct Delimiter {$/;"	s
DialogFocus	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^pub enum DialogFocus {$/;"	g
DirContent	/home/artie/Documents/Repos/fs_extra/src/dir.rs	/^pub struct DirContent {$/;"	s
DirEntryAttr	/home/artie/Documents/Repos/fs_extra/src/dir.rs	/^pub enum DirEntryAttr {$/;"	g
DirEntryValue	/home/artie/Documents/Repos/fs_extra/src/dir.rs	/^pub enum DirEntryValue {$/;"	g
DirOptions	/home/artie/Documents/Repos/fs_extra/src/dir.rs	/^pub struct DirOptions {$/;"	s
DistIter	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/mod.rs	/^pub struct DistIter<D, R, T> {$/;"	s
Distribution	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/mod.rs	/^pub trait Distribution<T> {$/;"	t
Duration	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^pub struct Duration {$/;"	s
Duration	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^pub struct Duration {$/;"	s
DurationRound	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^pub trait DurationRound: Sized {$/;"	t
E	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^pub const E: YearFlags = YearFlags(0o11);$/;"	c
ED	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^pub const ED: YearFlags = YearFlags(0o01);$/;"	c
EPSILON32	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/float.rs	/^    const EPSILON32: f32 = ::core::f32::EPSILON;$/;"	c
EPSILON64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/float.rs	/^    const EPSILON64: f64 = ::core::f64::EPSILON;$/;"	c
Element	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^    struct Element<N> {$/;"	s
Entry	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/waker.rs	/^pub struct Entry {$/;"	s
EnumAccess	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^struct EnumAccess {$/;"	s
Environment	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/env.rs	/^pub struct Environment {$/;"	s
Erased	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    type Erased = Arc<dyn Erased + 'a>;$/;"	T
Erased	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    type Erased = Box<dyn Erased + 'a>;$/;"	T
Erased	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    type Erased = Rc<dyn Erased + 'a>;$/;"	T
Erased	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    type Erased;$/;"	T
Erased	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^pub trait Erased {}$/;"	t
ErasedArcRef	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^pub type ErasedArcRef<U> = OwningRef<Arc<dyn Erased>, U>;$/;"	T
ErasedBoxRef	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^pub type ErasedBoxRef<U> = OwningRef<Box<dyn Erased>, U>;$/;"	T
ErasedBoxRefMut	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^pub type ErasedBoxRefMut<U> = OwningRefMut<Box<dyn Erased>, U>;$/;"	T
ErasedRcRef	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^pub type ErasedRcRef<U> = OwningRef<Rc<dyn Erased>, U>;$/;"	T
Err	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    type Err = ParseError;$/;"	T
Err	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    type Err = ParseMonthError;$/;"	T
Err	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    type Err = ParseWeekdayError;$/;"	T
Err	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^    type Err = ParseError;$/;"	T
Err	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    type Err = ParseError;$/;"	T
Err	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    type Err = ParseError;$/;"	T
Err	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    type Err = ParseError;$/;"	T
Err	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    type Err = RoundingError;$/;"	T
Err	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    type Err: fmt::Debug + fmt::Display;$/;"	T
Err	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    type Err: std::error::Error;$/;"	T
Err	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/path/mod.rs	/^    type Err = ConfigError;$/;"	T
Error	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^    type Error = ConfigError;$/;"	T
Error	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    type Error = ConfigError;$/;"	T
Error	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^pub enum Error {$/;"	g
Error	/home/artie/Documents/Repos/fs_extra/src/error.rs	/^pub struct Error {$/;"	s
ErrorKind	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^                    pub enum ErrorKind {$/;"	g
ErrorKind	/home/artie/Documents/Repos/fs_extra/src/error.rs	/^pub enum ErrorKind {$/;"	g
EventLoop	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^struct EventLoop {$/;"	s
EventLoopMsg	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^enum EventLoopMsg {$/;"	g
EventTx	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/mod.rs	/^pub enum EventTx {$/;"	g
Example	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        struct Example(u32, String, [u8; 3]);$/;"	s
ExplorerColumn	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^pub enum ExplorerColumn {$/;"	g
ExplorerColumnData	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^pub struct ExplorerColumnData {$/;"	s
Expression	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/path/mod.rs	/^pub enum Expression {$/;"	g
F	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^pub const F: YearFlags = YearFlags(0o17);$/;"	c
F	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/float.rs	/^            type F = $ty;$/;"	T
F	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/float.rs	/^    type F;$/;"	T
FE	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^pub const FE: YearFlags = YearFlags(0o07);$/;"	c
FLAGS	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    const FLAGS: [YearFlags; 14] = [A, B, C, D, E, F, G, AG, BA, CB, DC, ED, FE, GF];$/;"	c
FMT_NONE	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^        static FMT_NONE: &'static [Item<'static>; 0] = &[];$/;"	c
File	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/file/mod.rs	/^pub struct File<T>$/;"	s
FileFormat	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/file/format/mod.rs	/^pub enum FileFormat {$/;"	g
FileManager	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^pub struct FileManager {$/;"	s
FileMangerConfig	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^struct FileMangerConfig {$/;"	s
FileSource	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/file/source/mod.rs	/^pub trait FileSource: Debug + Clone {$/;"	t
FileSourceFile	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/file/source/file.rs	/^pub struct FileSourceFile {$/;"	s
FileSourceString	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/file/source/string.rs	/^pub struct FileSourceString(String);$/;"	s
Fill	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rng.rs	/^pub trait Fill {$/;"	t
Fixed	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub enum Fixed {$/;"	g
FixedOffset	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^pub struct FixedOffset {$/;"	s
Fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^type Fmt<'a> = &'static [Item<'static>];$/;"	T
Fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^type Fmt<'a> = Vec<Item<'a>>;$/;"	T
Fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^enum Fmt<'a> {$/;"	g
Foo	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        struct Foo {$/;"	s
Foo	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    struct Foo {$/;"	s
Foo	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/stable_deref_trait-1.2.0/src/lib.rs	/^struct Foo(Box<(u8, u8)>);$/;"	s
Foo	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/stable_deref_trait-1.2.0/src/lib.rs	/^struct Foo(Box<u8>);$/;"	s
Foo	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/stable_deref_trait-1.2.0/src/lib.rs	/^struct Foo(Cell<bool>);$/;"	s
Foo	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/stable_deref_trait-1.2.0/src/lib.rs	/^struct Foo(Rc<u8>);$/;"	s
Foo	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/stable_deref_trait-1.2.0/src/lib.rs	/^struct Foo(u8);$/;"	s
Foo	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/stable_deref_trait-1.2.0/src/lib.rs	/^struct Foo;$/;"	s
FormatWrapped	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            struct FormatWrapped<'a, D: 'a> {$/;"	s
FormatWrapped	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^            struct FormatWrapped<'a, D: 'a> {$/;"	s
FormatWrapped	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^            struct FormatWrapped<'a, D: 'a> {$/;"	s
FsEventWatcher	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^pub struct FsEventWatcher {$/;"	s
G	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^pub const G: YearFlags = YearFlags(0o16);$/;"	c
GAP_SIZE	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/other.rs	/^        const GAP_SIZE: u32 = 0xDFFF - 0xD800 + 1;$/;"	c
GEN_ASCII_STR_CHARSET	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/other.rs	/^        const GEN_ASCII_STR_CHARSET: &[u8] = b"ABCDEFGHIJKLMNOPQRSTUVWXYZ\\$/;"	c
GF	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^pub const GF: YearFlags = YearFlags(0o06);$/;"	c
GLOBAL_FileManager	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^static GLOBAL_FileManager: state::Storage<std::sync::Mutex<std::cell::RefCell<FileManager>>> = state::Storage::new();$/;"	c
GraphemePart	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^pub enum GraphemePart {$/;"	g
HAVE_ALTERNATES	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^const HAVE_ALTERNATES: &'static str = "z";$/;"	c
HECTONANOSECS_IN_SEC	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/windows.rs	/^const HECTONANOSECS_IN_SEC: i64 = 10_000_000;$/;"	c
HECTONANOSECS_IN_SEC	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    const HECTONANOSECS_IN_SEC: i64 = 10_000_000;$/;"	c
HECTONANOSEC_TO_UNIX_EPOCH	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/windows.rs	/^const HECTONANOSEC_TO_UNIX_EPOCH: i64 = 11_644_473_600 * HECTONANOSECS_IN_SEC;$/;"	c
HECTONANOSEC_TO_UNIX_EPOCH	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    const HECTONANOSEC_TO_UNIX_EPOCH: i64 = 11_644_473_600 * HECTONANOSECS_IN_SEC;$/;"	c
Handle	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    type Handle = Ref<'static, T>;$/;"	T
Handle	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    type Handle: Deref;$/;"	T
HandleMut	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    type HandleMut = RefMut<'static, T>;$/;"	T
HandleMut	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    type HandleMut: DerefMut;$/;"	T
HashMap	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/mod.rs	/^type HashMap<K, V> = std::collections::HashMap<K, V, ahash::RandomState>;$/;"	T
HashMap	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/n.rs	/^type HashMap<K, V> = std::collections::HashMap<K, V, ahash::RandomState>;$/;"	T
HashMap	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/pan.rs	/^type HashMap<K, V> = std::collections::HashMap<K, V, ahash::RandomState>;$/;"	T
HashSet	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/blt.rs	/^type HashSet<K> = std::collections::HashSet<K, ahash::RandomState>;$/;"	T
IMPOSSIBLE	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^const IMPOSSIBLE: ParseError = ParseError(ParseErrorKind::Impossible);$/;"	c
INC	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/lib.rs	/^        const INC: u64 = 11634580027462260723;$/;"	c
INIT	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^        static INIT: Once = ONCE_INIT;$/;"	c
INIT	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        static INIT: Once = ONCE_INIT;$/;"	c
INOTIFY	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^const INOTIFY: mio::Token = mio::Token(0);$/;"	c
INVALID	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^const INVALID: ParseError = ParseError(ParseErrorKind::Invalid);$/;"	c
INotifyWatcher	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^pub struct INotifyWatcher(Mutex<mio_extras::channel::Sender<EventLoopMsg>>);$/;"	s
ITEMS	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        const ITEMS: &'static [Item<'static>] = &[Item::Fixed(Fixed::RFC2822)];$/;"	c
ITEMS	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        const ITEMS: &'static [Item<'static>] = &[Item::Fixed(Fixed::RFC3339)];$/;"	c
ITEMS	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^        const ITEMS: &'static [Item<'static>] = &[$/;"	c
ITEMS	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        const ITEMS: &'static [Item<'static>] = &[$/;"	c
ITEMS	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^        const ITEMS: &'static [Item<'static>] = &[$/;"	c
IdentHash	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/ident_hash.rs	/^pub struct IdentHash(u64);$/;"	s
IndexCallback	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^type IndexCallback = Rc<dyn Fn(&mut Cursive, usize, usize)>;$/;"	T
IndexVec	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^pub enum IndexVec {$/;"	g
IndexVecIntoIter	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^pub enum IndexVecIntoIter {$/;"	g
IndexVecIter	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^pub enum IndexVecIter<'a> {$/;"	g
Init	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/init.rs	/^pub struct Init {$/;"	s
Initializer	/home/artie/Documents/Repos/smallB_cursive/cursive/src/cursive_runnable.rs	/^type Initializer =$/;"	T
Inner	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/context.rs	/^struct Inner {$/;"	s
Inner	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/zero.rs	/^struct Inner {$/;"	s
InnerContentType	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_text_view.rs	/^type InnerContentType = Arc<StyledString>;$/;"	T
InternalFixed	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub struct InternalFixed {$/;"	s
InternalInternal	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^enum InternalInternal {$/;"	g
InternalNumeric	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub struct InternalNumeric {$/;"	s
IntoErased	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^pub unsafe trait IntoErased<'a> {$/;"	t
IntoFloat	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/float.rs	/^pub trait IntoFloat {$/;"	t
IntoIter	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^    type IntoIter = IntoIter<T>;$/;"	T
IntoIter	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^    type IntoIter = Iter<'a, T>;$/;"	T
IntoIter	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^pub struct IntoIter<T> {$/;"	s
IntoIter	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^    type IntoIter = IndexVecIntoIter;$/;"	T
IsoWeek	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/isoweek.rs	/^pub struct IsoWeek {$/;"	s
Item	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub enum Item<'a> {$/;"	g
Item	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^    type Item = Item<'a>;$/;"	T
Item	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    type Item = NaiveDate;$/;"	T
Item	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^    type Item = T;$/;"	T
Item	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/mod.rs	/^    type Item = T;$/;"	T
Item	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/reseeding.rs	/^    type Item = <R as BlockRngCore>::Item;$/;"	T
Item	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^    type Item = usize;$/;"	T
Item	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^        type Item = I::Item;$/;"	T
Item	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^    type Item = &'a T;$/;"	T
Item	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^    type Item = T;$/;"	T
Item	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^    type Item;$/;"	T
Iter	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^pub struct Iter<'a, T> {$/;"	s
IteratorRandom	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^pub trait IteratorRandom: Iterator + Sized {$/;"	t
LAP	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^const LAP: usize = 32;$/;"	c
LEAP_FLAGS	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    const LEAP_FLAGS: [YearFlags; 7] = [AG, BA, CB, DC, ED, FE, GF];$/;"	c
LONG_MONTH_SUFFIXES	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^    static LONG_MONTH_SUFFIXES: [&'static str; 12] =$/;"	c
LONG_WEEKDAY_SUFFIXES	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^    static LONG_WEEKDAY_SUFFIXES: [&'static str; 7] =$/;"	c
LOWER_MASK	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^                    const LOWER_MASK: $scalar = !0 >> $half;$/;"	c
LOWER_MASK	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^                const LOWER_MASK: $ty = !0 >> $half;$/;"	c
ListToken	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^pub struct ListToken {$/;"	s
Local	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^pub struct Local;$/;"	s
LocalResult	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^pub enum LocalResult<T> {$/;"	g
LocalStorage	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/tls.rs	/^pub struct LocalStorage<T> {$/;"	s
LocalValue	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/tls.rs	/^pub struct LocalValue<T> {$/;"	s
Locale	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^struct Locale;$/;"	s
LsResult	/home/artie/Documents/Repos/fs_extra/src/dir.rs	/^pub struct LsResult {$/;"	s
MARK_BIT	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^const MARK_BIT: usize = 1;$/;"	c
MAX	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^pub const MAX: Duration = Duration {$/;"	c
MAX	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^pub const MAX: Duration = Duration {$/;"	c
MAX_BITS	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^const MAX_BITS: usize = 44;$/;"	c
MAX_DATE	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^pub const MAX_DATE: Date<Utc> = Date { date: naive::MAX_DATE, offset: Utc };$/;"	c
MAX_DATE	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^pub const MAX_DATE: NaiveDate = NaiveDate { ymdf: (MAX_YEAR << 13) | (365 << 4) | 0o17 \/*F*\/ };$/;"	c
MAX_DATETIME	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^pub const MAX_DATETIME: DateTime<Utc> = DateTime { datetime: naive::MAX_DATETIME, offset: Utc };$/;"	c
MAX_DATETIME	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^pub const MAX_DATETIME: NaiveDateTime = NaiveDateTime { date: MAX_DATE, time: MAX_TIME };$/;"	c
MAX_DAYS_FROM_YEAR_0	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^const MAX_DAYS_FROM_YEAR_0: i32 =$/;"	c
MAX_MDL	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^pub const MAX_MDL: u32 = (12 << 6) | (31 << 1) | 1;$/;"	c
MAX_OL	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^pub const MAX_OL: u32 = 366 << 1; \/\/ larger than the non-leap last day `(365 << 1) | 1`$/;"	c
MAX_SECONDS_TIMESTAMP_FOR_NANOS	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^const MAX_SECONDS_TIMESTAMP_FOR_NANOS: i64 = 9_223_372_036;$/;"	c
MAX_SECS_BITS	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^const MAX_SECS_BITS: usize = 44;$/;"	c
MAX_TIME	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^pub const MAX_TIME: NaiveTime = NaiveTime { secs: 23 * 3600 + 59 * 60 + 59, frac: 999_999_999 };$/;"	c
MAX_YEAR	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^const MAX_YEAR: i32 = internals::MAX_YEAR;$/;"	c
MAX_YEAR	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^pub const MAX_YEAR: DateImpl = i32::MAX >> 13;$/;"	c
MDL_TO_OL	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^static MDL_TO_OL: [i8; MAX_MDL as usize + 1] = [$/;"	c
MESSAGE	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^const MESSAGE: mio::Token = mio::Token(1);$/;"	c
MICROS_PER_DAY	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^        const MICROS_PER_DAY: i64 = 86400_000_000;$/;"	c
MICROS_PER_DAY	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^        const MICROS_PER_DAY: i64 = 86400_000_000;$/;"	c
MICROS_PER_SEC	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^const MICROS_PER_SEC: i64 = 1000_000;$/;"	c
MICROS_PER_SEC	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^const MICROS_PER_SEC: i64 = 1000_000;$/;"	c
MILLIS_PER_SEC	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^const MILLIS_PER_SEC: i64 = 1000;$/;"	c
MILLIS_PER_SEC	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^const MILLIS_PER_SEC: i64 = 1000;$/;"	c
MIN	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^pub const MIN: Duration = Duration {$/;"	c
MIN	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^pub const MIN: Duration = Duration {$/;"	c
MIN_DATE	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^pub const MIN_DATE: Date<Utc> = Date { date: naive::MIN_DATE, offset: Utc };$/;"	c
MIN_DATE	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^pub const MIN_DATE: NaiveDate = NaiveDate { ymdf: (MIN_YEAR << 13) | (1 << 4) | 0o07 \/*FE*\/ };$/;"	c
MIN_DATETIME	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^pub const MIN_DATETIME: DateTime<Utc> = DateTime { datetime: naive::MIN_DATETIME, offset: Utc };$/;"	c
MIN_DATETIME	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^pub const MIN_DATETIME: NaiveDateTime = NaiveDateTime { date: MIN_DATE, time: MIN_TIME };$/;"	c
MIN_DAYS_FROM_YEAR_0	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^const MIN_DAYS_FROM_YEAR_0: i32 = (MIN_YEAR + 400_000) * 365 + (MIN_YEAR + 400_000) \/ 4$/;"	c
MIN_MDL	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^pub const MIN_MDL: u32 = (1 << 6) | (1 << 1);$/;"	c
MIN_OL	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^pub const MIN_OL: u32 = 1 << 1;$/;"	c
MIN_TIME	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^pub const MIN_TIME: NaiveTime = NaiveTime { secs: 0, frac: 0 };$/;"	c
MIN_YEAR	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^const MIN_YEAR: i32 = internals::MIN_YEAR;$/;"	c
MIN_YEAR	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^pub const MIN_YEAR: DateImpl = i32::MIN >> 13;$/;"	c
MapAccess	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^struct MapAccess {$/;"	s
Mask	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^            type Mask = $mty;$/;"	T
Mask	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^            type Mask = bool;$/;"	T
Mask	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^    type Mask;$/;"	T
Mdf	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^pub struct Mdf(pub u32);$/;"	s
MetaEvent	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^pub enum MetaEvent {$/;"	g
MilliSecondsTimestampVisitor	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub struct MilliSecondsTimestampVisitor;$/;"	s
Month	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^pub enum Month {$/;"	g
MonthVisitor	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    struct MonthVisitor;$/;"	s
MultipleDocumentsError	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/file/format/yaml.rs	/^struct MultipleDocumentsError(usize);$/;"	s
MutexGuardRef	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^pub type MutexGuardRef<'a, T, U = T> = OwningRef<MutexGuard<'a, T>, U>;$/;"	T
MutexGuardRefMut	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^pub type MutexGuardRefMut<'a, T, U = T> = OwningRefMut<MutexGuard<'a, T>, U>;$/;"	T
MyF32	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^        struct MyF32 {$/;"	s
N	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/bernoulli.rs	/^        const N: u32 = 100_000;$/;"	c
N	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rng.rs	/^        const N: u32 = 100_000;$/;"	c
NANOS_PER_DAY	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^        const NANOS_PER_DAY: i64 = 86400_000_000_000;$/;"	c
NANOS_PER_DAY	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^        const NANOS_PER_DAY: i64 = 86400_000_000_000;$/;"	c
NANOS_PER_MICRO	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^const NANOS_PER_MICRO: i32 = 1000;$/;"	c
NANOS_PER_MICRO	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^const NANOS_PER_MICRO: i32 = 1000;$/;"	c
NANOS_PER_MILLI	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^const NANOS_PER_MILLI: i32 = 1000_000;$/;"	c
NANOS_PER_MILLI	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^const NANOS_PER_MILLI: i32 = 1000_000;$/;"	c
NANOS_PER_SEC	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^const NANOS_PER_SEC: i32 = 1_000_000_000;$/;"	c
NANOS_PER_SEC	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^const NANOS_PER_SEC: i32 = 1_000_000_000;$/;"	c
NANOS_PER_SEC	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    const NANOS_PER_SEC: u64 = 1_000_000_000;$/;"	c
NONLEAP_FLAGS	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    const NONLEAP_FLAGS: [YearFlags; 7] = [A, B, C, D, E, F, G];$/;"	c
NOT_ENOUGH	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^const NOT_ENOUGH: ParseError = ParseError(ParseErrorKind::NotEnough);$/;"	c
NSEC_PER_SEC	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^static NSEC_PER_SEC: i32 = 1_000_000_000;$/;"	c
NUM	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/bernoulli.rs	/^        const NUM: u32 = 3;$/;"	c
NUM	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rng.rs	/^        const NUM: u32 = 3;$/;"	c
N_REPS	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/weighted_index.rs	/^        const N_REPS: u32 = 5000;$/;"	c
N_REPS	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^        const N_REPS: u32 = 3000;$/;"	c
NaiveDate	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^pub struct NaiveDate {$/;"	s
NaiveDateDaysIterator	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^pub struct NaiveDateDaysIterator {$/;"	s
NaiveDateTime	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^pub struct NaiveDateTime {$/;"	s
NaiveDateTimeFromMilliSecondsVisitor	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        struct NaiveDateTimeFromMilliSecondsVisitor;$/;"	s
NaiveDateTimeFromNanoSecondsVisitor	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        struct NaiveDateTimeFromNanoSecondsVisitor;$/;"	s
NaiveDateTimeFromSecondsVisitor	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        struct NaiveDateTimeFromSecondsVisitor;$/;"	s
NaiveDateTimeVisitor	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    struct NaiveDateTimeVisitor;$/;"	s
NaiveDateVisitor	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    struct NaiveDateVisitor;$/;"	s
NaiveDateWeeksIterator	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^pub struct NaiveDateWeeksIterator {$/;"	s
NaiveTime	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^pub struct NaiveTime {$/;"	s
NaiveTimeVisitor	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    struct NaiveTimeVisitor;$/;"	s
NanoSecondsTimestampVisitor	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub struct NanoSecondsTimestampVisitor;$/;"	s
NeverToken	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/never.rs	/^pub type NeverToken = ();$/;"	T
NullWatcher	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/null.rs	/^pub struct NullWatcher;$/;"	s
Numeric	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub enum Numeric {$/;"	g
OL_TO_MDL	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^static OL_TO_MDL: [u8; MAX_OL as usize + 1] = [$/;"	c
ONCE	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            static ONCE: Once = ONCE_INIT;$/;"	c
ONCE	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        static ONCE: Once = ONCE_INIT;$/;"	c
OUT_OF_RANGE	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^const OUT_OF_RANGE: ParseError = ParseError(ParseErrorKind::OutOfRange);$/;"	c
ObservedCell	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^pub struct ObservedCell {$/;"	s
ObservedLine	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^pub struct ObservedLine<'a> {$/;"	s
ObservedPiece	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^pub struct ObservedPiece<'a> {$/;"	s
ObservedPieceInterface	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^pub trait ObservedPieceInterface {$/;"	t
ObservedScreen	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^pub struct ObservedScreen {$/;"	s
ObservedScreenView	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed_screen_view.rs	/^pub struct ObservedScreenView {$/;"	s
ObservedStyle	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^pub struct ObservedStyle {$/;"	s
Of	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^pub struct Of(pub u32);$/;"	s
Offset	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    type Offset = FixedOffset;$/;"	T
Offset	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    type Offset = FixedOffset;$/;"	T
Offset	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    type Offset: Offset;$/;"	T
Offset	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^pub trait Offset: Sized + Clone + fmt::Debug {$/;"	t
Offset	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^    type Offset = Utc;$/;"	T
Ok	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    type Ok = ();$/;"	T
Ok	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    type Ok = String;$/;"	T
OnSortCallback	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^type OnSortCallback<H> = Rc<dyn Fn(&mut Cursive, H, Ordering)>;$/;"	T
Op	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^        pub struct Op: u32 {$/;"	s
Open01	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/float.rs	/^pub struct Open01;$/;"	s
OpenClosed01	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/float.rs	/^pub struct OpenClosed01;$/;"	s
Operation	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^pub struct Operation(usize);$/;"	s
OperationsBuffer	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/mod.rs	/^pub type OperationsBuffer = Arc<Mutex<OperationsBufferInner>>;$/;"	T
OperationsBufferInner	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/mod.rs	/^pub type OperationsBufferInner = HashMap<PathBuf, (Option<op::Op>, Option<PathBuf>, Option<u64>)>;$/;"	T
OptionMilliSecondsTimestampVisitor	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        struct OptionMilliSecondsTimestampVisitor;$/;"	s
OptionNanoSecondsTimestampVisitor	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        struct OptionNanoSecondsTimestampVisitor;$/;"	s
OptionSecondsTimestampVisitor	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        struct OptionSecondsTimestampVisitor;$/;"	s
OutOfRangeError	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^pub struct OutOfRangeError(());$/;"	s
OutOfRangeError	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^pub struct OutOfRangeError(());$/;"	s
Output	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    type Output = Date<Tz>;$/;"	T
Output	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    type Output = OldDuration;$/;"	T
Output	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    type Output = DateTime<Tz>;$/;"	T
Output	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    type Output = OldDuration;$/;"	T
Output	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    type Output = NaiveDate;$/;"	T
Output	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    type Output = OldDuration;$/;"	T
Output	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    type Output = NaiveDateTime;$/;"	T
Output	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    type Output = OldDuration;$/;"	T
Output	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    type Output = NaiveTime;$/;"	T
Output	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    type Output = OldDuration;$/;"	T
Output	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    type Output = DateTime<Tz>;$/;"	T
Output	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    type Output = NaiveDateTime;$/;"	T
Output	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    type Output = NaiveTime;$/;"	T
Output	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    type Output = Duration;$/;"	T
Output	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^                type Output = ($ty, $ty);$/;"	T
Output	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^            type Output = ($ty, $ty);$/;"	T
Output	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^            type Output = (usize, usize);$/;"	T
Output	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^    type Output;$/;"	T
Output	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    type Output = Duration;$/;"	T
Output	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    type Output = Duration;$/;"	T
Output	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    type Output = SteadyTime;$/;"	T
Output	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    type Output = Timespec;$/;"	T
Output	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    type Output = Tm;$/;"	T
Output	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            type Output = Duration;$/;"	T
Output	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            type Output = SteadyTime;$/;"	T
Output	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        type Output = Duration;$/;"	T
Output	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        type Output = SteadyTime;$/;"	T
Output	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^    type Output = Option<ObservedCell>;$/;"	T
OwningHandle	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^pub struct OwningHandle<O, H>$/;"	s
OwningRef	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^pub struct OwningRef<O, T: ?Sized> {$/;"	s
OwningRefMut	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^pub struct OwningRefMut<O, T: ?Sized> {$/;"	s
P	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/bernoulli.rs	/^        const P: f64 = 0.3;$/;"	c
PHI	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/xoshiro128plusplus.rs	/^        const PHI: u64 = 0x9e3779b97f4a7c15;$/;"	c
PHI	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/xoshiro256plusplus.rs	/^        const PHI: u64 = 0x9e3779b97f4a7c15;$/;"	c
PREFIX	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        const PREFIX: &'static [Item<'static>] = &[$/;"	c
Packet	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/zero.rs	/^struct Packet<T> {$/;"	s
Pad	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub enum Pad {$/;"	g
PaletteColor	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^                pub enum PaletteColor {$/;"	g
ParseError	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub struct ParseError(ParseErrorKind);$/;"	s
ParseError	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub enum ParseError {$/;"	g
ParseErrorKind	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^enum ParseErrorKind {$/;"	g
ParseMonthError	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^pub struct ParseMonthError {$/;"	s
ParseResult	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub type ParseResult<T> = Result<T, ParseError>;$/;"	T
ParseWeekdayError	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^pub struct ParseWeekdayError {$/;"	s
Parsed	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^pub struct Parsed {$/;"	s
PathData	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/poll.rs	/^struct PathData {$/;"	s
PollWatcher	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/poll.rs	/^pub struct PollWatcher {$/;"	s
Position	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^struct Position<T> {$/;"	s
PreciseTime	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub struct PreciseTime(u64);$/;"	s
RANGE	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/other.rs	/^        const RANGE: u32 = 26 + 26 + 10;$/;"	c
READ	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^const READ: usize = 2;$/;"	c
RECONS	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^                            const RECONS: &'static [Item<'static>] = &[$($tail),+];$/;"	c
REGISTER	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/reseeding.rs	/^        static REGISTER: Once = Once::new();$/;"	c
REMOVE	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^            const REMOVE      = 0b000_0100;$/;"	c
REMOVE	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    pub const REMOVE: Op = Op::REMOVE;$/;"	c
RENAME	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^            const RENAME      = 0b000_1000;$/;"	c
RENAME	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    pub const RENAME: Op = Op::RENAME;$/;"	c
RESCAN	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^            const RESCAN      = 0b100_0000;$/;"	c
RESCAN	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    pub const RESCAN: Op = Op::RESCAN;$/;"	c
RESEEDING_RNG_FORK_COUNTER	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/reseeding.rs	/^    static RESEEDING_RNG_FORK_COUNTER: AtomicUsize = AtomicUsize::new(0);$/;"	c
RFC850_FMT	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^    static RFC850_FMT: &'static str = "%A, %d-%b-%y %T GMT";$/;"	c
RNG	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/utils.rs	/^        static RNG: Cell<Wrapping<u32>> = Cell::new(Wrapping(1_406_868_647));$/;"	c
RawEvent	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^pub struct RawEvent {$/;"	s
RcRef	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^pub type RcRef<T, U = T> = OwningRef<Rc<T>, U>;$/;"	T
ReadData	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^struct ReadData {$/;"	s
ReadDirectoryChangesServer	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^struct ReadDirectoryChangesServer {$/;"	s
ReadDirectoryChangesWatcher	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^pub struct ReadDirectoryChangesWatcher {$/;"	s
ReadDirectoryRequest	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^struct ReadDirectoryRequest {$/;"	s
ReadError	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/read.rs	/^pub struct ReadError(std::io::Error);$/;"	s
ReadRng	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/read.rs	/^pub struct ReadRng<R> {$/;"	s
ReadyTimeoutError	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/err.rs	/^pub struct ReadyTimeoutError;$/;"	s
Receiver	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^pub struct Receiver<T> {$/;"	s
Receiver	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/counter.rs	/^pub struct Receiver<C> {$/;"	s
Receiver	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/array.rs	/^pub struct Receiver<'a, T>(&'a Channel<T>);$/;"	s
Receiver	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^pub struct Receiver<'a, T>(&'a Channel<T>);$/;"	s
Receiver	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/zero.rs	/^pub struct Receiver<'a, T>(&'a Channel<T>);$/;"	s
ReceiverFlavor	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^enum ReceiverFlavor<T> {$/;"	g
RecommendedWatcher	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^pub type RecommendedWatcher = FsEventWatcher;$/;"	T
RecommendedWatcher	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^pub type RecommendedWatcher = INotifyWatcher;$/;"	T
RecommendedWatcher	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^pub type RecommendedWatcher = PollWatcher;$/;"	T
RecommendedWatcher	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^pub type RecommendedWatcher = ReadDirectoryChangesWatcher;$/;"	T
RecursiveMode	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^pub enum RecursiveMode {$/;"	g
RecvError	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/err.rs	/^pub struct RecvError;$/;"	s
RecvTimeoutError	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/err.rs	/^pub enum RecvTimeoutError {$/;"	g
RefMutRef	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^pub type RefMutRef<'a, T, U = T> = OwningRef<RefMut<'a, T>, U>;$/;"	T
RefMutRefMut	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^pub type RefMutRefMut<'a, T, U = T> = OwningRefMut<RefMut<'a, T>, U>;$/;"	T
RefRef	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^pub type RefRef<'a, T, U = T> = OwningRef<Ref<'a, T>, U>;$/;"	T
ReseedingCore	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/reseeding.rs	/^struct ReseedingCore<R, Rsdr> {$/;"	s
ReseedingRng	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/reseeding.rs	/^pub struct ReseedingRng<R, Rsdr>(BlockRng<ReseedingCore<R, Rsdr>>)$/;"	s
Result	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/error.rs	/^pub type Result<T> = result::Result<T, ConfigError>;$/;"	T
Result	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^pub type Result<T> = StdResult<T, Error>;$/;"	T
Result	/home/artie/Documents/Repos/fs_extra/src/error.rs	/^pub type Result<T> = ::std::result::Result<T, Error>;$/;"	T
Results	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/reseeding.rs	/^    type Results = <R as BlockRngCore>::Results;$/;"	T
Rng	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rng.rs	/^pub trait Rng: RngCore {$/;"	t
Rng	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/small.rs	/^type Rng = super::xoshiro128plusplus::Xoshiro128PlusPlus;$/;"	T
Rng	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/small.rs	/^type Rng = super::xoshiro256plusplus::Xoshiro256PlusPlus;$/;"	T
RoundingError	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^pub enum RoundingError {$/;"	g
RwLockReadGuardRef	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^pub type RwLockReadGuardRef<'a, T, U = T> = OwningRef<RwLockReadGuard<'a, T>, U>;$/;"	T
RwLockWriteGuardRef	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^pub type RwLockWriteGuardRef<'a, T, U = T> = OwningRef<RwLockWriteGuard<'a, T>, U>;$/;"	T
RwLockWriteGuardRefMut	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^pub type RwLockWriteGuardRefMut<'a, T, U = T> = OwningRefMut<RwLockWriteGuard<'a, T>, U>;$/;"	T
SCALE	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^    static SCALE: [i64; 10] =$/;"	c
SCALE	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/bernoulli.rs	/^const SCALE: f64 = 2.0 * (1u64 << 63) as f64;$/;"	c
SECS_PER_DAY	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^const SECS_PER_DAY: i64 = 86400;$/;"	c
SECS_PER_DAY	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^const SECS_PER_DAY: i64 = 86400;$/;"	c
SECS_PER_HOUR	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^const SECS_PER_HOUR: i64 = 3600;$/;"	c
SECS_PER_HOUR	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^const SECS_PER_HOUR: i64 = 3600;$/;"	c
SECS_PER_MINUTE	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^const SECS_PER_MINUTE: i64 = 60;$/;"	c
SECS_PER_MINUTE	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^const SECS_PER_MINUTE: i64 = 60;$/;"	c
SECS_PER_WEEK	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^const SECS_PER_WEEK: i64 = 604800;$/;"	c
SECS_PER_WEEK	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^const SECS_PER_WEEK: i64 = 604800;$/;"	c
SE_PRIVILEGE_ENABLED	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        const SE_PRIVILEGE_ENABLED: DWORD = 2;$/;"	c
SHIFT	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^const SHIFT: usize = 1;$/;"	c
SOME_FUTURE_DATE	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^        static SOME_FUTURE_DATE: i64 = i32::MAX as i64; \/\/ Y2038$/;"	c
SOME_RECENT_DATE	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^        static SOME_RECENT_DATE: i64 = 1577836800i64; \/\/ 2020-01-01T00:00:00Z$/;"	c
SampleBorrow	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^pub trait SampleBorrow<Borrowed> {$/;"	t
SampleRange	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^pub trait SampleRange<T> {$/;"	t
SampleUniform	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^pub trait SampleUniform: Sized {$/;"	t
Sampler	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^            type Sampler = UniformFloat<$ty>;$/;"	T
Sampler	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^            type Sampler = UniformInt<$ty>;$/;"	T
Sampler	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^            type Sampler = UniformMyF32;$/;"	T
Sampler	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    type Sampler = UniformChar;$/;"	T
Sampler	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    type Sampler = UniformDuration;$/;"	T
Sampler	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    type Sampler: UniformSampler<X = Self>;$/;"	T
ScheduleWorker	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/timer.rs	/^struct ScheduleWorker {$/;"	s
ScheduledEvent	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/timer.rs	/^struct ScheduledEvent {$/;"	s
SecondsFormat	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^pub enum SecondsFormat {$/;"	g
SecondsTimestampVisitor	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub struct SecondsTimestampVisitor;$/;"	s
Seed	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/small.rs	/^    type Seed = <Rng as SeedableRng>::Seed;$/;"	T
Seed	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/std.rs	/^    type Seed = <Rng as SeedableRng>::Seed;$/;"	T
Seed	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/xoshiro128plusplus.rs	/^    type Seed = [u8; 16];$/;"	T
Seed	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/xoshiro256plusplus.rs	/^    type Seed = [u8; 32];$/;"	T
Select	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^pub struct Select<'a> {$/;"	s
SelectHandle	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^pub trait SelectHandle {$/;"	t
SelectTimeoutError	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/err.rs	/^pub struct SelectTimeoutError;$/;"	s
Selected	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^pub enum Selected {$/;"	g
SelectedOperation	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^pub struct SelectedOperation<'a> {$/;"	s
SendError	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/err.rs	/^pub struct SendError<T>(pub T);$/;"	s
SendTimeoutError	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/err.rs	/^pub enum SendTimeoutError<T> {$/;"	g
Sender	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^pub struct Sender<T> {$/;"	s
Sender	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/counter.rs	/^pub struct Sender<C> {$/;"	s
Sender	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/array.rs	/^pub struct Sender<'a, T>(&'a Channel<T>);$/;"	s
Sender	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^pub struct Sender<'a, T>(&'a Channel<T>);$/;"	s
Sender	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/zero.rs	/^pub struct Sender<'a, T>(&'a Channel<T>);$/;"	s
SenderFlavor	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^enum SenderFlavor<T> {$/;"	g
SeqAccess	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^struct SeqAccess {$/;"	s
SerdeError	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^enum SerdeError<V: fmt::Display, D: fmt::Display> {$/;"	g
SerializeMap	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    type SerializeMap = Self;$/;"	T
SerializeSeq	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    type SerializeSeq = Self;$/;"	T
SerializeStruct	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    type SerializeStruct = Self;$/;"	T
SerializeStructVariant	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    type SerializeStructVariant = Self;$/;"	T
SerializeTuple	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    type SerializeTuple = Self;$/;"	T
SerializeTupleStruct	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    type SerializeTupleStruct = Self;$/;"	T
SerializeTupleVariant	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    type SerializeTupleVariant = Self;$/;"	T
Setter	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^                type Setter = fn(&mut Parsed, i64) -> ParseResult<()>;$/;"	T
SimpleColumn	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    enum SimpleColumn {$/;"	g
SimpleItem	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    struct SimpleItem {$/;"	s
SliceChooseIter	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^pub struct SliceChooseIter<'a, S: ?Sized + 'a, T: 'a> {$/;"	s
SliceRandom	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^pub trait SliceRandom {$/;"	t
Slot	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/array.rs	/^struct Slot<T> {$/;"	s
Slot	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^struct Slot<T> {$/;"	s
SmallRng	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/small.rs	/^pub struct SmallRng(Rng);$/;"	s
Source	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/source.rs	/^pub trait Source: Debug {$/;"	t
Spinlock	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/utils.rs	/^pub struct Spinlock<T> {$/;"	s
SpinlockGuard	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/utils.rs	/^pub struct SpinlockGuard<'a, T> {$/;"	s
StableDeref	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/stable_deref_trait-1.2.0/src/lib.rs	/^pub unsafe trait StableDeref: Deref {}$/;"	t
Standard	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/mod.rs	/^pub struct Standard;$/;"	s
StdRng	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/std.rs	/^pub struct StdRng(Rng);$/;"	s
Stdout	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/crossterm.rs	/^type Stdout = File;$/;"	T
Stdout	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/crossterm.rs	/^type Stdout = io::Stdout;$/;"	T
SteadyTime	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub struct SteadyTime(sys::SteadyTime);$/;"	s
SteadyTime	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        pub struct SteadyTime { t: u64 }$/;"	s
SteadyTime	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        pub struct SteadyTime {$/;"	s
SteadyTime	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub struct SteadyTime {$/;"	s
SteadyTime	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub struct SteadyTime;$/;"	s
StepRng	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/mock.rs	/^pub struct StepRng {$/;"	s
Storage	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/storage.rs	/^pub struct Storage<T> {$/;"	s
StrDeserializer	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^struct StrDeserializer<'a>(&'a str);$/;"	s
StreamContextInfo	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^struct StreamContextInfo {$/;"	s
StrftimeItems	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^pub struct StrftimeItems<'a> {$/;"	s
StringKeySerializer	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^pub struct StringKeySerializer;$/;"	s
StringRef	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^pub type StringRef = OwningRef<String, str>;$/;"	T
StringRefMut	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^pub type StringRefMut = OwningRefMut<String, str>;$/;"	T
SubsecRound	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^pub trait SubsecRound {$/;"	t
SyncWaker	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/waker.rs	/^pub struct SyncWaker {$/;"	s
THREAD_ID	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/waker.rs	/^        static THREAD_ID: ThreadId = thread::current().id();$/;"	c
THREAD_RNG_KEY	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/thread.rs	/^    static THREAD_RNG_KEY: Rc<UnsafeCell<ReseedingRng<Core, OsRng>>> = {$/;"	c
THREAD_RNG_RESEED_THRESHOLD	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/thread.rs	/^const THREAD_RNG_RESEED_THRESHOLD: u64 = 1024 * 64;$/;"	c
TIME_ITEMS	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^        const TIME_ITEMS: &'static [Item<'static>] = &[$/;"	c
TOO_LONG	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^const TOO_LONG: ParseError = ParseError(ParseErrorKind::TooLong);$/;"	c
TOO_SHORT	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^const TOO_SHORT: ParseError = ParseError(ParseErrorKind::TooShort);$/;"	c
T_FMT	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^static T_FMT: &'static [Item<'static>] =$/;"	c
Table	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^pub type Table = HashMap<String, Value>;$/;"	T
Table	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/thread_local/mod.rs	/^struct Table<T> {$/;"	s
TableColumn	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^pub struct TableColumn<H> {$/;"	s
TableColumnWidth	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^enum TableColumnWidth {$/;"	g
TableEntry	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/thread_local/mod.rs	/^struct TableEntry<T> {$/;"	s
TableView	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^pub struct TableView<T, H> {$/;"	s
TableViewItem	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^pub trait TableViewItem<H>: Clone + Sized$/;"	t
Target	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        type Target = DateTime<Tz>;$/;"	T
Target	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        type Target = NaiveDateTime;$/;"	T
Target	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/counter.rs	/^    type Target = C;$/;"	T
Target	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/utils.rs	/^    type Target = T;$/;"	T
Target	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    type Target = H::Target;$/;"	T
Target	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    type Target = T;$/;"	T
Target	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/stable_deref_trait-1.2.0/src/lib.rs	/^    type Target = str;$/;"	T
Target	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/stable_deref_trait-1.2.0/src/lib.rs	/^    type Target = u8;$/;"	T
Target	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_text_view.rs	/^    type Target = StyledString;$/;"	T
Target	/home/artie/Documents/Repos/smallB_cursive/cursive/src/cursive_runnable.rs	/^    type Target = Cursive;$/;"	T
Test	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        struct Test {$/;"	s
Test	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^        struct Test {$/;"	s
TextContent	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_text_view.rs	/^pub struct TextContent {$/;"	s
TextContentInner	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_text_view.rs	/^struct TextContentInner {$/;"	s
TextContentRef	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_text_view.rs	/^pub struct TextContentRef {$/;"	s
ThreadId	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/thread_local/thread_id.rs	/^struct ThreadId(usize);$/;"	s
ThreadIdManager	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/thread_local/thread_id.rs	/^struct ThreadIdManager {$/;"	s
ThreadLocal	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/thread_local/mod.rs	/^pub struct ThreadLocal<T> {$/;"	s
ThreadRng	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/thread.rs	/^pub struct ThreadRng {$/;"	s
TickToken	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/tick.rs	/^pub type TickToken = Option<Instant>;$/;"	T
TimeZone	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^pub trait TimeZone: Sized + Clone {$/;"	t
Timelike	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^pub trait Timelike: Sized {$/;"	t
Timeout	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^enum Timeout {$/;"	g
Timespec	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^pub struct Timespec {$/;"	s
Timespec	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub struct Timespec { pub sec: i64, pub nsec: i32 }$/;"	s
Tm	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^pub struct Tm {$/;"	s
Tm	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub struct Tm {$/;"	s
TmFmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub struct TmFmt<'a> {$/;"	s
ToHandle	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^pub trait ToHandle {$/;"	t
ToHandleMut	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^pub trait ToHandleMut {$/;"	t
Token	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^pub struct Token {$/;"	s
TransitProcess	/home/artie/Documents/Repos/fs_extra/src/dir.rs	/^pub struct TransitProcess {$/;"	s
TransitProcess	/home/artie/Documents/Repos/fs_extra/src/file.rs	/^pub struct TransitProcess {$/;"	s
TransitProcess	/home/artie/Documents/Repos/fs_extra/src/lib.rs	/^pub struct TransitProcess {$/;"	s
TransitProcessResult	/home/artie/Documents/Repos/fs_extra/src/dir.rs	/^pub enum TransitProcessResult {$/;"	g
TransitState	/home/artie/Documents/Repos/fs_extra/src/dir.rs	/^pub enum TransitState {$/;"	g
TryIter	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^pub struct TryIter<'a, T> {$/;"	s
TryReadyError	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/err.rs	/^pub struct TryReadyError;$/;"	s
TryRecvError	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/err.rs	/^pub enum TryRecvError {$/;"	g
TrySelectError	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/err.rs	/^pub struct TrySelectError;$/;"	s
TrySendError	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/err.rs	/^pub enum TrySendError<T> {$/;"	g
TsSeconds	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub struct TsSeconds<Tz: TimeZone>(DateTime<Tz>);$/;"	s
TsSeconds	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub struct TsSeconds(NaiveDateTime);$/;"	s
TypeMap	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/container.rs	/^type TypeMap = HashMap<TypeId, AnyObject, BuildHasherDefault<IdentHash>>;$/;"	T
TzReset	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    struct TzReset {$/;"	s
TzReset	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub struct TzReset {$/;"	s
TzReset	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub struct TzReset;$/;"	s
UInt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^            type UInt = $uty;$/;"	T
UInt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^    type UInt;$/;"	T
UInt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^trait UInt: Copy + PartialOrd + Ord + PartialEq + Eq + SampleUniform$/;"	t
UNICODE_VERSION	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-width-0.1.8/src/tables.rs	/^pub const UNICODE_VERSION: (u8, u8, u8) = (13, 0, 0);$/;"	c
UNIX_EPOCH_DAY	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        const UNIX_EPOCH_DAY: i64 = 719_163;$/;"	c
UncheckedOptionExt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/thread_local/unreachable.rs	/^pub trait UncheckedOptionExt<T> {$/;"	t
UncheckedResultExt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/thread_local/unreachable.rs	/^pub trait UncheckedResultExt<T, E> {$/;"	t
Unexpected	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/error.rs	/^pub enum Unexpected {$/;"	g
UnhintedIterator	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^    struct UnhintedIterator<I: Iterator + Clone> {$/;"	s
UnicodeWidthChar	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-width-0.1.8/src/lib.rs	/^pub trait UnicodeWidthChar {$/;"	t
UnicodeWidthStr	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-width-0.1.8/src/lib.rs	/^pub trait UnicodeWidthStr {$/;"	t
Uniform	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^pub struct Uniform<X: SampleUniform>(X::Sampler);$/;"	s
UniformChar	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^pub struct UniformChar {$/;"	s
UniformDuration	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^pub struct UniformDuration {$/;"	s
UniformDurationMode	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^enum UniformDurationMode {$/;"	g
UniformFloat	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^pub struct UniformFloat<X> {$/;"	s
UniformInt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^pub struct UniformInt<X> {$/;"	s
UniformMyF32	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^        struct UniformMyF32(UniformFloat<f32>);$/;"	s
UniformSampler	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^pub trait UniformSampler: Sized {$/;"	t
Utc	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^pub struct Utc;$/;"	s
V	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog_try.rs	/^        type V = $t;$/;"	T
Value	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            type Value = DateTime<Utc>;$/;"	T
Value	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            type Value = Option<DateTime<Utc>>;$/;"	T
Value	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        type Value = DateTime<FixedOffset>;$/;"	T
Value	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^        type Value = Month;$/;"	T
Value	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^        type Value = Weekday;$/;"	T
Value	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^        type Value = NaiveDate;$/;"	T
Value	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^            type Value = NaiveDateTime;$/;"	T
Value	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        type Value = NaiveDateTime;$/;"	T
Value	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^        type Value = NaiveTime;$/;"	T
Value	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^            type Value = Value;$/;"	T
Value	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^pub struct Value {$/;"	s
ValueKind	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^pub enum ValueKind {$/;"	g
ValueVisitor	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^        struct ValueVisitor;$/;"	s
ValueWithKey	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^pub struct ValueWithKey<'a>(pub Value, &'a str);$/;"	s
Variant	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^    type Variant = Self;$/;"	T
VecRef	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^pub type VecRef<T, U = T> = OwningRef<Vec<T>, U>;$/;"	T
VecRefMut	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^pub type VecRefMut<T, U = T> = OwningRefMut<Vec<T>, U>;$/;"	T
Void	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^enum Void {}$/;"	g
Void	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/thread_local/unreachable.rs	/^    enum Void { }$/;"	g
WRITE	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^const WRITE: usize = 1;$/;"	c
WRITE	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^            const WRITE       = 0b001_0000;$/;"	c
WRITE	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    pub const WRITE: Op = Op::WRITE;$/;"	c
Waker	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/waker.rs	/^pub struct Waker {$/;"	s
WatchData	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/poll.rs	/^struct WatchData {$/;"	s
WatchState	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^struct WatchState {$/;"	s
WatchTimer	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/timer.rs	/^pub struct WatchTimer {$/;"	s
Watcher	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^pub trait Watcher: Sized {$/;"	t
Weekday	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^pub enum Weekday {$/;"	g
WeekdayVisitor	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    struct WeekdayVisitor;$/;"	s
Weight	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/weighted.rs	/^    pub trait Weight {}$/;"	t
WeightedError	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/weighted_index.rs	/^pub enum WeightedError {$/;"	g
WeightedIndex	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/weighted.rs	/^    pub struct WeightedIndex<W: Weight> {$/;"	s
WeightedIndex	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/weighted_index.rs	/^pub struct WeightedIndex<X: SampleUniform + PartialOrd> {$/;"	s
WindowHintedIterator	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^    struct WindowHintedIterator<I: ExactSizeIterator + Iterator + Clone> {$/;"	s
X	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^            type X = $ty;$/;"	T
X	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^            type X = MyF32;$/;"	T
X	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    type X = Duration;$/;"	T
X	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    type X = char;$/;"	T
X	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    type X;$/;"	T
XX	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^const XX: i8 = -128;$/;"	c
Xoshiro128PlusPlus	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/xoshiro128plusplus.rs	/^pub struct Xoshiro128PlusPlus {$/;"	s
Xoshiro256PlusPlus	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/xoshiro256plusplus.rs	/^pub struct Xoshiro256PlusPlus {$/;"	s
YEAR_DELTAS	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^static YEAR_DELTAS: [u8; 401] = [$/;"	c
YEAR_TO_FLAGS	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^static YEAR_TO_FLAGS: [YearFlags; 400] = [$/;"	c
YTAB	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/stub.rs	/^    static YTAB: [[i64; 12]; 2] = [$/;"	c
YearFlags	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^pub struct YearFlags(pub u8);$/;"	s
ZeroToken	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/zero.rs	/^pub type ZeroToken = usize;$/;"	T
_LEN	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select_macro.rs	/^        const _LEN: usize = $crate::crossbeam_channel_internal!(@count ($($cases)*));$/;"	c
_get_dir_content	/home/artie/Documents/Repos/fs_extra/src/dir.rs	/^fn _get_dir_content<P>(path: P, mut depth: u64) -> Result<DirContent>$/;"	f
_ytab	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        static _ytab: [[i64; 12]; 2] = [$/;"	c
a_const	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^const a_const: i128 = 0;$/;"	c
abs	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn abs(&self) -> Duration {$/;"	f
abs	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/display.rs	/^fn abs(i: i32) -> i32 {$/;"	f
accept	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^    fn accept(&self, token: &mut Token, cx: &Context) -> bool {$/;"	f
accept	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/array.rs	/^    fn accept(&self, token: &mut Token, _cx: &Context) -> bool {$/;"	f
accept	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/at.rs	/^    fn accept(&self, token: &mut Token, _cx: &Context) -> bool {$/;"	f
accept	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^    fn accept(&self, token: &mut Token, _cx: &Context) -> bool {$/;"	f
accept	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/never.rs	/^    fn accept(&self, token: &mut Token, _cx: &Context) -> bool {$/;"	f
accept	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/tick.rs	/^    fn accept(&self, token: &mut Token, _cx: &Context) -> bool {$/;"	f
accept	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/zero.rs	/^    fn accept(&self, token: &mut Token, cx: &Context) -> bool {$/;"	f
accept	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^    fn accept(&self, token: &mut Token, cx: &Context) -> bool {$/;"	f
accept	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^    fn accept(&self, token: &mut Token, cx: &Context) -> bool;$/;"	f
acquire	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/counter.rs	/^    pub fn acquire(&self) -> Receiver<C> {$/;"	f
acquire	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/counter.rs	/^    pub fn acquire(&self) -> Sender<C> {$/;"	f
acquire_privileges	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn acquire_privileges() {$/;"	f
active_column	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    fn active_column(&self) -> usize {$/;"	f
add	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn add(self, rhs: OldDuration) -> Date<Tz> {$/;"	f
add	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn add(self, rhs: OldDuration) -> DateTime<Tz> {$/;"	f
add	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn add(self, rhs: OldDuration) -> NaiveDate {$/;"	f
add	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn add(self, rhs: OldDuration) -> NaiveDateTime {$/;"	f
add	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn add(self, rhs: OldDuration) -> NaiveTime {$/;"	f
add	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn add(self, rhs: FixedOffset) -> DateTime<Tz> {$/;"	f
add	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn add(self, rhs: FixedOffset) -> NaiveDateTime {$/;"	f
add	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn add(self, rhs: FixedOffset) -> NaiveTime {$/;"	f
add	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn add(self, rhs: Duration) -> Duration {$/;"	f
add	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn add(self, rhs: Duration) -> Duration {$/;"	f
add	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn add(self, other: Duration) -> SteadyTime {$/;"	f
add	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn add(self, other: Duration) -> Timespec {$/;"	f
add	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn add(self, other: Duration) -> Tm {$/;"	f
add	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            fn add(mut self, other: Duration) -> SteadyTime {$/;"	f
add	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            fn add(self, other: Duration) -> SteadyTime {$/;"	f
add	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        fn add(mut self, other: Duration) -> SteadyTime {$/;"	f
add	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        fn add(self, _other: Duration) -> SteadyTime {$/;"	f
add	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        fn add(self, other: Duration) -> SteadyTime {$/;"	f
add_assign	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn add_assign(&mut self, rhs: OldDuration) {$/;"	f
add_assign	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn add_assign(&mut self, rhs: OldDuration) {$/;"	f
add_assign	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn add_assign(&mut self, rhs: OldDuration) {$/;"	f
add_button	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn add_button<F, S: Into<String>>(&mut self, label: S, cb: F)$/;"	f
add_column	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn add_column<S: Into<String>, C: FnOnce(TableColumn<H>) -> TableColumn<H>>(&mut self, column: H, title: S, callback: C) {$/;"	f
add_fn	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/n.rs	/^fn add_fn<F>(start: i32, with_key: F, map: &mut HashMap<i32, Event>)$/;"	f
add_single_watch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    fn add_single_watch($/;"	f
add_watch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    fn add_watch(&mut self, path: PathBuf, is_recursive: bool, mut watch_self: bool) -> Result<()> {$/;"	f
add_watch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    fn add_watch(&mut self, path: PathBuf, is_recursive: bool) -> Result<PathBuf> {$/;"	f
add_watch_by_event	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^fn add_watch_by_event($/;"	f
add_with_leapsecond	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^fn add_with_leapsecond<T>(lhs: &T, rhs: i32) -> T$/;"	f
after	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^pub fn after(duration: Duration) -> Receiver<Instant> {$/;"	f
alias_method	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/weighted.rs	/^pub mod alias_method {$/;"	m
align	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_text_view.rs	/^    pub fn align(mut self, a: Align) -> Self {$/;"	f
align	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn align(mut self, alignment: HAlign) -> Self {$/;"	f
all	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^    fn all(self) -> bool {$/;"	f
all	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^    fn all(self) -> bool;$/;"	f
all_finite	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^            fn all_finite(self) -> bool {$/;"	f
all_finite	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^    fn all_finite(self) -> bool;$/;"	f
all_le	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^            fn all_le(self, other: Self) -> bool {$/;"	f
all_le	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^    fn all_le(self, other: Self) -> bool;$/;"	f
all_lt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^            fn all_lt(self, other: Self) -> bool {$/;"	f
all_lt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^    fn all_lt(self, other: Self) -> bool;$/;"	f
alloc	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/thread_local/thread_id.rs	/^    fn alloc(&mut self) -> usize {$/;"	f
altzone	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/unix.rs	/^    static altzone: time_t;$/;"	c
altzone	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        static altzone: time_t;$/;"	c
and_hms	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn and_hms(&self, hour: u32, min: u32, sec: u32) -> DateTime<Tz> {$/;"	f
and_hms	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn and_hms(&self, hour: u32, min: u32, sec: u32) -> NaiveDateTime {$/;"	f
and_hms_micro	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn and_hms_micro(&self, hour: u32, min: u32, sec: u32, micro: u32) -> DateTime<Tz> {$/;"	f
and_hms_micro	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn and_hms_micro(&self, hour: u32, min: u32, sec: u32, micro: u32) -> NaiveDateTime {$/;"	f
and_hms_micro_opt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn and_hms_micro_opt($/;"	f
and_hms_micro_opt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn and_hms_micro_opt($/;"	f
and_hms_micro_opt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    pub fn and_hms_micro_opt($/;"	f
and_hms_milli	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn and_hms_milli(&self, hour: u32, min: u32, sec: u32, milli: u32) -> DateTime<Tz> {$/;"	f
and_hms_milli	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn and_hms_milli(&self, hour: u32, min: u32, sec: u32, milli: u32) -> NaiveDateTime {$/;"	f
and_hms_milli_opt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn and_hms_milli_opt($/;"	f
and_hms_milli_opt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn and_hms_milli_opt($/;"	f
and_hms_milli_opt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    pub fn and_hms_milli_opt($/;"	f
and_hms_nano	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn and_hms_nano(&self, hour: u32, min: u32, sec: u32, nano: u32) -> DateTime<Tz> {$/;"	f
and_hms_nano	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn and_hms_nano(&self, hour: u32, min: u32, sec: u32, nano: u32) -> NaiveDateTime {$/;"	f
and_hms_nano_opt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn and_hms_nano_opt($/;"	f
and_hms_nano_opt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn and_hms_nano_opt($/;"	f
and_hms_nano_opt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    pub fn and_hms_nano_opt($/;"	f
and_hms_opt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn and_hms_opt(&self, hour: u32, min: u32, sec: u32) -> Option<DateTime<Tz>> {$/;"	f
and_hms_opt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn and_hms_opt(&self, hour: u32, min: u32, sec: u32) -> Option<NaiveDateTime> {$/;"	f
and_hms_opt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    pub fn and_hms_opt(self, hour: u32, min: u32, sec: u32) -> LocalResult<DateTime<Tz>> {$/;"	f
and_time	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn and_time(&self, time: NaiveTime) -> Option<DateTime<Tz>> {$/;"	f
and_time	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn and_time(&self, time: NaiveTime) -> NaiveDateTime {$/;"	f
and_time	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    pub fn and_time(self, time: NaiveTime) -> LocalResult<DateTime<Tz>> {$/;"	f
anonymize	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/container.rs	/^    fn anonymize<T: 'static>(value: T) -> AnyObject {$/;"	f
any	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^    fn any(self) -> bool {$/;"	f
any	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^    fn any(self) -> bool;$/;"	f
append	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_text_view.rs	/^    pub fn append<S>(&mut self, content: S)$/;"	f
append	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_text_view.rs	/^    pub fn append<S>(&self, content: S)$/;"	f
append_path	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^    fn append_path<P: AsRef<Path>>($/;"	f
apply_colors	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/crossterm.rs	/^    fn apply_colors(&self, colors: theme::ColorPair) {$/;"	f
apply_colors	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/termion.rs	/^    fn apply_colors(&self, colors: theme::ColorPair) {$/;"	f
around	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn around<V: IntoBoxedView>(view: V) -> Self {$/;"	f
array_impl	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/other.rs	/^macro_rules! array_impl {$/;"	d
as_mut	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    fn as_mut(&mut self) -> &mut T {$/;"	f
as_option	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^    pub fn as_option(&self) -> Option<&String> {$/;"	f
as_owner	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn as_owner() {$/;"	f
as_owner	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    pub fn as_owner(&self) -> &O {$/;"	f
as_owner_mut	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    pub fn as_owner_mut(&mut self) -> &mut O {$/;"	f
as_ref	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    fn as_ref(&self) -> &T {$/;"	f
as_str	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^        fn as_str(&self) -> &str {$/;"	f
as_str	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^    fn as_str(&self) -> &str {$/;"	f
as_str	/home/artie/Documents/Repos/fs_extra/src/error.rs	/^    fn as_str(&self) -> &str {$/;"	f
as_strings	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^    fn as_strings(&self) -> Vec<String> {$/;"	f
as_usize	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^    fn as_usize(self) -> usize {$/;"	f
as_usize	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^    fn as_usize(self) -> usize;$/;"	f
asctime	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub fn asctime(&self) -> TmFmt {$/;"	f
at	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^pub fn at(when: Instant) -> Receiver<Instant> {$/;"	f
at	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub fn at(clock: Timespec) -> Tm {$/;"	f
at_utc	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub fn at_utc(clock: Timespec) -> Tm {$/;"	f
blt	/home/artie/Documents/Repos/smallB_cursive/cursive/src/cursive_runnable.rs	/^    pub fn blt() -> Self {$/;"	f
blt	/home/artie/Documents/Repos/smallB_cursive/cursive/src/lib.rs	/^pub fn blt() -> CursiveRunnable {$/;"	f
blt_colour_to_colour	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/blt.rs	/^fn blt_colour_to_colour(c: BltColor) -> Color {$/;"	f
blt_keycode_to_char	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/blt.rs	/^fn blt_keycode_to_char(kc: KeyCode, shift: bool) -> char {$/;"	f
blt_keycode_to_char_impl	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/blt.rs	/^fn blt_keycode_to_char_impl(kc: KeyCode, shift: bool) -> char {$/;"	f
blt_keycode_to_ev	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/blt.rs	/^    fn blt_keycode_to_ev($/;"	f
blt_keycode_to_key	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/blt.rs	/^fn blt_keycode_to_key(kc: KeyCode) -> Key {$/;"	f
blt_keycode_to_mouse_button	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/blt.rs	/^fn blt_keycode_to_mouse_button(kc: KeyCode) -> Option<MouseButton> {$/;"	f
borrow	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^            fn borrow<'a>(a: &'a &[i32; 2]) -> &'a i32 {$/;"	f
borrow	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^            fn borrow<'a>(a: &'a mut &mut [i32; 2]) -> &'a mut i32 {$/;"	f
borrow	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn borrow() {$/;"	f
borrow	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    fn borrow(&self) -> &T {$/;"	f
borrow	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    fn borrow(&self) -> &Borrowed {$/;"	f
borrow	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    fn borrow(&self) -> &Borrowed;$/;"	f
borrow	/home/artie/Documents/Repos/smallB_cursive/cursive/src/cursive_runnable.rs	/^    fn borrow(&self) -> &Cursive {$/;"	f
borrow_item	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn borrow_item(&self, index: usize) -> Option<&T> {$/;"	f
borrow_item_mut	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn borrow_item_mut(&mut self, index: usize) -> Option<&mut T> {$/;"	f
borrow_items	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn borrow_items(&mut self) -> &Vec<T> {$/;"	f
borrow_items_mut	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn borrow_items_mut(&mut self) -> &mut Vec<T> {$/;"	f
borrow_mut	/home/artie/Documents/Repos/smallB_cursive/cursive/src/cursive_runnable.rs	/^    fn borrow_mut(&mut self) -> &mut Cursive {$/;"	f
bounded	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^pub fn bounded<T>(cap: usize) -> (Sender<T>, Receiver<T>) {$/;"	f
boxed	/home/artie/Documents/Repos/smallB_cursive/cursive/src/cursive_runnable.rs	/^fn boxed(e: impl std::error::Error + 'static) -> Box<dyn std::error::Error> {$/;"	f
bsearch_range_value_table	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-width-0.1.8/src/tables.rs	/^    fn bsearch_range_value_table(c: char, is_cjk: bool, r: &'static [(char, char, u8, u8)]) -> u8 {$/;"	f
button	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn button<F, S: Into<String>>(self, label: S, cb: F) -> Self$/;"	f
buttons_len	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn buttons_len(&self) -> usize {$/;"	f
buttons_mut	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn buttons_mut(&mut self) -> impl Iterator<Item = &mut Button> {$/;"	f
call	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/windows.rs	/^macro_rules! call {$/;"	d
call	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    macro_rules! call {$/;"	d
call_on_any	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    fn call_on_any<'a>(&mut self, selector: &Selector<'_>, callback: AnyCb<'a>) {$/;"	f
can_select	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/waker.rs	/^    pub fn can_select(&self) -> bool {$/;"	f
cancel_operation	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^fn cancel_operation(siv: &mut cursive::Cursive) {$/;"	f
capacity	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^    pub fn capacity(&self) -> Option<usize> {$/;"	f
capacity	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/array.rs	/^    pub fn capacity(&self) -> Option<usize> {$/;"	f
capacity	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/at.rs	/^    pub fn capacity(&self) -> Option<usize> {$/;"	f
capacity	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^    pub fn capacity(&self) -> Option<usize> {$/;"	f
capacity	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/never.rs	/^    pub fn capacity(&self) -> Option<usize> {$/;"	f
capacity	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/tick.rs	/^    pub fn capacity(&self) -> Option<usize> {$/;"	f
capacity	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/zero.rs	/^    pub fn capacity(&self) -> Option<usize> {$/;"	f
cargo	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-width-0.1.8/src/tests.rs	/^fn cargo(b: &mut Bencher) {$/;"	f
cast_from_int	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^            fn cast_from_int(i: Self::UInt) -> Self {$/;"	f
cast_from_int	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^    fn cast_from_int(i: Self::UInt) -> Self;$/;"	f
cause	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/error.rs	/^    fn cause(&self) -> Option<&Error> {$/;"	f
cause	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    fn cause(&self) -> Option<&StdError> {$/;"	f
center	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_text_view.rs	/^    pub fn center(mut self) -> Self {$/;"	f
channel	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    fn channel(&self) -> mio_extras::channel::Sender<EventLoopMsg> {$/;"	f
char	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn char(s: &str, c1: u8) -> ParseResult<&str> {$/;"	f
char_to_comp_u32	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^fn char_to_comp_u32(c: char) -> u32 {$/;"	f
charwidth	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-width-0.1.8/src/tables.rs	/^pub mod charwidth {$/;"	m
charwidth_table	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-width-0.1.8/src/tables.rs	/^    const charwidth_table: &'static [(char, char, u8, u8)] = &[$/;"	c
check	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^    macro_rules! check {$/;"	d
check	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^        fn check((y1, m1, d1): (i32, u32, u32), (y2, m2, d2): (i32, u32, u32), diff: Duration) {$/;"	f
check	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^        fn check((y1, m1, d1): (i32, u32, u32), rhs: Duration, ymd: Option<(i32, u32, u32)>) {$/;"	f
check	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^        fn check(year: i32, month: u32, day: u32, ordinal: u32) {$/;"	f
check	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        fn check($/;"	f
check	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^        fn check(expected: bool, flags: YearFlags, month1: u32, day1: u32, month2: u32, day2: u32) {$/;"	f
check	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^        fn check(expected: bool, flags: YearFlags, ordinal1: u32, ordinal2: u32) {$/;"	f
check	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^        fn check(flags: YearFlags, month: u32, day: u32) {$/;"	f
check	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^        fn check(flags: YearFlags, ordinal: u32) {$/;"	f
check	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^        macro_rules! check {$/;"	d
check_focus_grab	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    fn check_focus_grab(&mut self, event: &Event) {$/;"	f
check_partial_rename	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/mod.rs	/^    fn check_partial_rename(&mut self, path: PathBuf, op: op::Op, cookie: Option<u32>) {$/;"	f
checked_add	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn checked_add(&self, rhs: &Duration) -> Option<Duration> {$/;"	f
checked_add	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn checked_add(&self, rhs: &Duration) -> Option<Duration> {$/;"	f
checked_add_signed	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn checked_add_signed(self, rhs: OldDuration) -> Option<Date<Tz>> {$/;"	f
checked_add_signed	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn checked_add_signed(self, rhs: OldDuration) -> Option<DateTime<Tz>> {$/;"	f
checked_add_signed	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn checked_add_signed(self, rhs: OldDuration) -> Option<NaiveDate> {$/;"	f
checked_add_signed	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn checked_add_signed(self, rhs: OldDuration) -> Option<NaiveDateTime> {$/;"	f
checked_sub	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn checked_sub(&self, rhs: &Duration) -> Option<Duration> {$/;"	f
checked_sub	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn checked_sub(&self, rhs: &Duration) -> Option<Duration> {$/;"	f
checked_sub_signed	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn checked_sub_signed(self, rhs: OldDuration) -> Option<Date<Tz>> {$/;"	f
checked_sub_signed	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn checked_sub_signed(self, rhs: OldDuration) -> Option<DateTime<Tz>> {$/;"	f
checked_sub_signed	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn checked_sub_signed(self, rhs: OldDuration) -> Option<NaiveDate> {$/;"	f
checked_sub_signed	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn checked_sub_signed(self, rhs: OldDuration) -> Option<NaiveDateTime> {$/;"	f
choose	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^        fn choose<I: Iterator<Item = u32>>(iter: I) -> Option<u32> {$/;"	f
choose	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^    fn choose<R>(&self, rng: &mut R) -> Option<&Self::Item>$/;"	f
choose	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^    fn choose<R>(mut self, rng: &mut R) -> Option<Self::Item>$/;"	f
choose_multiple	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^    fn choose_multiple<R>(&self, rng: &mut R, amount: usize) -> SliceChooseIter<Self, Self::Item>$/;"	f
choose_multiple	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^    fn choose_multiple<R>(mut self, rng: &mut R, amount: usize) -> Vec<Self::Item>$/;"	f
choose_multiple_fill	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^    fn choose_multiple_fill<R>(mut self, rng: &mut R, buf: &mut [Self::Item]) -> usize$/;"	f
choose_multiple_weighted	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^    fn choose_multiple_weighted<R, F, X>($/;"	f
choose_mut	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^    fn choose_mut<R>(&mut self, rng: &mut R) -> Option<&mut Self::Item>$/;"	f
choose_stable	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^    fn choose_stable<R>(mut self, rng: &mut R) -> Option<Self::Item>$/;"	f
choose_weighted	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^    fn choose_weighted<R, F, B, X>($/;"	f
choose_weighted_mut	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^    fn choose_weighted_mut<R, F, B, X>($/;"	f
clamp_day	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn clamp_day(day: u32) -> u32 {$/;"	f
clamp_month	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn clamp_month(month: u32) -> u32 {$/;"	f
clamp_ordinal	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn clamp_ordinal(ordinal: u32) -> u32 {$/;"	f
clear	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn clear(&mut self) {$/;"	f
clear	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/blt.rs	/^    fn clear(&self, color: Color) {$/;"	f
clear	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/crossterm.rs	/^    fn clear(&self, color: theme::Color) {$/;"	f
clear	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/n.rs	/^    fn clear(&self, color: Color) {$/;"	f
clear	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/pan.rs	/^    fn clear(&self, color: Color) {$/;"	f
clear	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/mod.rs	/^    fn clear(&self, clear_color: theme::Color) {$/;"	f
clear	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^    pub fn clear(&mut self, style: &Rc<ObservedStyle>) {$/;"	f
clear	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/termion.rs	/^    fn clear(&self, color: theme::Color) {$/;"	f
clear_buttons	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn clear_buttons(&mut self) {$/;"	f
clear_selected_items	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn clear_selected_items(&mut self) {$/;"	f
clone	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/source.rs	/^    fn clone(&self) -> Box<Source + Send + Sync> {$/;"	f
clone	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^    fn clone(&self) -> Select<'a> {$/;"	f
clone	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/reseeding.rs	/^    fn clone(&self) -> ReseedingCore<R, Rsdr> {$/;"	f
clone	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/reseeding.rs	/^    fn clone(&self) -> ReseedingRng<R, Rsdr> {$/;"	f
clone	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/storage.rs	/^    fn clone(&self) -> Storage<T> {$/;"	f
clone	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/thread_local/mod.rs	/^    fn clone(&self) -> TableEntry<T> {$/;"	f
clone	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            fn clone(&self) -> SteadyTime {$/;"	f
clone	/home/artie/Documents/Repos/fs_extra/src/dir.rs	/^    fn clone(&self) -> TransitProcess {$/;"	f
clone	/home/artie/Documents/Repos/fs_extra/src/lib.rs	/^    fn clone(&self) -> TransitProcess {$/;"	f
clone_into_box	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/config.rs	/^    fn clone_into_box(&self) -> Box<Source + Send + Sync> {$/;"	f
clone_into_box	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/env.rs	/^    fn clone_into_box(&self) -> Box<Source + Send + Sync> {$/;"	f
clone_into_box	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/file/mod.rs	/^    fn clone_into_box(&self) -> Box<Source + Send + Sync> {$/;"	f
clone_into_box	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/source.rs	/^    fn clone_into_box(&self) -> Box<Source + Send + Sync> {$/;"	f
clone_into_box	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/source.rs	/^    fn clone_into_box(&self) -> Box<Source + Send + Sync>;$/;"	f
cmp	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn cmp(&self, other: &Date<Tz>) -> Ordering {$/;"	f
cmp	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn cmp(&self, other: &DateTime<Tz>) -> Ordering {$/;"	f
cmp	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn cmp() {$/;"	f
cmp	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    fn cmp(&self, other: &Self) -> Ordering {$/;"	f
cmp	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^        fn cmp(&self, other: &Self) -> core::cmp::Ordering {$/;"	f
cmp	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn cmp(&self, other: &Tm) -> Ordering {$/;"	f
cmp	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            fn cmp(&self, other: &SteadyTime) -> Ordering {$/;"	f
cmp	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^        fn cmp(&self, other: &Self, column: SimpleColumn) -> Ordering$/;"	f
cmp	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    fn cmp(&self, other: &Self, column: H) -> Ordering$/;"	f
cmp	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^    fn cmp(&self, other: &Self, column: ExplorerColumn) -> std::cmp::Ordering$/;"	f
collect	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/config.rs	/^    fn collect(&self) -> Result<HashMap<String, Value>> {$/;"	f
collect	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/env.rs	/^    fn collect(&self) -> Result<HashMap<String, Value>> {$/;"	f
collect	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/file/mod.rs	/^    fn collect(&self) -> Result<HashMap<String, Value>> {$/;"	f
collect	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/source.rs	/^    fn collect(&self) -> Result<HashMap<String, Value>> {$/;"	f
collect	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/source.rs	/^    fn collect(&self) -> Result<HashMap<String, Value>>;$/;"	f
collect_to	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/source.rs	/^    fn collect_to(&self, cache: &mut Value) -> Result<()> {$/;"	f
colon_or_space	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn colon_or_space(s: &str) -> ParseResult<&str> {$/;"	f
colour_to_blt_colour	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/blt.rs	/^fn colour_to_blt_colour(clr: Color, role: ColorRole) -> BltColor {$/;"	f
column	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn column<S: Into<String>, C: FnOnce(TableColumn<H>) -> TableColumn<H>>(mut self, column: H, title: S, callback: C) -> Self {$/;"	f
column_cancel	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    fn column_cancel(&mut self) {$/;"	f
column_for_x	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    fn column_for_x(&self, mut x: usize) -> Option<usize> {$/;"	f
column_next	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    fn column_next(&mut self) -> bool {$/;"	f
column_prev	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    fn column_prev(&mut self) -> bool {$/;"	f
column_select	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    fn column_select(&mut self) -> EventResult {$/;"	f
common	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^mod common {$/;"	m
compute_rows	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_text_view.rs	/^    fn compute_rows(&mut self, size: Vec2) {$/;"	f
content	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn content<V: IntoBoxedView>(self, view: V) -> Self {$/;"	f
content	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_text_view.rs	/^    pub fn content<S>(self, content: S) -> Self$/;"	f
content_required_size	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    fn content_required_size(&mut self, req: Vec2) -> Vec2 {$/;"	f
copy	/home/artie/Documents/Repos/fs_extra/src/dir.rs	/^pub fn copy<P, Q>(from: P, to: Q, options: &CopyOptions) -> Result<u64>$/;"	f
copy	/home/artie/Documents/Repos/fs_extra/src/file.rs	/^pub fn copy<P, Q>(from: P, to: Q, options: &CopyOptions) -> Result<u64>$/;"	f
copy_engine	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^fn copy_engine(siv: &mut Cursive, paths_from: Vec<String>, path_to: PathBuf, is_recursive: bool, is_overwrite: bool) {$/;"	f
copy_items	/home/artie/Documents/Repos/fs_extra/src/lib.rs	/^pub fn copy_items<P, Q>(from: &[P], to: Q, options: &dir::CopyOptions) -> Result<u64>$/;"	f
copy_items_with_progress	/home/artie/Documents/Repos/fs_extra/src/lib.rs	/^pub fn copy_items_with_progress<P, Q, F>($/;"	f
copy_with_progress	/home/artie/Documents/Repos/fs_extra/src/dir.rs	/^pub fn copy_with_progress<P, Q, F>($/;"	f
copy_with_progress	/home/artie/Documents/Repos/fs_extra/src/file.rs	/^pub fn copy_with_progress<P, Q, F>($/;"	f
copying_already_exists	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^fn copying_already_exists(s: &mut Cursive, path_from: PathBuf, path_to: PathBuf, is_overwrite: bool, is_recursive: bool) {$/;"	f
copying_cancelled	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^fn copying_cancelled(s: &mut Cursive) {$/;"	f
copying_error	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^fn copying_error(s: &mut Cursive) {$/;"	f
copying_finished_success	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^fn copying_finished_success(s: &mut Cursive) {$/;"	f
copying_progress_total	/home/artie/Documents/Projects/rust/FileManager/src/internals/literals/copy_progress_dlg.rs	/^    pub static copying_progress_total: &str = "Copying total progress:";$/;"	c
counter	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/counter.rs	/^    fn counter(&self) -> &Counter<C> {$/;"	f
cpy	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^fn cpy(siv: &mut cursive::Cursive) {$/;"	f
cpy_task	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^fn cpy_task(chnk: Vec<String>, path_to: String, cb: CbSink,cond_var: Arc<(Mutex<bool>,Condvar)>) {$/;"	f
create	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    pub fn create($/;"	f
create	/home/artie/Documents/Repos/fs_extra/src/dir.rs	/^pub fn create<P>(path: P, erase: bool) -> Result<()>$/;"	f
create_all	/home/artie/Documents/Repos/fs_extra/src/dir.rs	/^pub fn create_all<P>(path: P, erase: bool) -> Result<()>$/;"	f
create_basic_table_core	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^pub fn create_basic_table_core(siv: &mut Cursive, a_name: &'static str, initial_path: &str) -> NamedView<tableViewType> {$/;"	f
create_cpy_dialog	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^fn create_cpy_dialog(paths_from: Vec<String>, path_to: String) -> NamedView<Dialog> {$/;"	f
create_cpy_progress_dialog	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^fn create_cpy_progress_dialog($/;"	f
create_debounced	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    pub fn create_debounced($/;"	f
create_main_layout	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^fn create_main_layout(siv: &mut cursive::CursiveRunnable, fm_config: &FileMangerConfig) {$/;"	f
create_main_menu	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^pub fn create_main_menu(siv: &mut cursive::CursiveRunnable, showMenu: bool, alwaysVisible: bool) {$/;"	f
crossbeam_channel_internal	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select_macro.rs	/^macro_rules! crossbeam_channel_internal {$/;"	d
crossterm	/home/artie/Documents/Repos/smallB_cursive/cursive/src/cursive_runnable.rs	/^    pub fn crossterm() -> Self {$/;"	f
crossterm	/home/artie/Documents/Repos/smallB_cursive/cursive/src/lib.rs	/^pub fn crossterm() -> CursiveRunnable {$/;"	f
ctime	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub fn ctime(&self) -> TmFmt {$/;"	f
current_style	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/mod.rs	/^    pub fn current_style(&self) -> Rc<ObservedStyle> {$/;"	f
current_thread_id	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/waker.rs	/^fn current_thread_id() -> ThreadId {$/;"	f
custom	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/error.rs	/^    fn custom<T: fmt::Display>(msg: T) -> Self {$/;"	f
cycle_to_yo	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^pub fn cycle_to_yo(cycle: u32) -> (u32, u32) {$/;"	f
date	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn date(&self) -> Date<Tz> {$/;"	f
date	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn date(&self) -> NaiveDate {$/;"	f
datetime_from_str	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn datetime_from_str(&self, s: &str, fmt: &str) -> ParseResult<DateTime<Self>> {$/;"	f
datetime_to_timespec	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^fn datetime_to_timespec(d: &NaiveDateTime, local: bool) -> sys::Timespec {$/;"	f
day	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn day(&self) -> u32 {$/;"	f
day	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn day(&self) -> u32 {$/;"	f
day	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn day(&self) -> u32;$/;"	f
day	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn day(&self) -> u32 {$/;"	f
day	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn day(&self) -> u32 {$/;"	f
day	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn day(&self) -> u32 {$/;"	f
day0	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn day0(&self) -> u32 {$/;"	f
day0	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn day0(&self) -> u32 {$/;"	f
day0	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn day0(&self) -> u32;$/;"	f
day0	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn day0(&self) -> u32 {$/;"	f
day0	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn day0(&self) -> u32 {$/;"	f
days	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn days(days: i64) -> Duration {$/;"	f
days	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn days(days: i64) -> Duration {$/;"	f
days_in_year	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/display.rs	/^fn days_in_year(year: i32) -> i32 {$/;"	f
deadline	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^    fn deadline(&self) -> Option<Instant> {$/;"	f
deadline	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/array.rs	/^    fn deadline(&self) -> Option<Instant> {$/;"	f
deadline	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/at.rs	/^    fn deadline(&self) -> Option<Instant> {$/;"	f
deadline	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^    fn deadline(&self) -> Option<Instant> {$/;"	f
deadline	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/never.rs	/^    fn deadline(&self) -> Option<Instant> {$/;"	f
deadline	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/tick.rs	/^    fn deadline(&self) -> Option<Instant> {$/;"	f
deadline	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/zero.rs	/^    fn deadline(&self) -> Option<Instant> {$/;"	f
deadline	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^    fn deadline(&self) -> Option<Instant> {$/;"	f
deadline	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^    fn deadline(&self) -> Option<Instant>;$/;"	f
deanonymize	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/container.rs	/^    fn deanonymize<T: 'static>(&self) -> &T {$/;"	f
debug	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/lib.rs	/^macro_rules! debug { ($($x:tt)*) => ($/;"	d
decode	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<DateTime<FixedOffset>, D::Error> {$/;"	f
decode	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<DateTime<Local>, D::Error> {$/;"	f
decode	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<DateTime<Utc>, D::Error> {$/;"	f
decode	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<TsSeconds<FixedOffset>, D::Error> {$/;"	f
decode	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<TsSeconds<Local>, D::Error> {$/;"	f
decode	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<TsSeconds<Utc>, D::Error> {$/;"	f
decode	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<NaiveDate, D::Error> {$/;"	f
decode	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<NaiveDateTime, D::Error> {$/;"	f
decode	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<TsSeconds, D::Error> {$/;"	f
decode	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<NaiveTime, D::Error> {$/;"	f
decrease_masked	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^            fn decrease_masked(self, mask: Self::Mask) -> Self {$/;"	f
decrease_masked	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^    fn decrease_masked(self, mask: Self::Mask) -> Self;$/;"	f
default	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    fn default() -> Parsed {$/;"	f
default	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/config.rs	/^    fn default() -> Self {$/;"	f
default	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/env.rs	/^    fn default() -> Environment {$/;"	f
default	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^    fn default() -> Self {$/;"	f
default	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/array.rs	/^    fn default() -> Self {$/;"	f
default	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^    fn default() -> Self {$/;"	f
default	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^    fn default() -> Select<'a> {$/;"	f
default	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/thread.rs	/^    fn default() -> ThreadRng {$/;"	f
default	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/ident_hash.rs	/^    fn default() -> IdentHash {$/;"	f
default	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/thread_local/mod.rs	/^    fn default() -> ThreadLocal<T> {$/;"	f
default	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^            fn default() -> Self {$/;"	f
default	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    fn default() -> Self {$/;"	f
default	/home/artie/Documents/Projects/rust/FileManager/src/internals/delimiter.rs	/^    fn default() -> Self {$/;"	f
default	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^    fn default() -> Self {$/;"	f
default	/home/artie/Documents/Repos/fs_extra/src/dir.rs	/^    fn default() -> Self {$/;"	f
default	/home/artie/Documents/Repos/fs_extra/src/file.rs	/^    fn default() -> Self {$/;"	f
default	/home/artie/Documents/Repos/smallB_cursive/cursive/src/cursive_runnable.rs	/^    pub fn default() -> Self {$/;"	f
default	/home/artie/Documents/Repos/smallB_cursive/cursive/src/lib.rs	/^pub fn default() -> CursiveRunnable {$/;"	f
default_column	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn default_column(mut self, column: H) -> Self {$/;"	f
del	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^fn del(siv: &mut cursive::Cursive) {}$/;"	f
deref	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        fn deref(&self) -> &Self::Target {$/;"	f
deref	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        fn deref(&self) -> &Self::Target {$/;"	f
deref	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/counter.rs	/^    fn deref(&self) -> &C {$/;"	f
deref	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/utils.rs	/^    fn deref(&self) -> &T {$/;"	f
deref	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    fn deref(&self) -> &H::Target {$/;"	f
deref	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    fn deref(&self) -> &T {$/;"	f
deref	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/stable_deref_trait-1.2.0/src/lib.rs	/^    fn deref(&self) -> &Self::Target { &"Hello" }$/;"	f
deref	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/stable_deref_trait-1.2.0/src/lib.rs	/^    fn deref(&self) -> &Self::Target { &*self.0 }$/;"	f
deref	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/stable_deref_trait-1.2.0/src/lib.rs	/^    fn deref(&self) -> &Self::Target { &self.0 }$/;"	f
deref	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/stable_deref_trait-1.2.0/src/lib.rs	/^    fn deref(&self) -> &Self::Target { &self.0.deref().0 }$/;"	f
deref	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/stable_deref_trait-1.2.0/src/lib.rs	/^    fn deref(&self) -> &Self::Target {$/;"	f
deref	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_text_view.rs	/^    fn deref(&self) -> &StyledString {$/;"	f
deref	/home/artie/Documents/Repos/smallB_cursive/cursive/src/cursive_runnable.rs	/^    fn deref(&self) -> &Cursive {$/;"	f
deref_mut	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/utils.rs	/^    fn deref_mut(&mut self) -> &mut T {$/;"	f
deref_mut	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    fn deref_mut(&mut self) -> &mut H::Target {$/;"	f
deref_mut	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    fn deref_mut(&mut self) -> &mut T {$/;"	f
deref_mut	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/stable_deref_trait-1.2.0/src/lib.rs	/^    fn deref_mut(&mut self) -> &mut Self::Target { &mut self.0.deref_mut().1 }$/;"	f
deref_mut	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/stable_deref_trait-1.2.0/src/lib.rs	/^    fn deref_mut(&mut self) -> &mut Self::Target { Rc::make_mut(&mut self.0) }$/;"	f
deref_mut	/home/artie/Documents/Repos/smallB_cursive/cursive/src/cursive_runnable.rs	/^    fn deref_mut(&mut self) -> &mut Cursive {$/;"	f
description	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    fn description(&self) -> &str {$/;"	f
description	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn description(&self) -> &str {$/;"	f
description	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn description(&self) -> &str {$/;"	f
description	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/error.rs	/^    fn description(&self) -> &str {$/;"	f
description	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/file/format/yaml.rs	/^    fn description(&self) -> &str {$/;"	f
description	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    fn description(&self) -> &str {$/;"	f
description	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn description(&self) -> &str {$/;"	f
description	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn description(&self) -> &str {$/;"	f
description	/home/artie/Documents/Repos/fs_extra/src/error.rs	/^    fn description(&self) -> &str {$/;"	f
deserialize	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        pub fn deserialize<'de, D>(d: D) -> Result<DateTime<Utc>, D::Error>$/;"	f
deserialize	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        pub fn deserialize<'de, D>(d: D) -> Result<Option<DateTime<Utc>>, D::Error>$/;"	f
deserialize	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        pub fn deserialize<'de, D>(d: D) -> Result<NaiveDateTime, D::Error>$/;"	f
deserialize	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/config.rs	/^    pub fn deserialize<'de, T: Deserialize<'de>>(self) -> Result<T> {$/;"	f
deserialize	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^    fn deserialize<D>(deserializer: D) -> ::std::result::Result<Value, D::Error>$/;"	f
deserialize_any	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^    fn deserialize_any<V: de::Visitor<'de>>(self, visitor: V) -> Result<V::Value> {$/;"	f
deserialize_any	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_bool	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^    fn deserialize_bool<V: de::Visitor<'de>>(self, visitor: V) -> Result<V::Value> {$/;"	f
deserialize_enum	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^    fn deserialize_enum<V>($/;"	f
deserialize_f32	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^    fn deserialize_f32<V: de::Visitor<'de>>(self, visitor: V) -> Result<V::Value> {$/;"	f
deserialize_f64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^    fn deserialize_f64<V: de::Visitor<'de>>(self, visitor: V) -> Result<V::Value> {$/;"	f
deserialize_i16	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^    fn deserialize_i16<V: de::Visitor<'de>>(self, visitor: V) -> Result<V::Value> {$/;"	f
deserialize_i32	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^    fn deserialize_i32<V: de::Visitor<'de>>(self, visitor: V) -> Result<V::Value> {$/;"	f
deserialize_i64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^    fn deserialize_i64<V: de::Visitor<'de>>(self, visitor: V) -> Result<V::Value> {$/;"	f
deserialize_i8	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^    fn deserialize_i8<V: de::Visitor<'de>>(self, visitor: V) -> Result<V::Value> {$/;"	f
deserialize_newtype_struct	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^    fn deserialize_newtype_struct<V>(self, _name: &'static str, visitor: V) -> Result<V::Value>$/;"	f
deserialize_option	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_str	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^    fn deserialize_str<V: de::Visitor<'de>>(self, visitor: V) -> Result<V::Value> {$/;"	f
deserialize_string	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^    fn deserialize_string<V: de::Visitor<'de>>(self, visitor: V) -> Result<V::Value> {$/;"	f
deserialize_u16	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^    fn deserialize_u16<V: de::Visitor<'de>>(self, visitor: V) -> Result<V::Value> {$/;"	f
deserialize_u32	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^    fn deserialize_u32<V: de::Visitor<'de>>(self, visitor: V) -> Result<V::Value> {$/;"	f
deserialize_u64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^    fn deserialize_u64<V: de::Visitor<'de>>(self, visitor: V) -> Result<V::Value> {$/;"	f
deserialize_u8	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^    fn deserialize_u8<V: de::Visitor<'de>>(self, visitor: V) -> Result<V::Value> {$/;"	f
destroy	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^    unsafe fn destroy(this: *mut Block<T>, start: usize) {$/;"	f
digits	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^    fn digits(s: &str) -> ParseResult<(u8, u8)> {$/;"	f
disable	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn disable(&mut self) {$/;"	f
disconnect	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/array.rs	/^    pub fn disconnect(&self) -> bool {$/;"	f
disconnect	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^    pub fn disconnect(&self) -> bool {$/;"	f
disconnect	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/zero.rs	/^    pub fn disconnect(&self) -> bool {$/;"	f
disconnect	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/waker.rs	/^    pub fn disconnect(&mut self) {$/;"	f
disconnect	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/waker.rs	/^    pub fn disconnect(&self) {$/;"	f
dismiss_button	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn dismiss_button<S: Into<String>>(self, label: S) -> Self {$/;"	f
display_formatted_errors	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^fn display_formatted_errors() {$/;"	f
div	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn div(self, rhs: i32) -> Duration {$/;"	f
div	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn div(self, rhs: i32) -> Duration {$/;"	f
div_floor_64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^fn div_floor_64(this: i64, other: i64) -> i64 {$/;"	f
div_floor_64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^fn div_floor_64(this: i64, other: i64) -> i64 {$/;"	f
div_mod_floor_64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^fn div_mod_floor_64(this: i64, other: i64) -> (i64, i64) {$/;"	f
div_mod_floor_64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^fn div_mod_floor_64(this: i64, other: i64) -> (i64, i64) {$/;"	f
div_rem_64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^fn div_rem_64(this: i64, other: i64) -> (i64, i64) {$/;"	f
div_rem_64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^fn div_rem_64(this: i64, other: i64) -> (i64, i64) {$/;"	f
do_test	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^            fn do_test<I: Iterator<Item = u32>>(iter: I, v: &[u32]) {$/;"	f
do_test	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^        fn do_test<I: Iterator<Item = u32>>(iter: I, v: &[u32]) {$/;"	f
draw	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_button.rs	/^    fn draw(&self, printer: &Printer) {$/;"	f
draw	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    fn draw(&self, printer: &Printer) {$/;"	f
draw	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_text_view.rs	/^    fn draw(&self, printer: &Printer) {$/;"	f
draw	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    fn draw(&self, printer: &Printer) {$/;"	f
draw	/home/artie/Documents/Projects/rust/FileManager/src/internals/delimiter.rs	/^    fn draw(&self, printer: &Printer) {$/;"	f
draw	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed_screen_view.rs	/^    fn draw(&self, printer: &Printer) {$/;"	f
draw_buttons	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    fn draw_buttons(&self, printer: &Printer) -> Option<usize> {$/;"	f
draw_columns	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    fn draw_columns<C: Fn(&Printer, &TableColumn<H>)>(&self, printer: &Printer, sep: &str, callback: C) {$/;"	f
draw_content	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    fn draw_content(&self, printer: &Printer, buttons_height: usize) {$/;"	f
draw_content	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    fn draw_content(&self, printer: &Printer) {$/;"	f
draw_header	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    fn draw_header(&self, printer: &Printer) {$/;"	f
draw_item	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    fn draw_item(&self, printer: &Printer, i: usize) {$/;"	f
draw_row	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    fn draw_row(&self, printer: &Printer, value: &str) {$/;"	f
draw_row_with_color	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    fn draw_row_with_color(&self, printer: &Printer, value: &str, color: theme::ColorStyle) {$/;"	f
draw_title	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    fn draw_title(&self, printer: &Printer) {$/;"	f
draw_title	/home/artie/Documents/Projects/rust/FileManager/src/internals/delimiter.rs	/^    fn draw_title(&self, printer: &Printer) {$/;"	f
draw_title_bottom	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    fn draw_title_bottom(&self, printer: &Printer) {$/;"	f
drop	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/array.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/utils.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/waker.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/timer.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/poll.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/container.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/thread_local/mod.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/thread_local/thread_id.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        fn drop(&mut self) {$/;"	f
drop	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/blt.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/crossterm.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/n.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/pan.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/termion.rs	/^    fn drop(&mut self) {$/;"	f
dummy	/home/artie/Documents/Repos/smallB_cursive/cursive/src/cursive_runnable.rs	/^    pub fn dummy() -> Self {$/;"	f
dummy	/home/artie/Documents/Repos/smallB_cursive/cursive/src/lib.rs	/^pub fn dummy() -> CursiveRunnable {$/;"	f
duration_round	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn duration_round(self, duration: Duration) -> Result<Self, Self::Err> {$/;"	f
duration_round	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn duration_round(self, duration: Duration) -> Result<Self, Self::Err>;$/;"	f
duration_trunc	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn duration_trunc(self, duration: Duration) -> Result<Self, Self::Err> {$/;"	f
duration_trunc	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn duration_trunc(self, duration: Duration) -> Result<Self, Self::Err>;$/;"	f
earliest	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    pub fn earliest(self) -> Option<T> {$/;"	f
east	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    pub fn east(secs: i32) -> FixedOffset {$/;"	f
east_opt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    pub fn east_opt(secs: i32) -> Option<FixedOffset> {$/;"	f
edit	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^fn edit(siv: &mut cursive::Cursive) {}$/;"	f
effect	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_text_view.rs	/^    pub fn effect(self, effect: Effect) -> Self {$/;"	f
empty	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_text_view.rs	/^    pub fn empty() -> Self {$/;"	f
empty_on_heap	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/zero.rs	/^    fn empty_on_heap() -> Box<Packet<T>> {$/;"	f
empty_on_stack	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/zero.rs	/^    fn empty_on_stack() -> Packet<T> {$/;"	f
empty_tm	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub fn empty_tm() -> Tm {$/;"	f
enable	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn enable(&mut self) {$/;"	f
encode	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        fn encode<S: Encoder>(&self, s: &mut S) -> Result<(), S::Error> {$/;"	f
encode	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^        fn encode<S: Encoder>(&self, s: &mut S) -> Result<(), S::Error> {$/;"	f
encode	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        fn encode<S: Encoder>(&self, s: &mut S) -> Result<(), S::Error> {$/;"	f
encode	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^        fn encode<S: Encoder>(&self, s: &mut S) -> Result<(), S::Error> {$/;"	f
end	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn end(self) -> Result<Self::Ok> {$/;"	f
eq	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn eq(&self, other: &Date<Tz2>) -> bool {$/;"	f
eq	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn eq(&self, other: &DateTime<Tz2>) -> bool {$/;"	f
eq	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    fn eq(&self, _other: &InternalNumeric) -> bool {$/;"	f
eq	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/counter.rs	/^    fn eq(&self, other: &Receiver<C>) -> bool {$/;"	f
eq	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/counter.rs	/^    fn eq(&self, other: &Sender<C>) -> bool {$/;"	f
eq	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    fn eq(&self, other: &DebouncedEvent) -> bool {$/;"	f
eq	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn eq() {$/;"	f
eq	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    fn eq(&self, other: &Self) -> bool {$/;"	f
eq	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^        fn eq(&self, other: &Self) -> bool {$/;"	f
eq	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^    fn eq(&self, other: &IndexVec) -> bool {$/;"	f
eq	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            fn eq(&self, other: &SteadyTime) -> bool {$/;"	f
equals	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^fn equals(s: &str, pattern: &str) -> bool {$/;"	f
erase_owner	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    pub fn erase_owner<'a>(self) -> OwningRef<O::Erased, T>$/;"	f
erase_owner	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    pub fn erase_owner<'a>(self) -> OwningRefMut<O::Erased, T>$/;"	f
erased_owner	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn erased_owner() {$/;"	f
err	/home/artie/Documents/Repos/fs_extra/src/lib.rs	/^macro_rules! err {$/;"	d
error	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/lib.rs	/^macro_rules! error { ($($x:tt)*) => ($/;"	d
event	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/mod.rs	/^    pub fn event(&mut self, path: PathBuf, mut op: op::Op, cookie: Option<u32>) {$/;"	f
event_loop_thread	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    fn event_loop_thread(mut self) {$/;"	f
example	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn example() -> Example {$/;"	f
expanded	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^    fn expanded(&self, up_left: Vec2, down_right: Vec2) -> ObservedPiece {$/;"	f
expanded_line	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^    pub fn expanded_line(&self, left: usize, right: usize) -> Self {$/;"	f
expecting	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^        fn expecting(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
extend_with_key	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/error.rs	/^    pub fn extend_with_key(self, key: &str) -> Self {$/;"	f
extensions	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/file/format/mod.rs	/^    pub fn extensions(&self) -> &'static Vec<&'static str> {$/;"	f
extract	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^    fn extract(self, index: usize) -> Self {$/;"	f
file_time_as_u64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/windows.rs	/^fn file_time_as_u64(ft: &FILETIME) -> u64 {$/;"	f
file_time_as_u64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn file_time_as_u64(ft: &FILETIME) -> u64 {$/;"	f
file_time_to_nsec	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn file_time_to_nsec(ft: &FILETIME) -> i32 {$/;"	f
file_time_to_unix_seconds	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/windows.rs	/^fn file_time_to_unix_seconds(ft: &FILETIME) -> i64 {$/;"	f
file_time_to_unix_seconds	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn file_time_to_unix_seconds(ft: &FILETIME) -> i64 {$/;"	f
file_transfer_context	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^struct file_transfer_context {$/;"	s
fill	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rng.rs	/^    fn fill<T: Fill + ?Sized>(&mut self, dest: &mut T) {$/;"	f
fill_bytes	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/read.rs	/^    fn fill_bytes(&mut self, dest: &mut [u8]) {$/;"	f
fill_bytes	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/reseeding.rs	/^    fn fill_bytes(&mut self, dest: &mut [u8]) {$/;"	f
fill_bytes	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/mock.rs	/^    fn fill_bytes(&mut self, dest: &mut [u8]) {$/;"	f
fill_bytes	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/small.rs	/^    fn fill_bytes(&mut self, dest: &mut [u8]) {$/;"	f
fill_bytes	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/std.rs	/^    fn fill_bytes(&mut self, dest: &mut [u8]) {$/;"	f
fill_bytes	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/thread.rs	/^    fn fill_bytes(&mut self, dest: &mut [u8]) {$/;"	f
fill_bytes	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/xoshiro128plusplus.rs	/^    fn fill_bytes(&mut self, dest: &mut [u8]) {$/;"	f
fill_bytes	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/xoshiro256plusplus.rs	/^    fn fill_bytes(&mut self, dest: &mut [u8]) {$/;"	f
fill_key_codes	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/mod.rs	/^fn fill_key_codes<F>(target: &mut HashMap<i32, Event>, f: F)$/;"	f
fill_table_with_items	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^fn fill_table_with_items(a_table: &mut tableViewType, a_dir: PathBuf) -> Result<(), std::io::Error> {$/;"	f
fill_table_with_items_wrapper	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^fn fill_table_with_items_wrapper(siv: &mut Cursive, a_name: String, new_path: PathBuf) {$/;"	f
filter_dir	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^fn filter_dir(e: walkdir::Result<walkdir::DirEntry>) -> Option<walkdir::DirEntry> {$/;"	f
find_closest	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/mod.rs	/^fn find_closest(color: Color, max_colors: i16) -> i16 {$/;"	f
find_closest_pair	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/mod.rs	/^fn find_closest_pair(pair: ColorPair, max_colors: i16) -> (i16, i16) {$/;"	f
find_closest_pair	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/n.rs	/^fn find_closest_pair(pair: ColorPair) -> (i16, i16) {$/;"	f
find_closest_pair	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/pan.rs	/^fn find_closest_pair(pair: ColorPair) -> (i16, i16) {$/;"	f
find_file	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/file/source/file.rs	/^    fn find_file($/;"	f
find_occurences	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^    pub fn find_occurences(&self, pattern: &str) -> Vec<ObservedLine> {$/;"	f
find_occurrences_no_blanks	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^    fn find_occurrences_no_blanks() {$/;"	f
find_occurrences_some_blanks	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^    fn find_occurrences_some_blanks() {$/;"	f
finish	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/ident_hash.rs	/^    fn finish(&self) -> u64 {$/;"	f
finite_mask	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^            fn finite_mask(self) -> Self::Mask {$/;"	f
finite_mask	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^    fn finite_mask(self) -> Self::Mask;$/;"	f
fire_due_events	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/timer.rs	/^    fn fire_due_events(&self, now: Instant) -> Option<Instant> {$/;"	f
fire_event	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/timer.rs	/^    fn fire_event($/;"	f
fix	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^macro_rules! fix {$/;"	d
fix	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn fix(&self) -> FixedOffset {$/;"	f
fix	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn fix(&self) -> FixedOffset;$/;"	f
fix	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^    fn fix(&self) -> FixedOffset {$/;"	f
flags	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn flags(&self) -> YearFlags {$/;"	f
flatten_index	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^    fn flatten_index(&self, index: Vec2) -> usize {$/;"	f
float_impls	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/float.rs	/^macro_rules! float_impls {$/;"	d
fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^                fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^                fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^                fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/isoweek.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> result::Result<(), fmt::Error> {$/;"	f
fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/file/format/yaml.rs	/^    fn fmt(&self, format: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/err.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {$/;"	f
fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/bernoulli.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/weighted_index.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/read.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/storage.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {$/;"	f
fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/thread_local/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/tls.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {$/;"	f
fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/display.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/artie/Documents/Repos/fs_extra/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^    fn fmt(&self, f: &mut Formatter<'_>) -> fmt::Result {$/;"	f
fmt_debug	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn fmt_debug() {$/;"	f
fmt_rfc2822_datetime	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^    fn fmt_rfc2822_datetime(dt: DateTime<FixedOffset>) -> String {$/;"	f
fmt_rfc3339_datetime	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^    fn fmt_rfc3339_datetime(dt: DateTime<FixedOffset>) -> String {$/;"	f
fn	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/container.rs	/^    pub const fn new() -> Container {$/;"	c
fn	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/init.rs	/^    pub const fn new() -> Init {$/;"	c
fn	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/storage.rs	/^    pub const fn new() -> Storage<T> {$/;"	c
fn	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/tls.rs	/^    pub const fn new() -> LocalStorage<T> {$/;"	c
focus	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn focus(&self) -> DialogFocus {$/;"	f
focus_down	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    fn focus_down(&mut self, n: usize) {$/;"	f
focus_up	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    fn focus_up(&mut self, n: usize) {$/;"	f
focus_view	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    fn focus_view(&mut self, selector: &Selector<'_>) -> Result<(), ViewNotFound> {$/;"	f
fork	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/reseeding.rs	/^mod fork {$/;"	m
fork_handler	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/reseeding.rs	/^    extern "C" fn fork_handler() {$/;"	f
format	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn format<'a>(&self, fmt: &'a str) -> DelayedFormat<StrftimeItems<'a>> {$/;"	f
format	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn format<'a>(&self, fmt: &'a str) -> DelayedFormat<StrftimeItems<'a>> {$/;"	f
format	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub fn format<'a, I, B>($/;"	f
format	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn format<'a>(&self, fmt: &'a str) -> DelayedFormat<StrftimeItems<'a>> {$/;"	f
format	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn format<'a>(&self, fmt: &'a str) -> DelayedFormat<StrftimeItems<'a>> {$/;"	f
format	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn format<'a>(&self, fmt: &'a str) -> DelayedFormat<StrftimeItems<'a>> {$/;"	f
format	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/file/mod.rs	/^    pub fn format(mut self, format: FileFormat) -> Self {$/;"	f
format_inner	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^fn format_inner<'a>($/;"	f
format_item	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub fn format_item<'a>($/;"	f
format_item_localized	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub fn format_item_localized<'a>($/;"	f
format_localized	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn format_localized<'a>($/;"	f
format_localized	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn format_localized<'a>($/;"	f
format_localized	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub fn format_localized<'a, I, B>($/;"	f
format_localized_with_items	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn format_localized_with_items<'a, I, B>($/;"	f
format_localized_with_items	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn format_localized_with_items<'a, I, B>($/;"	f
format_with_items	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn format_with_items<'a, I, B>(&self, items: I) -> DelayedFormat<I>$/;"	f
format_with_items	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn format_with_items<'a, I, B>(&self, items: I) -> DelayedFormat<I>$/;"	f
format_with_items	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn format_with_items<'a, I, B>(&self, items: I) -> DelayedFormat<I>$/;"	f
format_with_items	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn format_with_items<'a, I, B>(&self, items: I) -> DelayedFormat<I>$/;"	f
format_with_items	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn format_with_items<'a, I, B>(&self, items: I) -> DelayedFormat<I>$/;"	f
free	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/thread_local/thread_id.rs	/^    fn free(&mut self, id: usize) {$/;"	f
freeze	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/container.rs	/^    pub fn freeze(&mut self) {$/;"	f
frequency	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn frequency() -> i64 {$/;"	f
from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        fn from(obj: TsSeconds<Tz>) -> DateTime<Tz> {$/;"	f
from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn from(date: &js_sys::Date) -> DateTime<Utc> {$/;"	f
from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn from(date: DateTime<Utc>) -> js_sys::Date {$/;"	f
from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn from(date: js_sys::Date) -> DateTime<Utc> {$/;"	f
from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn from(dt: DateTime<Tz>) -> SystemTime {$/;"	f
from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn from(src: DateTime<FixedOffset>) -> Self {$/;"	f
from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn from(src: DateTime<Local>) -> Self {$/;"	f
from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn from(src: DateTime<Utc>) -> Self {$/;"	f
from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn from(t: SystemTime) -> DateTime<Local> {$/;"	f
from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn from(t: SystemTime) -> DateTime<Utc> {$/;"	f
from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn from<T, D>(me: LocalResult<T>, d: &mut D) -> Result<T, D::Error>$/;"	f
from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        fn from(obj: TsSeconds) -> NaiveDateTime {$/;"	f
from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/file/mod.rs	/^    fn from(path: &'a Path) -> Self {$/;"	f
from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/file/mod.rs	/^    fn from(path: PathBuf) -> Self {$/;"	f
from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/file/source/string.rs	/^    fn from(s: &'a str) -> Self {$/;"	f
from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^    fn from(value: &'a str) -> Self {$/;"	f
from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^    fn from(value: Option<T>) -> Self {$/;"	f
from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^    fn from(value: String) -> Self {$/;"	f
from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^    fn from(value: T) -> Self {$/;"	f
from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^    fn from(value: bool) -> Self {$/;"	f
from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^    fn from(value: f64) -> Self {$/;"	f
from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^    fn from(value: i64) -> Self {$/;"	f
from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^    fn from(values: HashMap<String, T>) -> Self {$/;"	f
from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^    fn from(values: Vec<T>) -> Self {$/;"	f
from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/err.rs	/^    fn from(err: RecvError) -> RecvTimeoutError {$/;"	f
from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/err.rs	/^    fn from(err: RecvError) -> TryRecvError {$/;"	f
from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/err.rs	/^    fn from(err: SendError<T>) -> SendTimeoutError<T> {$/;"	f
from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/err.rs	/^    fn from(err: SendError<T>) -> TrySendError<T> {$/;"	f
from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^    fn from(val: usize) -> Selected {$/;"	f
from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    fn from(err: io::Error) -> Error {$/;"	f
from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    fn from(other: OwningRefMut<O, T>) -> Self {$/;"	f
from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    fn from(owner: O) -> Self {$/;"	f
from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    fn from(r: ::core::ops::Range<X>) -> Uniform<X> {$/;"	f
from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    fn from(r: ::core::ops::RangeInclusive<X>) -> Uniform<X> {$/;"	f
from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^    fn from(v: Vec<u32>) -> Self {$/;"	f
from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^    fn from(v: Vec<usize>) -> Self {$/;"	f
from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/storage.rs	/^    fn from(value: T) -> Storage<T> {$/;"	f
from	/home/artie/Documents/Repos/fs_extra/src/error.rs	/^    fn from(err: IoError) -> Error {$/;"	f
from	/home/artie/Documents/Repos/fs_extra/src/error.rs	/^    fn from(err: OsString) -> Error {$/;"	f
from	/home/artie/Documents/Repos/fs_extra/src/error.rs	/^    fn from(err: StripPrefixError) -> Error {$/;"	f
from_hjson_value	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/file/format/hjson.rs	/^fn from_hjson_value(uri: Option<&String>, value: &serde_hjson::Value) -> Value {$/;"	f
from_hms	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn from_hms(hour: u32, min: u32, sec: u32) -> NaiveTime {$/;"	f
from_hms_micro	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn from_hms_micro(hour: u32, min: u32, sec: u32, micro: u32) -> NaiveTime {$/;"	f
from_hms_micro_opt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn from_hms_micro_opt(hour: u32, min: u32, sec: u32, micro: u32) -> Option<NaiveTime> {$/;"	f
from_hms_milli	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn from_hms_milli(hour: u32, min: u32, sec: u32, milli: u32) -> NaiveTime {$/;"	f
from_hms_milli_opt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn from_hms_milli_opt(hour: u32, min: u32, sec: u32, milli: u32) -> Option<NaiveTime> {$/;"	f
from_hms_nano	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn from_hms_nano(hour: u32, min: u32, sec: u32, nano: u32) -> NaiveTime {$/;"	f
from_hms_nano_opt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn from_hms_nano_opt(hour: u32, min: u32, sec: u32, nano: u32) -> Option<NaiveTime> {$/;"	f
from_hms_opt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn from_hms_opt(hour: u32, min: u32, sec: u32) -> Option<NaiveTime> {$/;"	f
from_i64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn from_i64(n: i64) -> Option<Month> {$/;"	f
from_i64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn from_i64(n: i64) -> Option<Weekday> {$/;"	f
from_isoywd	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn from_isoywd(year: i32, week: u32, weekday: Weekday) -> NaiveDate {$/;"	f
from_isoywd_opt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn from_isoywd_opt(year: i32, week: u32, weekday: Weekday) -> Option<NaiveDate> {$/;"	f
from_json_value	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/file/format/json.rs	/^fn from_json_value(uri: Option<&String>, value: &serde_json::Value) -> Value {$/;"	f
from_local_date	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    fn from_local_date(&self, local: &NaiveDate) -> LocalResult<Date<Local>> {$/;"	f
from_local_date	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn from_local_date(&self, local: &NaiveDate) -> LocalResult<Date<Self>> {$/;"	f
from_local_datetime	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    fn from_local_datetime(&self, local: &NaiveDateTime) -> LocalResult<DateTime<Local>> {$/;"	f
from_local_datetime	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn from_local_datetime(&self, local: &NaiveDateTime) -> LocalResult<DateTime<Self>> {$/;"	f
from_mdf	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn from_mdf(year: i32, mdf: Mdf) -> Option<NaiveDate> {$/;"	f
from_mdf	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn from_mdf(Mdf(mdf): Mdf) -> Of {$/;"	f
from_num_days_from_ce	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn from_num_days_from_ce(days: i32) -> NaiveDate {$/;"	f
from_num_days_from_ce_opt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn from_num_days_from_ce_opt(days: i32) -> Option<NaiveDate> {$/;"	f
from_num_seconds_from_midnight	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn from_num_seconds_from_midnight(secs: u32, nano: u32) -> NaiveTime {$/;"	f
from_num_seconds_from_midnight_opt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn from_num_seconds_from_midnight_opt(secs: u32, nano: u32) -> Option<NaiveTime> {$/;"	f
from_of	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn from_of(year: i32, of: Of) -> Option<NaiveDate> {$/;"	f
from_of	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn from_of(Of(of): Of) -> Mdf {$/;"	f
from_offset	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn from_offset(offset: &FixedOffset) -> FixedOffset {$/;"	f
from_offset	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    fn from_offset(_offset: &FixedOffset) -> Local {$/;"	f
from_offset	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn from_offset(offset: &Self::Offset) -> Self;$/;"	f
from_offset	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^    fn from_offset(_state: &Utc) -> Utc {$/;"	f
from_ratio	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/bernoulli.rs	/^    pub fn from_ratio(numerator: u32, denominator: u32) -> Result<Bernoulli, BernoulliError> {$/;"	f
from_rng	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/small.rs	/^    fn from_rng<R: RngCore>(rng: R) -> Result<Self, Error> {$/;"	f
from_rng	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/std.rs	/^    fn from_rng<R: RngCore>(rng: R) -> Result<Self, Error> {$/;"	f
from_seed	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/small.rs	/^    fn from_seed(seed: Self::Seed) -> Self {$/;"	f
from_seed	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/std.rs	/^    fn from_seed(seed: Self::Seed) -> Self {$/;"	f
from_seed	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/xoshiro128plusplus.rs	/^    fn from_seed(seed: [u8; 16]) -> Xoshiro128PlusPlus {$/;"	f
from_seed	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/xoshiro256plusplus.rs	/^    fn from_seed(seed: [u8; 32]) -> Xoshiro256PlusPlus {$/;"	f
from_std	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn from_std(duration: StdDuration) -> Result<Duration, OutOfRangeError> {$/;"	f
from_std	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn from_std(duration: StdDuration) -> Result<Duration, OutOfRangeError> {$/;"	f
from_str	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn from_str(s: &str) -> ParseResult<DateTime<Local>> {$/;"	f
from_str	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn from_str(s: &str) -> ParseResult<DateTime<Utc>> {$/;"	f
from_str	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    fn from_str(s: &str) -> Result<Self, Self::Err> {$/;"	f
from_str	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^    fn from_str(s: &str) -> ParseResult<DateTime<FixedOffset>> {$/;"	f
from_str	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn from_str(s: &str) -> ParseResult<NaiveDate> {$/;"	f
from_str	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn from_str(s: &str) -> ParseResult<NaiveDateTime> {$/;"	f
from_str	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn from_str(s: &str) -> ParseResult<NaiveTime> {$/;"	f
from_str	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/file/mod.rs	/^    pub fn from_str(s: &str, format: FileFormat) -> Self {$/;"	f
from_str	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/path/mod.rs	/^    fn from_str(s: &str) -> Result<Expression> {$/;"	f
from_str	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/path/parser.rs	/^pub fn from_str(input: &str) -> Result<Expression, ErrorKind> {$/;"	f
from_timestamp	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn from_timestamp(secs: i64, nsecs: u32) -> NaiveDateTime {$/;"	f
from_timestamp_opt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn from_timestamp_opt(secs: i64, nsecs: u32) -> Option<NaiveDateTime> {$/;"	f
from_toml_value	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/file/format/toml.rs	/^fn from_toml_value(uri: Option<&String>, value: &toml::Value) -> Value {$/;"	f
from_u32	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn from_u32(n: u32) -> Option<Month> {$/;"	f
from_u64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn from_u64(n: u64) -> Option<Month> {$/;"	f
from_u64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn from_u64(n: u64) -> Option<Weekday> {$/;"	f
from_utc	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn from_utc(date: NaiveDate, offset: Tz::Offset) -> Date<Tz> {$/;"	f
from_utc	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn from_utc(datetime: NaiveDateTime, offset: Tz::Offset) -> DateTime<Tz> {$/;"	f
from_utc_date	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    fn from_utc_date(&self, utc: &NaiveDate) -> Date<Local> {$/;"	f
from_utc_date	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn from_utc_date(&self, utc: &NaiveDate) -> Date<Self> {$/;"	f
from_utc_datetime	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    fn from_utc_datetime(&self, utc: &NaiveDateTime) -> DateTime<Local> {$/;"	f
from_utc_datetime	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn from_utc_datetime(&self, utc: &NaiveDateTime) -> DateTime<Self> {$/;"	f
from_weekday_of_month	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn from_weekday_of_month(year: i32, month: u32, weekday: Weekday, n: u8) -> NaiveDate {$/;"	f
from_weekday_of_month_opt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn from_weekday_of_month_opt($/;"	f
from_yaml_value	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/file/format/yaml.rs	/^fn from_yaml_value(uri: Option<&String>, value: &yaml::Yaml) -> Value {$/;"	f
from_year	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn from_year(year: i32) -> YearFlags {$/;"	f
from_year_mod_400	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn from_year_mod_400(year: i32) -> YearFlags {$/;"	f
from_ymd	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn from_ymd(year: i32, month: u32, day: u32) -> NaiveDate {$/;"	f
from_ymd_opt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn from_ymd_opt(year: i32, month: u32, day: u32) -> Option<NaiveDate> {$/;"	f
from_yo	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn from_yo(year: i32, ordinal: u32) -> NaiveDate {$/;"	f
from_yo_opt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn from_yo_opt(year: i32, ordinal: u32) -> Option<NaiveDate> {$/;"	f
ge_mask	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^            fn ge_mask(self, other: Self) -> Self::Mask {$/;"	f
ge_mask	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^    fn ge_mask(self, other: Self) -> Self::Mask;$/;"	f
gen	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rng.rs	/^    fn gen<T>(&mut self) -> T$/;"	f
gen_bool	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rng.rs	/^    fn gen_bool(&mut self, p: f64) -> bool {$/;"	f
gen_index	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^fn gen_index<R: Rng + ?Sized>(rng: &mut R, ubound: usize) -> usize {$/;"	f
gen_range	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rng.rs	/^    fn gen_range<T, R>(&mut self, range: R) -> T$/;"	f
gen_ratio	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rng.rs	/^    fn gen_ratio(&mut self, numerator: u32, denominator: u32) -> bool {$/;"	f
generate	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/reseeding.rs	/^    fn generate(&mut self, results: &mut Self::Results) {$/;"	f
get	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/config.rs	/^    pub fn get<'de, T: Deserialize<'de>>(&self, key: &'de str) -> Result<T> {$/;"	f
get	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/path/mod.rs	/^    pub fn get(self, root: &Value) -> Option<&Value> {$/;"	f
get	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/container.rs	/^    pub fn get<T: Send + Sync + 'static>(&self) -> &T {$/;"	f
get	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/storage.rs	/^    pub fn get(&self) -> &T {$/;"	f
get	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/thread_local/mod.rs	/^    pub fn get(&self) -> Option<&T> {$/;"	f
get	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/thread_local/thread_id.rs	/^pub fn get() -> usize {$/;"	f
get	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/tls.rs	/^    pub fn get(&self) -> &T {$/;"	f
get_array	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/config.rs	/^    pub fn get_array(&self, key: &str) -> Result<Vec<Value>> {$/;"	f
get_bool	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/config.rs	/^    pub fn get_bool(&self, key: &str) -> Result<bool> {$/;"	f
get_cache	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_text_view.rs	/^    fn get_cache(&self) -> &InnerContentType {$/;"	f
get_content	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn get_content(&self) -> &dyn View {$/;"	f
get_content	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_text_view.rs	/^    fn get_content(content: &Arc<Mutex<TextContentInner>>) -> TextContentRef {$/;"	f
get_content	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_text_view.rs	/^    pub fn get_content(&self) -> TextContentRef {$/;"	f
get_content_mut	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn get_content_mut(&mut self) -> &mut dyn View {$/;"	f
get_current_dir	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^fn get_current_dir(siv: &mut Cursive, a_name: &str) -> String {$/;"	f
get_details_entry	/home/artie/Documents/Repos/fs_extra/src/dir.rs	/^pub fn get_details_entry<P>($/;"	f
get_details_entry_with_meta	/home/artie/Documents/Repos/fs_extra/src/dir.rs	/^fn get_details_entry_with_meta<P>($/;"	f
get_dir_content	/home/artie/Documents/Repos/fs_extra/src/dir.rs	/^pub fn get_dir_content<P>(path: P) -> Result<DirContent>$/;"	f
get_dir_content2	/home/artie/Documents/Repos/fs_extra/src/dir.rs	/^pub fn get_dir_content2<P>(path: P, options: &DirOptions) -> Result<DirContent>$/;"	f
get_fast	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/thread_local/mod.rs	/^    fn get_fast(&self, id: usize) -> Option<&T> {$/;"	f
get_float	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/config.rs	/^    pub fn get_float(&self, key: &str) -> Result<f64> {$/;"	f
get_fork_counter	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/reseeding.rs	/^    pub fn get_fork_counter() -> usize {$/;"	f
get_int	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/config.rs	/^    pub fn get_int(&self, key: &str) -> Result<i64> {$/;"	f
get_local	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/container.rs	/^    pub fn get_local<T: Send + 'static>(&self) -> &T {$/;"	f
get_mouse_button	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/n.rs	/^fn get_mouse_button(bare_event: i32) -> MouseButton {$/;"	f
get_mouse_button	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/pan.rs	/^fn get_mouse_button(bare_event: mmask_t) -> MouseButton {$/;"	f
get_mut	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/path/mod.rs	/^    pub fn get_mut<'a>(&self, root: &'a mut Value) -> Option<&'a mut Value> {$/;"	f
get_mut_forcibly	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/path/mod.rs	/^    pub fn get_mut_forcibly<'a>(&self, root: &'a mut Value) -> Option<&'a mut Value> {$/;"	f
get_observed_screen	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^    fn get_observed_screen(fake_screen: &Vec<&str>) -> ObservedScreen {$/;"	f
get_or	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/thread_local/mod.rs	/^    pub fn get_or<F>(&self, create: F) -> &T$/;"	f
get_or_create	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/n.rs	/^    fn get_or_create(&self, pair: ColorPair) -> i16 {$/;"	f
get_or_create	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/pan.rs	/^    fn get_or_create(&self, pair: ColorPair) -> i32 {$/;"	f
get_or_set	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/storage.rs	/^    pub fn get_or_set<F: FnOnce() -> T>(&self, from: F) -> &T {$/;"	f
get_or_try	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/thread_local/mod.rs	/^    pub fn get_or_try<F, E>(&self, create: F) -> Result<&T, E>$/;"	f
get_precise_ns	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        pub fn get_precise_ns() -> u64 {$/;"	f
get_precise_ns	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub fn get_precise_ns() -> u64 {$/;"	f
get_selected_items	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn get_selected_items(&mut self) -> std::collections::BTreeSet<usize> \/*todo, why not by &*\/ {$/;"	f
get_selected_path	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^fn get_selected_path(siv: &mut Cursive, a_name: &str) -> Option<Vec<String>> {$/;"	f
get_selected_path_from_inx	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^fn get_selected_path_from_inx(siv: &mut Cursive, a_name: &str, index: usize) -> Option<String> {$/;"	f
get_shared_content	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_text_view.rs	/^    pub fn get_shared_content(&mut self) -> TextContent {$/;"	f
get_size	/home/artie/Documents/Repos/fs_extra/src/dir.rs	/^pub fn get_size<P>(path: P) -> Result<u64>$/;"	f
get_slow	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/thread_local/mod.rs	/^    fn get_slow(&self, id: usize, table_top: &Table<T>) -> Option<&T> {$/;"	f
get_str	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/config.rs	/^    pub fn get_str(&self, key: &str) -> Result<String> {$/;"	f
get_table	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/config.rs	/^    pub fn get_table(&self, key: &str) -> Result<HashMap<String, Value>> {$/;"	f
get_time	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub fn get_time() -> Timespec {$/;"	f
get_time	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        pub fn get_time() -> (i64, i32) {$/;"	f
get_time	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub fn get_time() -> (i64, i32) {$/;"	f
get_title	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn get_title(&self) -> String {$/;"	f
get_title_bottom	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn get_title_bottom(&self) -> String {$/;"	f
get_weight	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^        fn get_weight<T>(item: &(u32, T)) -> u32 {$/;"	f
gt_mask	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^            fn gt_mask(self, other: Self) -> Self::Mask {$/;"	f
gt_mask	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^    fn gt_mask(self, other: Self) -> Self::Mask;$/;"	f
h_align	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn h_align(mut self, h: HAlign) -> Self {$/;"	f
h_align	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_text_view.rs	/^    pub fn h_align(mut self, h: HAlign) -> Self {$/;"	f
handle_event	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    fn handle_event(&mut self, event: &mio::Event) {$/;"	f
handle_inotify	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    fn handle_inotify(&mut self) {$/;"	f
handle_messages	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    fn handle_messages(&mut self) {$/;"	f
has_colors	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/blt.rs	/^    fn has_colors(&self) -> bool {$/;"	f
has_colors	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/crossterm.rs	/^    fn has_colors(&self) -> bool {$/;"	f
has_colors	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/n.rs	/^    fn has_colors(&self) -> bool {$/;"	f
has_colors	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/pan.rs	/^    fn has_colors(&self) -> bool {$/;"	f
has_colors	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/mod.rs	/^    fn has_colors(&self) -> bool {$/;"	f
has_colors	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/termion.rs	/^    fn has_colors(&self) -> bool {$/;"	f
has_completed	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/init.rs	/^    pub fn has_completed(&self) -> bool {$/;"	f
hash	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn hash<H: hash::Hasher>(&self, state: &mut H) {$/;"	f
hash	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn hash<H: hash::Hasher>(&self, state: &mut H) {$/;"	f
hash	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn hash<H: hash::Hasher>(&self, state: &mut H) {$/;"	f
hash	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn hash<H: hash::Hasher>(&self, state: &mut H) {$/;"	f
hash	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn hash() {$/;"	f
hash	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    fn hash<H: Hasher>(&self, state: &mut H) {$/;"	f
hash	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/thread_local/mod.rs	/^fn hash(id: usize, bits: usize) -> usize {$/;"	f
help	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^fn help(siv: &mut cursive::Cursive) {}$/;"	f
hidden_export	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/mod.rs	/^pub mod hidden_export {$/;"	m
hms	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn hms(&self) -> (u32, u32, u32) {$/;"	f
hook	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^    pub fn hook<T>(r: &mut T) -> Operation {$/;"	f
hour	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn hour(&self) -> u32 {$/;"	f
hour	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn hour(&self) -> u32;$/;"	f
hour	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn hour(&self) -> u32 {$/;"	f
hour	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn hour(&self) -> u32 {$/;"	f
hour12	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn hour12(&self) -> (bool, u32) {$/;"	f
hours	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn hours(hours: i64) -> Duration {$/;"	f
hours	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn hours(hours: i64) -> Duration {$/;"	f
i64_to_large_integer	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn i64_to_large_integer(i: i64) -> LARGE_INTEGER {$/;"	f
ignore	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/timer.rs	/^    pub fn ignore(&self, id: u64) {$/;"	f
ignore_empty	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/env.rs	/^    pub fn ignore_empty(mut self, ignore: bool) -> Self {$/;"	f
impl_fill	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rng.rs	/^macro_rules! impl_fill {$/;"	d
impl_fill_arrays	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rng.rs	/^macro_rules! impl_fill_arrays {$/;"	d
impl_fill_each	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rng.rs	/^macro_rules! impl_fill_each {$/;"	d
impl_int_from_uint	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/integer.rs	/^macro_rules! impl_int_from_uint {$/;"	d
impl_nzint	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/integer.rs	/^macro_rules! impl_nzint {$/;"	d
impl_weight	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/weighted.rs	/^    macro_rules! impl_weight {$/;"	d
important_area	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_button.rs	/^    fn important_area(&self, view_size: Vec2) -> cursive::Rect {$/;"	f
important_area	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    fn important_area(&self, _: Vec2) -> cursive::Rect {$/;"	f
important_area	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    fn important_area(&self, size: Vec2) -> Rect {$/;"	f
in_between	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn in_between(start: i32, end: i32, div: i32) -> i32 {$/;"	f
inc_last_key_index	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn inc_last_key_index(&mut self) -> Result<()> {$/;"	f
index	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^    pub fn index(&self) -> usize {$/;"	f
index	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^    pub fn index(&self, index: usize) -> usize {$/;"	f
index	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^    fn index(&self, index: Vec2) -> &Self::Output {$/;"	f
index_mut	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^    fn index_mut(&mut self, index: Vec2) -> &mut Option<ObservedCell> {$/;"	f
info	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/lib.rs	/^macro_rules! info { ($($x:tt)*) => ($/;"	d
info	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        fn info() -> &'static mach_timebase_info {$/;"	f
info	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn info<S: Into<StyledString>>(text: S) -> Self {$/;"	f
init	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/blt.rs	/^    pub fn init() -> Box<dyn backend::Backend> {$/;"	f
init	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/crossterm.rs	/^    pub fn init() -> Result<Box<dyn backend::Backend>, crossterm::ErrorKind>$/;"	f
init	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/n.rs	/^    pub fn init() -> io::Result<Box<dyn backend::Backend>> {$/;"	f
init	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/pan.rs	/^    pub fn init() -> std::io::Result<Box<dyn backend::Backend>> {$/;"	f
init	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/mod.rs	/^    pub fn init(size_op: Option<Vec2>) -> Box<Backend>$/;"	f
init	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/termion.rs	/^    pub fn init() -> std::io::Result<Box<dyn backend::Backend>> {$/;"	f
init_map_if_needed	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/container.rs	/^    unsafe fn init_map_if_needed(&self) {$/;"	f
init_stdio	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/n.rs	/^    pub fn init_stdio() -> io::Result<Box<dyn backend::Backend>> {$/;"	f
init_stdio	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/termion.rs	/^    pub fn init_stdio() -> std::io::Result<Box<dyn backend::Backend>> {$/;"	f
init_with_files	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/n.rs	/^    pub fn init_with_files($/;"	f
init_with_files	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/termion.rs	/^    pub fn init_with_files($/;"	f
initialize_keymap	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/n.rs	/^fn initialize_keymap() -> HashMap<i32, Event> {$/;"	f
initialize_keymap	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/pan.rs	/^fn initialize_keymap() -> HashMap<i32, Event> {$/;"	f
inner	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^mod inner {$/;"	m
inner_important_area	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    fn inner_important_area(&self, size: Vec2) -> Rect {$/;"	f
input	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/mod.rs	/^    pub fn input(&self) -> Sender<Option<Event>> {$/;"	f
insert	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/thread_local/mod.rs	/^    fn insert(&self, id: usize, data: Box<T>, new: bool) -> &T {$/;"	f
insert_color	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/n.rs	/^    fn insert_color($/;"	f
insert_color	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/pan.rs	/^    fn insert_color($/;"	f
insert_column	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn insert_column<S: Into<String>, C: FnOnce(TableColumn<H>) -> TableColumn<H>>(&mut self, i: usize, column: H, title: S, callback: C) {$/;"	f
insert_item	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn insert_item(&mut self, item: T) {$/;"	f
internal	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/lib.rs	/^        pub mod internal {$/;"	m
internal_fix	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^macro_rules! internal_fix {$/;"	d
into	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^    fn into(self) -> usize {$/;"	f
into	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn into() {$/;"	f
into_array	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^    pub fn into_array(self) -> Result<Vec<Value>> {$/;"	f
into_bool	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^    pub fn into_bool(self) -> Result<bool> {$/;"	f
into_content	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn into_content(self) -> Box<dyn View> {$/;"	f
into_erased	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    fn into_erased(self) -> Self::Erased {$/;"	f
into_erased	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    fn into_erased(self) -> Self::Erased;$/;"	f
into_float	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^    pub fn into_float(self) -> Result<f64> {$/;"	f
into_float_with_exponent	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/float.rs	/^            fn into_float_with_exponent(self, exponent: i32) -> $ty {$/;"	f
into_float_with_exponent	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/float.rs	/^    fn into_float_with_exponent(self, exponent: i32) -> Self::F;$/;"	f
into_inner	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/err.rs	/^    pub fn into_inner(self) -> T {$/;"	f
into_inner	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog_try.rs	/^        fn into_inner(self) -> ::std::result::Result<Self::V, Self>$/;"	f
into_int	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^    pub fn into_int(self) -> Result<i64> {$/;"	f
into_iter	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	f
into_iter	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^    fn into_iter(self) -> IndexVecIntoIter {$/;"	f
into_owner	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn into_owner() {$/;"	f
into_owner	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    pub fn into_owner(self) -> O {$/;"	f
into_owning_ref	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn into_owning_ref() {$/;"	f
into_runner	/home/artie/Documents/Repos/smallB_cursive/cursive/src/cursive_runnable.rs	/^    pub fn into_runner(self) -> CursiveRunner<Self> {$/;"	f
into_str	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^    pub fn into_str(self) -> Result<String> {$/;"	f
into_table	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^    pub fn into_table(self) -> Result<HashMap<String, Value>> {$/;"	f
into_vec	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^    pub fn into_vec(self) -> Vec<usize> {$/;"	f
invalid_type	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/error.rs	/^    pub fn invalid_type($/;"	f
invalidate	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_button.rs	/^    fn invalidate(&mut self) {$/;"	f
invalidate	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    fn invalidate(&mut self) {$/;"	f
is_cache_valid	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_text_view.rs	/^    fn is_cache_valid(&self, size: Vec2) -> bool {$/;"	f
is_continuation	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^    pub fn is_continuation(&self) -> bool {$/;"	f
is_disconnected	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/err.rs	/^    pub fn is_disconnected(&self) -> bool {$/;"	f
is_disconnected	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/array.rs	/^    pub fn is_disconnected(&self) -> bool {$/;"	f
is_disconnected	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^    pub fn is_disconnected(&self) -> bool {$/;"	f
is_empty	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/err.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/array.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/at.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/never.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/tick.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/zero.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    fn is_empty(&self) -> bool {$/;"	f
is_empty	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    fn is_empty(&self) -> bool;$/;"	f
is_empty	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_enabled	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn is_enabled(&self) -> bool {$/;"	f
is_finite	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^            fn is_finite(self) -> bool {$/;"	f
is_finite	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^    fn is_finite(self) -> bool;$/;"	f
is_forked	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/reseeding.rs	/^    fn is_forked(&self, global_fork_counter: usize) -> bool {$/;"	f
is_frozen	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/container.rs	/^    pub fn is_frozen(&self) -> bool {$/;"	f
is_full	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^    pub fn is_full(&self) -> bool {$/;"	f
is_full	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/err.rs	/^    pub fn is_full(&self) -> bool {$/;"	f
is_full	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/array.rs	/^    pub fn is_full(&self) -> bool {$/;"	f
is_full	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/at.rs	/^    pub fn is_full(&self) -> bool {$/;"	f
is_full	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^    pub fn is_full(&self) -> bool {$/;"	f
is_full	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/never.rs	/^    pub fn is_full(&self) -> bool {$/;"	f
is_full	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/tick.rs	/^    pub fn is_full(&self) -> bool {$/;"	f
is_full	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/zero.rs	/^    pub fn is_full(&self) -> bool {$/;"	f
is_infinite	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^            fn is_infinite(self) -> bool {$/;"	f
is_infinite	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^    fn is_infinite(self) -> bool;$/;"	f
is_leap_year	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/display.rs	/^fn is_leap_year(year: i32) -> bool {$/;"	f
is_nan	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^            fn is_nan(self) -> bool {$/;"	f
is_nan	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^    fn is_nan(self) -> bool;$/;"	f
is_ready	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^    fn is_ready(&self) -> bool {$/;"	f
is_ready	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/array.rs	/^    fn is_ready(&self) -> bool {$/;"	f
is_ready	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/at.rs	/^    fn is_ready(&self) -> bool {$/;"	f
is_ready	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^    fn is_ready(&self) -> bool {$/;"	f
is_ready	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/never.rs	/^    fn is_ready(&self) -> bool {$/;"	f
is_ready	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/tick.rs	/^    fn is_ready(&self) -> bool {$/;"	f
is_ready	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/zero.rs	/^    fn is_ready(&self) -> bool {$/;"	f
is_ready	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^    fn is_ready(&self) -> bool {$/;"	f
is_ready	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^    fn is_ready(&self) -> bool;$/;"	f
is_recursive	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    fn is_recursive(&self) -> bool {$/;"	f
is_running	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^    fn is_running(&self) -> bool {$/;"	f
is_timeout	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/err.rs	/^    pub fn is_timeout(&self) -> bool {$/;"	f
is_zero	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn is_zero(&self) -> bool {$/;"	f
is_zero	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn is_zero(&self) -> bool {$/;"	f
iso_week	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn iso_week(&self) -> IsoWeek {$/;"	f
iso_week	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn iso_week(&self) -> IsoWeek {$/;"	f
iso_week	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn iso_week(&self) -> IsoWeek;$/;"	f
iso_week	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn iso_week(&self) -> IsoWeek {$/;"	f
iso_week	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn iso_week(&self) -> IsoWeek {$/;"	f
iso_week	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/display.rs	/^fn iso_week(fmt: &mut fmt::Formatter, ch:char, tm: &Tm) -> fmt::Result {$/;"	f
iso_week_days	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/display.rs	/^fn iso_week_days(yday: i32, wday: i32) -> i32 {$/;"	f
iso_week_from_yof	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/isoweek.rs	/^pub fn iso_week_from_yof(year: i32, of: Of) -> IsoWeek {$/;"	f
isoweek_delta	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn isoweek_delta(&self) -> u32 {$/;"	f
isoweekdate_raw	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn isoweekdate_raw(&self) -> (u32, Weekday) {$/;"	f
isoywd	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn isoywd(&self, year: i32, week: u32, weekday: Weekday) -> Date<Self> {$/;"	f
isoywd_opt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn isoywd_opt(&self, year: i32, week: u32, weekday: Weekday) -> LocalResult<Date<Self>> {$/;"	f
item	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn item(&self) -> Option<usize> {$/;"	f
items	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn items(self, items: Vec<T>) -> Self {$/;"	f
iter	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^    pub fn iter(&self) -> Iter<'_, T> {$/;"	f
iter	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^    pub fn iter(&self) -> IndexVecIter<'_> {$/;"	f
iter_days	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn iter_days(&self) -> NaiveDateDaysIterator {$/;"	f
iter_weeks	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn iter_weeks(&self) -> NaiveDateWeeksIterator {$/;"	f
label	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_button.rs	/^    pub fn label(&self) -> &str {$/;"	f
labels	/home/artie/Documents/Projects/rust/FileManager/src/internals/literals/copy_progress_dlg.rs	/^pub mod labels {$/;"	m
lanes	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^    fn lanes() -> usize {$/;"	f
large_integer_to_i64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn large_integer_to_i64(l: LARGE_INTEGER) -> i64 {$/;"	f
last_key_index_pair	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn last_key_index_pair(&self) -> Option<(&str, Option<usize>)> {$/;"	f
latest	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    pub fn latest(self) -> Option<T> {$/;"	f
layout	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_button.rs	/^    fn layout(&mut self, size: Vec2) {$/;"	f
layout	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    fn layout(&mut self, mut size: Vec2) {$/;"	f
layout	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_text_view.rs	/^    fn layout(&mut self, size: Vec2) {$/;"	f
layout	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    fn layout(&mut self, size: Vec2) {$/;"	f
layout_content	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    fn layout_content(&mut self, size: Vec2) {$/;"	f
len	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/array.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/at.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/never.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/tick.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/zero.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^    fn len(&self) -> usize {$/;"	f
len	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn len(&self) -> usize {$/;"	f
lit	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^macro_rules! lit {$/;"	d
local	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^    pub fn local(self) -> Tm {$/;"	f
local_minus_utc	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    pub fn local_minus_utc(&self) -> i32 {$/;"	f
local_tm_to_time	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/stub.rs	/^pub fn local_tm_to_time(tm: &Tm) -> i64 {$/;"	f
local_tm_to_time	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/unix.rs	/^pub fn local_tm_to_time(rust_tm: &Tm) -> i64 {$/;"	f
local_tm_to_time	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/windows.rs	/^pub fn local_tm_to_time(tm: &Tm) -> i64 {$/;"	f
local_tm_to_time	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub fn local_tm_to_time(rust_tm: &Tm) -> i64 {$/;"	f
local_tm_to_time	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub fn local_tm_to_time(tm: &Tm) -> i64 {$/;"	f
lock	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/utils.rs	/^    pub fn lock(&self) -> SpinlockGuard<'_, T> {$/;"	f
lock	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/container.rs	/^    fn lock(&self) {$/;"	f
lookup	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/thread_local/mod.rs	/^    fn lookup(id: usize, table: &Table<T>) -> Option<&UnsafeCell<Option<Box<T>>>> {$/;"	f
ls	/home/artie/Documents/Repos/fs_extra/src/dir.rs	/^pub fn ls<P>(path: P, config: &HashSet<DirEntryAttr>) -> Result<LsResult>$/;"	f
mac	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    mod mac {$/;"	m
main	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^fn main() {$/;"	f
main	/home/artie/Documents/Projects/rust/FileManager/src/main.rs	/^fn main() {$/;"	f
make_full_key	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn make_full_key(&self, key: &str) -> String {$/;"	f
make_mask	/home/artie/Documents/Repos/smallB_cursive/cursive/src/utf8.rs	/^fn make_mask(n: usize) -> u8 {$/;"	f
map	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    pub fn map<U, F: FnMut(T) -> U>(self, mut f: F) -> LocalResult<U> {$/;"	f
map	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    pub fn map<F, U: ?Sized>(mut self, f: F) -> OwningRef<O, U>$/;"	f
map	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    pub fn map<F, U: ?Sized>(self, f: F) -> OwningRef<O, U>$/;"	f
map_chained	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn map_chained() {$/;"	f
map_chained_inference	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn map_chained_inference() {$/;"	f
map_heap_ref	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn map_heap_ref() {$/;"	f
map_key	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/crossterm.rs	/^    fn map_key(&mut self, event: CEvent) -> Option<Event> {$/;"	f
map_key	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/termion.rs	/^    fn map_key(&mut self, event: TEvent) -> Event {$/;"	f
map_local	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^fn map_local<Tz: TimeZone, F>(d: &Date<Tz>, mut f: F) -> Option<Date<Tz>>$/;"	f
map_local	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^fn map_local<Tz: TimeZone, F>(dt: &DateTime<Tz>, mut f: F) -> Option<DateTime<Tz>>$/;"	f
map_mut	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    pub fn map_mut<F, U: ?Sized>(mut self, f: F) -> OwningRefMut<O, U>$/;"	f
map_mut	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/container.rs	/^    unsafe fn map_mut(&self) -> &mut TypeMap {$/;"	f
map_mut_chained	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn map_mut_chained() {$/;"	f
map_mut_heap_ref	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn map_mut_heap_ref() {$/;"	f
map_mut_offset_ref	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn map_mut_offset_ref() {$/;"	f
map_mut_static_ref	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn map_mut_static_ref() {$/;"	f
map_offset_ref	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn map_offset_ref() {$/;"	f
map_owner	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    pub unsafe fn map_owner<F, P>(self, f: F) -> OwningRef<P, T>$/;"	f
map_owner	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    pub unsafe fn map_owner<F, P>(self, f: F) -> OwningRefMut<P, T>$/;"	f
map_owner_box	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    pub fn map_owner_box(self) -> OwningRef<Box<O>, T> {$/;"	f
map_owner_box	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    pub fn map_owner_box(self) -> OwningRefMut<Box<O>, T> {$/;"	f
map_ref	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/container.rs	/^    unsafe fn map_ref(&self) -> &TypeMap {$/;"	f
map_static_ref	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn map_static_ref() {$/;"	f
map_with_owner	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn map_with_owner() {$/;"	f
map_with_owner	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    pub fn map_with_owner<F, U: ?Sized>(self, f: F) -> OwningRef<O, U>$/;"	f
mark_complete	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/init.rs	/^    pub fn mark_complete(&self) {$/;"	f
match_digits	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/parse.rs	/^fn match_digits(ss: &mut &str, min_digits : usize, max_digits: usize, ws: bool) -> Option<i32> {$/;"	f
match_digits_i64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/parse.rs	/^fn match_digits_i64(ss: &mut &str, min_digits : usize, max_digits: usize, ws: bool) -> Option<i64> {$/;"	f
match_digits_in_range	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/parse.rs	/^fn match_digits_in_range(ss: &mut &str,$/;"	f
match_fractional_seconds	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/parse.rs	/^fn match_fractional_seconds(ss: &mut &str) -> i32 {$/;"	f
match_str	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/parse.rs	/^fn match_str(s: &mut &str, needle: &str) -> bool {$/;"	f
match_strs	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/parse.rs	/^fn match_strs(ss: &mut &str, strs: &[(&str, i32)]) -> Option<i32> {$/;"	f
max	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^    fn max(&self) -> Vec2 {$/;"	f
max	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^    fn max(&self) -> Vec2;$/;"	f
max_value	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn max_value() -> Duration {$/;"	f
max_value	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn max_value() -> Duration { MAX }$/;"	f
mdf	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn mdf(&self) -> Mdf {$/;"	f
menu	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^fn menu(siv: &mut cursive::Cursive) {}$/;"	f
merge	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/config.rs	/^    pub fn merge<T>(&mut self, source: T) -> Result<&mut Config>$/;"	f
message_on_stack	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/zero.rs	/^    fn message_on_stack(msg: T) -> Packet<T> {$/;"	f
microseconds	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn microseconds(microseconds: i64) -> Duration {$/;"	f
microseconds	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn microseconds(microseconds: i64) -> Duration {$/;"	f
milliseconds	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn milliseconds(milliseconds: i64) -> Duration {$/;"	f
milliseconds	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn milliseconds(milliseconds: i64) -> Duration {$/;"	f
min	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^    fn min(&self) -> Vec2 {$/;"	f
min	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^    fn min(&self) -> Vec2;$/;"	f
min_value	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn min_value() -> Duration {$/;"	f
min_value	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn min_value() -> Duration { MIN }$/;"	f
minute	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn minute(&self) -> u32 {$/;"	f
minute	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn minute(&self) -> u32;$/;"	f
minute	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn minute(&self) -> u32 {$/;"	f
minute	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn minute(&self) -> u32 {$/;"	f
minutes	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn minutes(minutes: i64) -> Duration {$/;"	f
minutes	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn minutes(minutes: i64) -> Duration {$/;"	f
mixed_bitflags_form	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    fn mixed_bitflags_form() {$/;"	f
mkdir	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^fn mkdir(siv: &mut cursive::Cursive) {}$/;"	f
mod_floor_64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^fn mod_floor_64(this: i64, other: i64) -> i64 {$/;"	f
mod_floor_64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^fn mod_floor_64(this: i64, other: i64) -> i64 {$/;"	f
month	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn month(&self) -> u32 {$/;"	f
month	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn month(&self) -> u32 {$/;"	f
month	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn month(&self) -> u32;$/;"	f
month	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn month(&self) -> u32 {$/;"	f
month	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn month(&self) -> u32 {$/;"	f
month	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn month(&self) -> u32 {$/;"	f
month0	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn month0(&self) -> u32 {$/;"	f
month0	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn month0(&self) -> u32 {$/;"	f
month0	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn month0(&self) -> u32;$/;"	f
month0	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn month0(&self) -> u32 {$/;"	f
month0	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn month0(&self) -> u32 {$/;"	f
month_serde	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^mod month_serde {$/;"	m
move_dir	/home/artie/Documents/Repos/fs_extra/src/dir.rs	/^pub fn move_dir<P, Q>(from: P, to: Q, options: &CopyOptions) -> Result<u64>$/;"	f
move_dir_with_progress	/home/artie/Documents/Repos/fs_extra/src/dir.rs	/^pub fn move_dir_with_progress<P, Q, F>($/;"	f
move_file	/home/artie/Documents/Repos/fs_extra/src/file.rs	/^pub fn move_file<P, Q>(from: P, to: Q, options: &CopyOptions) -> Result<u64>$/;"	f
move_file_with_progress	/home/artie/Documents/Repos/fs_extra/src/file.rs	/^pub fn move_file_with_progress<P, Q, F>($/;"	f
move_items	/home/artie/Documents/Repos/fs_extra/src/lib.rs	/^pub fn move_items<P, Q>(from_items: &[P], to: Q, options: &dir::CopyOptions) -> Result<u64>$/;"	f
move_items_with_progress	/home/artie/Documents/Repos/fs_extra/src/lib.rs	/^pub fn move_items_with_progress<P, Q, F>($/;"	f
move_last	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^        fn move_last(slice: &mut [usize], pos: usize) {$/;"	f
mul	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn mul(self, rhs: i32) -> Duration {$/;"	f
mul	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn mul(self, rhs: i32) -> Duration {$/;"	f
mul_div_i64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn mul_div_i64(value: i64, numer: i64, denom: i64) -> i64 {$/;"	f
mut	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^static mut COOKIE_COUNTER: u32 = 0;$/;"	c
mut	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^            static mut MUT_S: [u8; 5] = *b"hello";$/;"	c
mut	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^        static mut LOCK: *mut Mutex<()> = 0 as *mut _;$/;"	c
mut	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            static mut INFO: mach_timebase_info = mach_timebase_info {$/;"	c
mut	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        static mut FREQUENCY: i64 = 0;$/;"	c
mutate	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn mutate() {$/;"	f
naive	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^pub mod naive {$/;"	m
naive_local	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn naive_local(&self) -> NaiveDate {$/;"	f
naive_local	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn naive_local(&self) -> NaiveDateTime {$/;"	f
naive_utc	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn naive_utc(&self) -> NaiveDate {$/;"	f
naive_utc	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn naive_utc(&self) -> NaiveDateTime {$/;"	f
name	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    pub fn name(&self) -> &'static str {$/;"	f
name	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/blt.rs	/^    fn name(&self) -> &str {$/;"	f
name	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/crossterm.rs	/^    fn name(&self) -> &str {$/;"	f
name	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/n.rs	/^    fn name(&self) -> &str {$/;"	f
name	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/pan.rs	/^    fn name(&self) -> &str {$/;"	f
name	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/termion.rs	/^    fn name(&self) -> &str {$/;"	f
nanos_mod_sec	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn nanos_mod_sec(&self) -> i32 {$/;"	f
nanos_mod_sec	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn nanos_mod_sec(&self) -> i32 {$/;"	f
nanosecond	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn nanosecond(&self) -> u32 {$/;"	f
nanosecond	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn nanosecond(s: &str) -> ParseResult<(&str, i64)> {$/;"	f
nanosecond	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn nanosecond(&self) -> u32;$/;"	f
nanosecond	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn nanosecond(&self) -> u32 {$/;"	f
nanosecond	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn nanosecond(&self) -> u32 {$/;"	f
nanosecond_fixed	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn nanosecond_fixed(s: &str, digits: usize) -> ParseResult<(&str, i64)> {$/;"	f
nanoseconds	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn nanoseconds(nanos: i64) -> Duration {$/;"	f
nanoseconds	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn nanoseconds(nanos: i64) -> Duration {$/;"	f
ncurses	/home/artie/Documents/Repos/smallB_cursive/cursive/src/cursive_runnable.rs	/^    pub fn ncurses() -> Self {$/;"	f
ncurses	/home/artie/Documents/Repos/smallB_cursive/cursive/src/lib.rs	/^pub fn ncurses() -> CursiveRunnable {$/;"	f
ndays	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn ndays(&self) -> u32 {$/;"	f
ne_timestamp	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^fn ne_timestamp<T: fmt::Display>(ts: T) -> SerdeError<T, u8> {$/;"	f
needed	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/init.rs	/^    pub fn needed(&self) -> bool {$/;"	f
needs_relayout	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_button.rs	/^    fn needs_relayout(&self) -> bool {$/;"	f
needs_relayout	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    fn needs_relayout(&self) -> bool {$/;"	f
needs_relayout	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_text_view.rs	/^    fn needs_relayout(&self) -> bool {$/;"	f
neg	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn neg(self) -> Duration {$/;"	f
neg	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn neg(self) -> Duration {$/;"	f
nested	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn nested() {$/;"	f
never	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^pub fn never<T>() -> Receiver<T> {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    pub fn new(date: Option<NaiveDate>, time: Option<NaiveTime>, items: I) -> DelayedFormat<I> {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn new() -> Parsed {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^    pub fn new(s: &'a str) -> StrftimeItems<'a> {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn new(date: NaiveDate, time: NaiveTime) -> NaiveDateTime {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn new(month: u32, day: u32, YearFlags(flags): YearFlags) -> Mdf {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn new(ordinal: u32, YearFlags(flags): YearFlags) -> Of {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/config.rs	/^    pub fn new() -> Self {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^    fn new(elements: Vec<Value>) -> Self {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^    fn new(key: &'a str) -> Self {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^    fn new(table: HashMap<String, Value>) -> Self {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/env.rs	/^    pub fn new() -> Self {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/file/mod.rs	/^    pub fn new(name: &str, format: FileFormat) -> Self {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/file/source/file.rs	/^    pub fn new(name: PathBuf) -> FileSourceFile {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^    pub fn new(value: Value, key: &'a str) -> Self {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^    pub fn new<V>(origin: Option<&String>, kind: V) -> Self$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/context.rs	/^    fn new() -> Context {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/counter.rs	/^pub fn new<C>(chan: C) -> (Sender<C>, Receiver<C>) {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^    fn new() -> Block<T> {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^    pub fn new() -> Self {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/never.rs	/^    pub fn new() -> Self {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/tick.rs	/^    pub fn new(dur: Duration) -> Self {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/zero.rs	/^    pub fn new() -> Self {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^    pub fn new() -> Select<'a> {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/utils.rs	/^    pub fn new(value: T) -> Spinlock<T> {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/waker.rs	/^    pub fn new() -> Self {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/mod.rs	/^    pub fn new(delay: Duration, tx: mpsc::Sender<DebouncedEvent>) -> Debounce {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/timer.rs	/^    pub fn new($/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^    fn new(tx: Sender<DebouncedEvent>, delay: Duration) -> Result<FsEventWatcher> {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    fn new(tx: Sender<DebouncedEvent>, delay: Duration) -> Result<INotifyWatcher> {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    pub fn new(inotify: Inotify, event_tx: EventTx) -> Result<EventLoop> {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    fn new(tx: Sender<DebouncedEvent>, delay: Duration) -> Result<Self>;$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/null.rs	/^    fn new(tx: Sender<DebouncedEvent>, delay: Duration) -> Result<NullWatcher> {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/poll.rs	/^    fn new(tx: Sender<DebouncedEvent>, delay: Duration) -> Result<PollWatcher> {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    fn new(tx: Sender<DebouncedEvent>, delay: Duration) -> Result<ReadDirectoryChangesWatcher> {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    pub fn new(mut o: O) -> Self$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    pub fn new(o: O) -> Self {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    pub fn new(o: O) -> Self$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/bernoulli.rs	/^    pub fn new(p: f64) -> Result<Bernoulli, BernoulliError> {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^            fn new<B1, B2>(low: B1, high: B2) -> Self$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^            fn new<B1, B2>(low_b: B1, high_b: B2) -> Self$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    fn new<B1, B2>(low: B1, high: B2) -> Self$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    fn new<B1, B2>(low_b: B1, high_b: B2) -> Self$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    pub fn new<B1, B2>(low: B1, high: B2) -> Uniform<X>$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/weighted.rs	/^        pub fn new(_weights: Vec<W>) -> Result<Self, WeightedError> {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/weighted_index.rs	/^    pub fn new<I>(weights: I) -> Result<WeightedIndex<X>, WeightedError>$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/read.rs	/^    pub fn new(r: R) -> ReadRng<R> {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/reseeding.rs	/^    fn new(rng: R, threshold: u64, reseeder: Rsdr) -> Self {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/reseeding.rs	/^    pub fn new(rng: R, threshold: u64, reseeder: Rsdr) -> Self {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/mock.rs	/^    pub fn new(initial: u64, increment: u64) -> Self {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/thread_local/mod.rs	/^    pub fn new() -> ThreadLocal<T> {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/thread_local/thread_id.rs	/^    fn new() -> ThreadId {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/thread_local/thread_id.rs	/^    fn new() -> ThreadIdManager {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/tls.rs	/^    pub fn new<F: Fn() -> T + 'static>(init_fn: F) -> LocalValue<T> {$/;"	f
new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub fn new(sec: i64, nsec: i32) -> Timespec {$/;"	f
new	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_button.rs	/^    pub fn new<F, S>(label: S, cb: F) -> Self$/;"	f
new	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn new() -> Self {$/;"	f
new	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn new<F, S: Into<String>>(label: S, cb: F) -> Self$/;"	f
new	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_text_view.rs	/^    pub fn new<S>(content: S) -> Self$/;"	f
new	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    fn new(column: H, title: String) -> Self {$/;"	f
new	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn new() -> Self {$/;"	f
new	/home/artie/Documents/Projects/rust/FileManager/src/internals/delimiter.rs	/^    pub fn new(title: &str) -> Self {$/;"	f
new	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^    pub fn new(mut siv: &mut cursive::CursiveRunnable) {$/;"	f
new	/home/artie/Documents/Repos/fs_extra/src/dir.rs	/^    pub fn new() -> CopyOptions {$/;"	f
new	/home/artie/Documents/Repos/fs_extra/src/dir.rs	/^    pub fn new() -> DirOptions {$/;"	f
new	/home/artie/Documents/Repos/fs_extra/src/error.rs	/^    pub fn new(kind: ErrorKind, message: &str) -> Error {$/;"	f
new	/home/artie/Documents/Repos/fs_extra/src/file.rs	/^    pub fn new() -> CopyOptions {$/;"	f
new	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^    fn new($/;"	f
new	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^    fn new(parent: &'a ObservedScreen, min: Vec2, max: Vec2) -> Self {$/;"	f
new	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^    pub fn new($/;"	f
new	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^    pub fn new(size: Vec2) -> Self {$/;"	f
new	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed_screen_view.rs	/^    pub fn new(obs: ObservedScreen) -> Self {$/;"	f
new	/home/artie/Documents/Repos/smallB_cursive/cursive/src/cursive_runnable.rs	/^    pub fn new<E, F>(mut backend_init: F) -> Self$/;"	f
new_assert_stable_address	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    pub unsafe fn new_assert_stable_address(mut o: O) -> Self$/;"	f
new_assert_stable_address	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    pub unsafe fn new_assert_stable_address(o: O) -> Self$/;"	f
new_bitflags_form	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    fn new_bitflags_form() {$/;"	f
new_deadline	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/at.rs	/^    pub fn new_deadline(when: Instant) -> Self {$/;"	f
new_default	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^macro_rules! new_default($/;"	d
new_deref	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn new_deref() {$/;"	f
new_deref_mut	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn new_deref_mut() {$/;"	f
new_inclusive	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^            fn new_inclusive<B1, B2>(low: B1, high: B2) -> Self$/;"	f
new_inclusive	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^            fn new_inclusive<B1, B2>(low_b: B1, high_b: B2) -> Self$/;"	f
new_inclusive	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    fn new_inclusive<B1, B2>(low: B1, high: B2) -> Self$/;"	f
new_inclusive	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    fn new_inclusive<B1, B2>(low_b: B1, high_b: B2) -> Self$/;"	f
new_inclusive	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    pub fn new_inclusive<B1, B2>(low: B1, high: B2) -> Uniform<X>$/;"	f
new_mut	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    pub fn new_mut(o: O) -> Self {$/;"	f
new_raw	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^    fn new_raw(tx: Sender<RawEvent>) -> Result<FsEventWatcher> {$/;"	f
new_raw	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    fn new_raw(tx: Sender<RawEvent>) -> Result<INotifyWatcher> {$/;"	f
new_raw	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    fn new_raw(tx: Sender<RawEvent>) -> Result<Self>;$/;"	f
new_raw	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/null.rs	/^    fn new_raw(tx: Sender<RawEvent>) -> Result<NullWatcher> {$/;"	f
new_raw	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/poll.rs	/^    fn new_raw(tx: Sender<RawEvent>) -> Result<PollWatcher> {$/;"	f
new_raw	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    fn new_raw(tx: Sender<RawEvent>) -> Result<ReadDirectoryChangesWatcher> {$/;"	f
new_raw	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_button.rs	/^    pub fn new_raw<F, S: Into<String>>(label: S, cb: F) -> Self$/;"	f
new_timeout	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/at.rs	/^    pub fn new_timeout(dur: Duration) -> Self {$/;"	f
new_with_content	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_text_view.rs	/^    pub fn new_with_content(content: TextContent) -> Self {$/;"	f
new_with_fn	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    pub fn new_with_fn<F>(o: O, f: F) -> Self$/;"	f
new_with_locale	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    pub fn new_with_locale($/;"	f
new_with_locale	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^    pub fn new_with_locale(s: &'a str, locale: Locale) -> StrftimeItems<'a> {$/;"	f
new_with_offset	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    pub fn new_with_offset<Off>($/;"	f
new_with_offset_and_locale	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    pub fn new_with_offset_and_locale<Off>($/;"	f
newtype_variant_seed	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^    fn newtype_variant_seed<T>(self, seed: T) -> Result<T::Value>$/;"	f
next	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^                macro_rules! next {$/;"	d
next	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^    fn next(&mut self) -> Option<Item<'a>> {$/;"	f
next	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/mod.rs	/^    fn next(&mut self) -> Option<T> {$/;"	f
next	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^    fn next(&mut self) -> Option<usize> {$/;"	f
next	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^        fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next_element_seed	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^    fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>>$/;"	f
next_key_seed	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^    fn next_key_seed<K>(&mut self, seed: K) -> Result<Option<K::Value>>$/;"	f
next_u32	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/read.rs	/^    fn next_u32(&mut self) -> u32 {$/;"	f
next_u32	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/reseeding.rs	/^    fn next_u32(&mut self) -> u32 {$/;"	f
next_u32	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/mock.rs	/^    fn next_u32(&mut self) -> u32 {$/;"	f
next_u32	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/small.rs	/^    fn next_u32(&mut self) -> u32 {$/;"	f
next_u32	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/std.rs	/^    fn next_u32(&mut self) -> u32 {$/;"	f
next_u32	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/thread.rs	/^    fn next_u32(&mut self) -> u32 {$/;"	f
next_u32	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/xoshiro128plusplus.rs	/^    fn next_u32(&mut self) -> u32 {$/;"	f
next_u32	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/xoshiro256plusplus.rs	/^    fn next_u32(&mut self) -> u32 {$/;"	f
next_u64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/read.rs	/^    fn next_u64(&mut self) -> u64 {$/;"	f
next_u64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/reseeding.rs	/^    fn next_u64(&mut self) -> u64 {$/;"	f
next_u64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/mock.rs	/^    fn next_u64(&mut self) -> u64 {$/;"	f
next_u64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/small.rs	/^    fn next_u64(&mut self) -> u64 {$/;"	f
next_u64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/std.rs	/^    fn next_u64(&mut self) -> u64 {$/;"	f
next_u64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/thread.rs	/^    fn next_u64(&mut self) -> u64 {$/;"	f
next_u64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/xoshiro128plusplus.rs	/^    fn next_u64(&mut self) -> u64 {$/;"	f
next_u64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/xoshiro256plusplus.rs	/^    fn next_u64(&mut self) -> u64 {$/;"	f
next_value_seed	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^    fn next_value_seed<V>(&mut self, seed: V) -> Result<V::Value>$/;"	f
nisoweeks	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn nisoweeks(&self) -> u32 {$/;"	f
no_constructor_error	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^    fn no_constructor_error(&self, supposed_variant: &str) -> ConfigError {$/;"	f
no_wrap	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_text_view.rs	/^    pub fn no_wrap(self) -> Self {$/;"	f
non_static_erased_owner	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn non_static_erased_owner() {$/;"	f
none	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^    fn none(self) -> bool {$/;"	f
none	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^    fn none(self) -> bool;$/;"	f
norm	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn norm<Tz: TimeZone>(dt: &Option<DateTime<Tz>>) -> Option<(&DateTime<Tz>, &Tz::Offset)> {$/;"	f
notify	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/waker.rs	/^    pub fn notify(&mut self) {$/;"	f
notify	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/waker.rs	/^    pub fn notify(&self) {$/;"	f
now	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    pub fn now() -> DateTime<Local> {$/;"	f
now	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^    pub fn now() -> DateTime<Utc> {$/;"	f
now	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^    pub fn now() -> Timespec {$/;"	f
now	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub fn now() -> PreciseTime {$/;"	f
now	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub fn now() -> SteadyTime {$/;"	f
now	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub fn now() -> Tm {$/;"	f
now	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            pub fn now() -> SteadyTime {$/;"	f
now	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        pub fn now() -> SteadyTime {$/;"	f
now_utc	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub fn now_utc() -> Tm {$/;"	f
nsec	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^                type nsec = i64;$/;"	T
nsec	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^                type nsec = libc::c_long;$/;"	T
num	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^macro_rules! num {$/;"	d
num0	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^macro_rules! num0 {$/;"	d
num_days	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn num_days(&self) -> i64 {$/;"	f
num_days	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn num_days(&self) -> i64 {$/;"	f
num_days_from_ce	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn num_days_from_ce(&self) -> i32 {$/;"	f
num_days_from_ce	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn num_days_from_ce<Date: Datelike>(date: &Date) -> i32 {$/;"	f
num_days_from_monday	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    pub fn num_days_from_monday(&self) -> u32 {$/;"	f
num_days_from_sunday	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    pub fn num_days_from_sunday(&self) -> u32 {$/;"	f
num_hours	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn num_hours(&self) -> i64 {$/;"	f
num_hours	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn num_hours(&self) -> i64 {$/;"	f
num_microseconds	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn num_microseconds(&self) -> Option<i64> {$/;"	f
num_microseconds	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn num_microseconds(&self) -> Option<i64> {$/;"	f
num_milliseconds	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn num_milliseconds(&self) -> i64 {$/;"	f
num_milliseconds	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn num_milliseconds(&self) -> i64 {$/;"	f
num_minutes	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn num_minutes(&self) -> i64 {$/;"	f
num_minutes	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn num_minutes(&self) -> i64 {$/;"	f
num_nanoseconds	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn num_nanoseconds(&self) -> Option<i64> {$/;"	f
num_nanoseconds	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn num_nanoseconds(&self) -> Option<i64> {$/;"	f
num_seconds	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn num_seconds(&self) -> i64 {$/;"	f
num_seconds	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn num_seconds(&self) -> i64 {$/;"	f
num_seconds_from_midnight	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn num_seconds_from_midnight(&self) -> u32 {$/;"	f
num_seconds_from_midnight	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn num_seconds_from_midnight(&self) -> u32 {$/;"	f
num_weeks	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn num_weeks(&self) -> i64 {$/;"	f
num_weeks	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn num_weeks(&self) -> i64 {$/;"	f
number	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn number(s: &str, min: usize, max: usize) -> ParseResult<(&str, i64)> {$/;"	f
number_from_monday	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    pub fn number_from_monday(&self) -> u32 {$/;"	f
number_from_month	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    pub fn number_from_month(&self) -> u32 {$/;"	f
number_from_sunday	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    pub fn number_from_sunday(&self) -> u32 {$/;"	f
nums	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^macro_rules! nums {$/;"	d
of	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn of(&self) -> Of {$/;"	f
offset	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn offset(&self) -> &Tz::Offset {$/;"	f
offset	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn offset(&self) -> &Tz::Offset {$/;"	f
offset_from_local_date	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn offset_from_local_date(&self, _local: &NaiveDate) -> LocalResult<FixedOffset> {$/;"	f
offset_from_local_date	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    fn offset_from_local_date(&self, local: &NaiveDate) -> LocalResult<FixedOffset> {$/;"	f
offset_from_local_date	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn offset_from_local_date(&self, local: &NaiveDate) -> LocalResult<Self::Offset>;$/;"	f
offset_from_local_date	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^    fn offset_from_local_date(&self, _local: &NaiveDate) -> LocalResult<Utc> {$/;"	f
offset_from_local_datetime	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn offset_from_local_datetime(&self, _local: &NaiveDateTime) -> LocalResult<FixedOffset> {$/;"	f
offset_from_local_datetime	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    fn offset_from_local_datetime(&self, local: &NaiveDateTime) -> LocalResult<FixedOffset> {$/;"	f
offset_from_local_datetime	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn offset_from_local_datetime(&self, local: &NaiveDateTime) -> LocalResult<Self::Offset>;$/;"	f
offset_from_local_datetime	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^    fn offset_from_local_datetime(&self, _local: &NaiveDateTime) -> LocalResult<Utc> {$/;"	f
offset_from_utc_date	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn offset_from_utc_date(&self, _utc: &NaiveDate) -> FixedOffset {$/;"	f
offset_from_utc_date	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    fn offset_from_utc_date(&self, utc: &NaiveDate) -> FixedOffset {$/;"	f
offset_from_utc_date	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn offset_from_utc_date(&self, utc: &NaiveDate) -> Self::Offset;$/;"	f
offset_from_utc_date	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^    fn offset_from_utc_date(&self, _utc: &NaiveDate) -> Utc {$/;"	f
offset_from_utc_datetime	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn offset_from_utc_datetime(&self, _utc: &NaiveDateTime) -> FixedOffset {$/;"	f
offset_from_utc_datetime	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    fn offset_from_utc_datetime(&self, utc: &NaiveDateTime) -> FixedOffset {$/;"	f
offset_from_utc_datetime	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn offset_from_utc_datetime(&self, utc: &NaiveDateTime) -> Self::Offset;$/;"	f
offset_from_utc_datetime	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^    fn offset_from_utc_datetime(&self, _utc: &NaiveDateTime) -> Utc {$/;"	f
ok_cpy_callback	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^fn ok_cpy_callback(siv: &mut Cursive, selected_paths_from: Vec<String>, selected_path_to: PathBuf, is_recursive: bool, is_overwrite: bool) {$/;"	f
old_bitflags_form	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    fn old_bitflags_form() {$/;"	f
on_event	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_button.rs	/^    fn on_event(&mut self, event: Event) -> EventResult {$/;"	f
on_event	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    fn on_event(&mut self, event: Event) -> EventResult {$/;"	f
on_event	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_text_view.rs	/^    fn on_event(&mut self, event: Event) -> EventResult {$/;"	f
on_event	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    fn on_event(&mut self, event: Event) -> EventResult {$/;"	f
on_event_button	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    fn on_event_button(&mut self, event: Event, button_id: usize) -> EventResult {$/;"	f
on_event_content	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    fn on_event_content(&mut self, event: Event) -> EventResult {$/;"	f
on_focus_change	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    fn on_focus_change(&self) -> EventResult {$/;"	f
on_inner_event	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    fn on_inner_event(&mut self, event: Event) -> EventResult {$/;"	f
on_mouse_event	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/n.rs	/^fn on_mouse_event<F>(bare_event: i32, mut f: F)$/;"	f
on_mouse_event	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/pan.rs	/^fn on_mouse_event<F>(bare_event: mmask_t, mut f: F)$/;"	f
on_select	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn on_select<F>(self, cb: F) -> Self$/;"	f
on_sort	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn on_sort<F>(self, cb: F) -> Self$/;"	f
on_submit	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn on_submit<F>(self, cb: F) -> Self$/;"	f
on_submit_event	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    fn on_submit_event(&mut self) -> EventResult {$/;"	f
one	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^    fn one() -> Self {$/;"	f
one	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^    fn one() -> Self;$/;"	f
op	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^pub mod op {$/;"	m
op_test	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^mod op_test {$/;"	m
order	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn order(&self) -> Option<(H, Ordering)> {$/;"	f
ordering	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn ordering(mut self, order: Ordering) -> Self {$/;"	f
ordinal	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn ordinal(&self) -> u32 {$/;"	f
ordinal	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn ordinal(&self) -> u32 {$/;"	f
ordinal	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn ordinal(&self) -> u32;$/;"	f
ordinal	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn ordinal(&self) -> u32 {$/;"	f
ordinal	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn ordinal(&self) -> u32 {$/;"	f
ordinal	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn ordinal(&self) -> u32 {$/;"	f
ordinal0	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn ordinal0(&self) -> u32 {$/;"	f
ordinal0	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn ordinal0(&self) -> u32 {$/;"	f
ordinal0	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn ordinal0(&self) -> u32;$/;"	f
ordinal0	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn ordinal0(&self) -> u32 {$/;"	f
ordinal0	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn ordinal0(&self) -> u32 {$/;"	f
overflowing_add_signed	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn overflowing_add_signed(&self, mut rhs: OldDuration) -> (NaiveTime, i64) {$/;"	f
overflowing_sub_signed	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn overflowing_sub_signed(&self, rhs: OldDuration) -> (NaiveTime, i64) {$/;"	f
owning_handle	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn owning_handle() {$/;"	f
owning_handle	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    mod owning_handle {$/;"	m
owning_handle_mut_safe	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn owning_handle_mut_safe() {$/;"	f
owning_handle_safe	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn owning_handle_safe() {$/;"	f
owning_handle_safe_2	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn owning_handle_safe_2() {$/;"	f
owning_ref	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    mod owning_ref {$/;"	m
owning_ref_mut	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    mod owning_ref_mut {$/;"	m
padding	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn padding(self, padding: Margins) -> Self {$/;"	f
padding_bottom	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn padding_bottom(self, padding: usize) -> Self {$/;"	f
padding_left	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn padding_left(self, padding: usize) -> Self {$/;"	f
padding_lrtb	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn padding_lrtb(self, left: usize, right: usize, top: usize, bottom: usize) -> Self {$/;"	f
padding_right	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn padding_right(self, padding: usize) -> Self {$/;"	f
padding_top	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn padding_top(self, padding: usize) -> Self {$/;"	f
pancurses	/home/artie/Documents/Repos/smallB_cursive/cursive/src/cursive_runnable.rs	/^    pub fn pancurses() -> Self {$/;"	f
pancurses	/home/artie/Documents/Repos/smallB_cursive/cursive/src/lib.rs	/^pub fn pancurses() -> CursiveRunnable {$/;"	f
par_sum	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    fn par_sum(rc: ArcRef<[i32]>) -> i32 {$/;"	f
parent	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^    fn parent(&self) -> &ObservedScreen {$/;"	f
parent	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^    fn parent(&self) -> &ObservedScreen;$/;"	f
parse	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^pub fn parse<'a, I, B>(parsed: &mut Parsed, s: &str, items: I) -> ParseResult<()>$/;"	f
parse	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^        macro_rules! parse {$/;"	d
parse	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/file/format/hjson.rs	/^pub fn parse($/;"	f
parse	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/file/format/ini.rs	/^pub fn parse($/;"	f
parse	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/file/format/json.rs	/^pub fn parse($/;"	f
parse	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/file/format/mod.rs	/^    pub fn parse($/;"	f
parse	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/file/format/toml.rs	/^pub fn parse($/;"	f
parse	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/file/format/yaml.rs	/^pub fn parse($/;"	f
parse_all	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^    fn parse_all(s: &str, items: &[Item]) -> ParseResult<Parsed> {$/;"	f
parse_and_collect	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^    fn parse_and_collect<'a>(s: &'a str) -> Vec<Item<'a>> {$/;"	f
parse_char	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/parse.rs	/^fn parse_char(s: &mut &str, c: char) -> Result<(), ParseError> {$/;"	f
parse_from_rfc2822	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn parse_from_rfc2822(s: &str) -> ParseResult<DateTime<FixedOffset>> {$/;"	f
parse_from_rfc3339	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn parse_from_rfc3339(s: &str) -> ParseResult<DateTime<FixedOffset>> {$/;"	f
parse_from_str	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn parse_from_str(s: &str, fmt: &str) -> ParseResult<DateTime<FixedOffset>> {$/;"	f
parse_from_str	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn parse_from_str(s: &str, fmt: &str) -> ParseResult<NaiveDate> {$/;"	f
parse_from_str	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn parse_from_str(s: &str, fmt: &str) -> ParseResult<NaiveDateTime> {$/;"	f
parse_from_str	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn parse_from_str(s: &str, fmt: &str) -> ParseResult<NaiveTime> {$/;"	f
parse_internal	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^fn parse_internal<'a, 'b, I, B>($/;"	f
parse_mouse_event	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/n.rs	/^    fn parse_mouse_event(&mut self) -> Event {$/;"	f
parse_mouse_event	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/pan.rs	/^    fn parse_mouse_event(&mut self) -> Event {$/;"	f
parse_ncurses_char	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/n.rs	/^    fn parse_ncurses_char(&mut self, ch: i32) -> Event {$/;"	f
parse_next	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/blt.rs	/^    fn parse_next(&mut self) -> Option<Event> {$/;"	f
parse_next	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/n.rs	/^    fn parse_next(&mut self) -> Option<Event> {$/;"	f
parse_next	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/pan.rs	/^    fn parse_next(&mut self) -> Option<Event> {$/;"	f
parse_rfc2822	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^fn parse_rfc2822<'a>(parsed: &mut Parsed, mut s: &'a str) -> ParseResult<(&'a str, ())> {$/;"	f
parse_rfc3339	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^fn parse_rfc3339<'a>(parsed: &mut Parsed, mut s: &'a str) -> ParseResult<(&'a str, ())> {$/;"	f
parse_rfc850	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^fn parse_rfc850() {$/;"	f
parse_type	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/display.rs	/^fn parse_type(fmt: &mut fmt::Formatter, ch: char, tm: &Tm) -> fmt::Result {$/;"	f
parse_type	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/parse.rs	/^fn parse_type(s: &mut &str, ch: char, tm: &mut Tm) -> Result<(), ParseError> {$/;"	f
partial_cmp	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn partial_cmp(&self, other: &Date<Tz>) -> Option<Ordering> {$/;"	f
partial_cmp	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn partial_cmp(&self, other: &DateTime<Tz2>) -> Option<Ordering> {$/;"	f
partial_cmp	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn partial_cmp() {$/;"	f
partial_cmp	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    fn partial_cmp(&self, other: &Self) -> Option<Ordering> {$/;"	f
partial_cmp	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^        fn partial_cmp(&self, other: &Self) -> Option<core::cmp::Ordering> {$/;"	f
partial_cmp	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn partial_cmp(&self, other: &Tm) -> Option<Ordering> {$/;"	f
partial_cmp	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            fn partial_cmp(&self, other: &SteadyTime) -> Option<Ordering> {$/;"	f
partial_shuffle	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^    fn partial_shuffle<R>($/;"	f
path_relative_from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/file/source/file.rs	/^fn path_relative_from(path: &Path, base: &Path) -> Option<PathBuf> {$/;"	f
piece	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^    pub fn piece(&self, min: Vec2, max: Vec2) -> ObservedPiece {$/;"	f
poll_event	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/blt.rs	/^    fn poll_event(&mut self) -> Option<Event> {$/;"	f
poll_event	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/crossterm.rs	/^    fn poll_event(&mut self) -> Option<Event> {$/;"	f
poll_event	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/n.rs	/^    fn poll_event(&mut self) -> Option<Event> {$/;"	f
poll_event	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/pan.rs	/^    fn poll_event(&mut self) -> Option<Event> {$/;"	f
poll_event	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/mod.rs	/^    fn poll_event(&mut self) -> Option<Event> {$/;"	f
poll_event	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/termion.rs	/^    fn poll_event(&mut self) -> Option<Event> {$/;"	f
pop_key	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn pop_key(&mut self) -> Option<(String, Option<usize>)> {$/;"	f
postfix	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/path/parser.rs	/^fn postfix(expr: Expression) -> Box<Fn(CompleteStr) -> IResult<CompleteStr, Expression>> {$/;"	f
precise_time_ns	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub fn precise_time_ns() -> u64 {$/;"	f
precise_time_s	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub fn precise_time_s() -> f64 {$/;"	f
pred	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn pred(&self) -> Date<Tz> {$/;"	f
pred	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    pub fn pred(&self) -> Month {$/;"	f
pred	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    pub fn pred(&self) -> Weekday {$/;"	f
pred	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn pred(&self) -> NaiveDate {$/;"	f
pred	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn pred(&self) -> Of {$/;"	f
pred_opt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn pred_opt(&self) -> Option<Date<Tz>> {$/;"	f
pred_opt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn pred_opt(&self) -> Option<NaiveDate> {$/;"	f
prefix	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/env.rs	/^    pub fn prefix(mut self, s: &str) -> Self {$/;"	f
prelude	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^pub mod prelude {$/;"	m
prepend	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/error.rs	/^    fn prepend(self, segment: String, add_dot: bool) -> Self {$/;"	f
print_at	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/blt.rs	/^    fn print_at(&self, pos: Vec2, text: &str) {$/;"	f
print_at	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/crossterm.rs	/^    fn print_at(&self, pos: Vec2, text: &str) {$/;"	f
print_at	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/n.rs	/^    fn print_at(&self, pos: Vec2, text: &str) {$/;"	f
print_at	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/pan.rs	/^    fn print_at(&self, pos: Vec2, text: &str) {$/;"	f
print_at	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/mod.rs	/^    fn print_at(&self, pos: Vec2, text: &str) {$/;"	f
print_at	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/termion.rs	/^    fn print_at(&self, pos: Vec2, text: &str) {$/;"	f
print_at_rep	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/crossterm.rs	/^    fn print_at_rep(&self, pos: Vec2, repetitions: usize, text: &str) {$/;"	f
print_at_rep	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/n.rs	/^    fn print_at_rep(&self, pos: Vec2, repetitions: usize, text: &str) {$/;"	f
print_at_rep	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/pan.rs	/^    fn print_at_rep(&self, pos: Vec2, repetitions: usize, text: &str) {$/;"	f
print_at_rep	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/termion.rs	/^    fn print_at_rep(&self, pos: Vec2, repetitions: usize, text: &str) {$/;"	f
print_stdout	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^    pub fn print_stdout(&self) {$/;"	f
progress_bar_current	/home/artie/Documents/Projects/rust/FileManager/src/internals/literals/copy_progress_dlg.rs	/^    pub static progress_bar_current: &str = "ProgressBar_current";$/;"	c
progress_bar_total	/home/artie/Documents/Projects/rust/FileManager/src/internals/literals/copy_progress_dlg.rs	/^    pub static progress_bar_total: &str = "ProgressBar_total";$/;"	c
pull_dn	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^fn pull_dn(siv: &mut cursive::Cursive) {}$/;"	f
push_key	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn push_key(&mut self, key: &str) {$/;"	f
quit	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^fn quit(siv: &mut cursive::Cursive) {$/;"	f
raii_locks	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn raii_locks() {$/;"	f
random	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/lib.rs	/^pub fn random<T>() -> T$/;"	f
range	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^        fn range<T: SampleUniform>(low: T, high: T) {$/;"	f
raw_watcher	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^pub fn raw_watcher(tx: Sender<RawEvent>) -> Result<RecommendedWatcher> {$/;"	f
read	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^pub unsafe fn read<T>(r: &Receiver<T>, token: &mut Token) -> Result<T, ()> {$/;"	f
read	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/array.rs	/^    pub unsafe fn read(&self, token: &mut Token) -> Result<T, ()> {$/;"	f
read	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/at.rs	/^    pub unsafe fn read(&self, token: &mut Token) -> Result<Instant, ()> {$/;"	f
read	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^    pub unsafe fn read(&self, token: &mut Token) -> Result<T, ()> {$/;"	f
read	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/never.rs	/^    pub unsafe fn read(&self, _token: &mut Token) -> Result<T, ()> {$/;"	f
read	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/tick.rs	/^    pub unsafe fn read(&self, token: &mut Token) -> Result<Instant, ()> {$/;"	f
read	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/zero.rs	/^    pub unsafe fn read(&self, token: &mut Token) -> Result<T, ()> {$/;"	f
read_char	/home/artie/Documents/Repos/smallB_cursive/cursive/src/utf8.rs	/^pub fn read_char<F>(first: u8, next: F) -> Result<char, String>$/;"	f
read_config	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^fn read_config() -> FileMangerConfig {$/;"	f
read_directory	/home/artie/Documents/Projects/rust/FileManager/src/internals/utils.rs	/^pub fn read_directory(a_dir: &path::PathBuf) -> io::Result<Vec<path::PathBuf>> {$/;"	f
read_to_string	/home/artie/Documents/Repos/fs_extra/src/file.rs	/^pub fn read_to_string<P>(path: P) -> Result<String>$/;"	f
ready	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^    pub fn ready(&mut self) -> usize {$/;"	f
ready_deadline	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^    pub fn ready_deadline(&mut self, deadline: Instant) -> Result<usize, ReadyTimeoutError> {$/;"	f
ready_timeout	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^    pub fn ready_timeout(&mut self, timeout: Duration) -> Result<usize, ReadyTimeoutError> {$/;"	f
receiver	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/array.rs	/^    pub fn receiver(&self) -> Receiver<'_, T> {$/;"	f
receiver	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^    pub fn receiver(&self) -> Receiver<'_, T> {$/;"	f
receiver	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/zero.rs	/^    pub fn receiver(&self) -> Receiver<'_, T> {$/;"	f
recons	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^                macro_rules! recons {$/;"	d
recons_from_slice	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^                macro_rules! recons_from_slice {$/;"	d
recv	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^    pub fn recv(&self) -> Result<T, RecvError> {$/;"	f
recv	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/array.rs	/^    pub fn recv(&self, deadline: Option<Instant>) -> Result<T, RecvTimeoutError> {$/;"	f
recv	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/at.rs	/^    pub fn recv(&self, deadline: Option<Instant>) -> Result<Instant, RecvTimeoutError> {$/;"	f
recv	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^    pub fn recv(&self, deadline: Option<Instant>) -> Result<T, RecvTimeoutError> {$/;"	f
recv	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/never.rs	/^    pub fn recv(&self, deadline: Option<Instant>) -> Result<T, RecvTimeoutError> {$/;"	f
recv	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/tick.rs	/^    pub fn recv(&self, deadline: Option<Instant>) -> Result<Instant, RecvTimeoutError> {$/;"	f
recv	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/zero.rs	/^    pub fn recv(&self, deadline: Option<Instant>) -> Result<T, RecvTimeoutError> {$/;"	f
recv	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^    pub fn recv<T>(&mut self, r: &'a Receiver<T>) -> usize {$/;"	f
recv	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^    pub fn recv<T>(mut self, r: &Receiver<T>) -> Result<T, RecvError> {$/;"	f
recv_deadline	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^    pub fn recv_deadline(&self, deadline: Instant) -> Result<T, RecvTimeoutError> {$/;"	f
recv_timeout	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^    pub fn recv_timeout(&self, timeout: Duration) -> Result<T, RecvTimeoutError> {$/;"	f
ref	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/file/format/mod.rs	/^    pub static ref ALL_EXTENSIONS: HashMap<FileFormat, Vec<&'static str>> = {$/;"	c
ref	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/thread_local/thread_id.rs	/^    static ref THREAD_ID_MANAGER: Mutex<ThreadIdManager> = Mutex::new(ThreadIdManager::new());$/;"	c
ref	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/static_values.rs	/^    pub static ref DEFAULT_OBSERVED_STYLE: ObservedStyle = ObservedStyle {$/;"	c
ref	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/static_values.rs	/^    pub static ref DEFAULT_SIZE: Vec2 = XY::<usize> { x: 120, y: 80 };$/;"	c
ref_mut	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn ref_mut() {$/;"	f
reference	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/xoshiro128plusplus.rs	/^    fn reference() {$/;"	f
reference	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/xoshiro256plusplus.rs	/^    fn reference() {$/;"	f
refresh	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/config.rs	/^    pub fn refresh(&mut self) -> Result<&mut Config> {$/;"	f
refresh	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/blt.rs	/^    fn refresh(&mut self) {$/;"	f
refresh	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/crossterm.rs	/^    fn refresh(&mut self) {$/;"	f
refresh	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/n.rs	/^    fn refresh(&mut self) {$/;"	f
refresh	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/pan.rs	/^    fn refresh(&mut self) {$/;"	f
refresh	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/mod.rs	/^    fn refresh(&mut self) {$/;"	f
refresh	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/termion.rs	/^    fn refresh(&mut self) {$/;"	f
register	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^    fn register(&self, oper: Operation, cx: &Context) -> bool {$/;"	f
register	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/array.rs	/^    fn register(&self, oper: Operation, cx: &Context) -> bool {$/;"	f
register	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/at.rs	/^    fn register(&self, _oper: Operation, _cx: &Context) -> bool {$/;"	f
register	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^    fn register(&self, _oper: Operation, _cx: &Context) -> bool {$/;"	f
register	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^    fn register(&self, oper: Operation, cx: &Context) -> bool {$/;"	f
register	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/never.rs	/^    fn register(&self, _oper: Operation, _cx: &Context) -> bool {$/;"	f
register	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/tick.rs	/^    fn register(&self, _oper: Operation, _cx: &Context) -> bool {$/;"	f
register	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/zero.rs	/^    fn register(&self, oper: Operation, cx: &Context) -> bool {$/;"	f
register	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^    fn register(&self, oper: Operation, cx: &Context) -> bool {$/;"	f
register	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^    fn register(&self, oper: Operation, cx: &Context) -> bool;$/;"	f
register	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/waker.rs	/^    pub fn register(&mut self, oper: Operation, cx: &Context) {$/;"	f
register	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/waker.rs	/^    pub fn register(&self, oper: Operation, cx: &Context) {$/;"	f
register_fork_handler	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/reseeding.rs	/^    pub fn register_fork_handler() {$/;"	f
register_fork_handler	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/reseeding.rs	/^    pub fn register_fork_handler() {}$/;"	f
register_with_packet	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/waker.rs	/^    pub fn register_with_packet(&mut self, oper: Operation, packet: usize, cx: &Context) {$/;"	f
release	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/counter.rs	/^    pub unsafe fn release<F: FnOnce(&C) -> bool>(&self, disconnect: F) {$/;"	f
remove	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^    pub fn remove(&mut self, index: usize) {$/;"	f
remove	/home/artie/Documents/Repos/fs_extra/src/dir.rs	/^pub fn remove<P: AsRef<Path>>(path: P) -> Result<()> {$/;"	f
remove	/home/artie/Documents/Repos/fs_extra/src/file.rs	/^pub fn remove<P>(path: P) -> Result<()>$/;"	f
remove_all_watches	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    fn remove_all_watches(&mut self) -> Result<()> {$/;"	f
remove_button	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn remove_button(&mut self, i: usize) {$/;"	f
remove_column	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn remove_column(&mut self, i: usize) {$/;"	f
remove_item	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn remove_item(&mut self, item_index: usize) -> Option<T> {$/;"	f
remove_items	/home/artie/Documents/Repos/fs_extra/src/lib.rs	/^pub fn remove_items<P>(from_items: &[P]) -> Result<()>$/;"	f
remove_path	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^    fn remove_path<P: AsRef<Path>>(&mut self, path: P) -> Result<()> {$/;"	f
remove_repeated_events	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/mod.rs	/^fn remove_repeated_events(mut op: op::Op, prev_op: Option<op::Op>) -> op::Op {$/;"	f
remove_watch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    fn remove_watch(&mut self, path: PathBuf, remove_recursive: bool) -> Result<()> {$/;"	f
remove_watch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    fn remove_watch(&mut self, path: PathBuf) {$/;"	f
remove_watch_by_event	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^fn remove_watch_by_event($/;"	f
ren_mov	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^fn ren_mov(siv: &mut cursive::Cursive) {}$/;"	f
replace	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^    fn replace(self, index: usize, new_value: Self) -> Self {$/;"	f
req_size	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_button.rs	/^    fn req_size(&self) -> Vec2 {$/;"	f
required	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/file/mod.rs	/^    pub fn required(mut self, required: bool) -> Self {$/;"	f
required_size	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_button.rs	/^    fn required_size(&mut self, _: Vec2) -> Vec2 {$/;"	f
required_size	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    fn required_size(&mut self, req: Vec2) -> Vec2 {$/;"	f
required_size	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_text_view.rs	/^    fn required_size(&mut self, size: Vec2) -> Vec2 {$/;"	f
required_size	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed_screen_view.rs	/^    fn required_size(&mut self, _: Vec2) -> Vec2 {$/;"	f
reseed	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/reseeding.rs	/^    fn reseed(&mut self) -> Result<(), Error> {$/;"	f
reseed	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/reseeding.rs	/^    pub fn reseed(&mut self) -> Result<(), Error> {$/;"	f
reseed_and_generate	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/reseeding.rs	/^    fn reseed_and_generate($/;"	f
reset	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/context.rs	/^    fn reset(&self) {$/;"	f
resolve	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/file/source/file.rs	/^    fn resolve($/;"	f
resolve	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/file/source/mod.rs	/^    fn resolve($/;"	f
resolve	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/file/source/string.rs	/^    fn resolve($/;"	f
resolve_year	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^        fn resolve_year($/;"	f
restart_timer	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/mod.rs	/^fn restart_timer(timer_id: &mut Option<u64>, path: PathBuf, timer: &mut WatchTimer) {$/;"	f
return_owned_and_referenced	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^fn return_owned_and_referenced() -> OwningRef<Vec<u8>, [u8]> {$/;"	f
return_owned_and_referenced	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^fn return_owned_and_referenced<'a>() -> (Vec<u8>, &'a [u8]) {$/;"	f
rfc2822_to_datetime	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^    fn rfc2822_to_datetime(date: &str) -> ParseResult<DateTime<FixedOffset>> {$/;"	f
rfc3339	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub fn rfc3339<'a>(&'a self) -> TmFmt {$/;"	f
rfc3339_to_datetime	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^    fn rfc3339_to_datetime(date: &str) -> ParseResult<DateTime<FixedOffset>> {$/;"	f
rfc822	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub fn rfc822(&self) -> TmFmt {$/;"	f
rfc822z	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub fn rfc822z(&self) -> TmFmt {$/;"	f
rng	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/lib.rs	/^    pub fn rng(seed: u64) -> impl RngCore {$/;"	f
round_subsecs	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn round_subsecs(self, digits: u16) -> Self;$/;"	f
round_subsecs	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn round_subsecs(self, digits: u16) -> T {$/;"	f
row	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn row(&self) -> Option<usize> {$/;"	f
run	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/timer.rs	/^    fn run(&mut self) {$/;"	f
run	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^    fn run(&mut self) -> Result<()> {$/;"	f
run	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    pub fn run(self) {$/;"	f
run	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/poll.rs	/^    fn run(&mut self, delay: Duration, mut event_tx: EventTx) {$/;"	f
run	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    fn run(mut self) {$/;"	f
run	/home/artie/Documents/Repos/smallB_cursive/cursive/src/cursive_ext.rs	/^    fn run(&mut self) {$/;"	f
run	/home/artie/Documents/Repos/smallB_cursive/cursive/src/cursive_ext.rs	/^    fn run(&mut self);$/;"	f
run	/home/artie/Documents/Repos/smallB_cursive/cursive/src/cursive_runnable.rs	/^    pub fn run(&mut self) {$/;"	f
run_blt	/home/artie/Documents/Repos/smallB_cursive/cursive/src/cursive_ext.rs	/^    fn run_blt(&mut self) {$/;"	f
run_blt	/home/artie/Documents/Repos/smallB_cursive/cursive/src/cursive_ext.rs	/^    fn run_blt(&mut self);$/;"	f
run_crossterm	/home/artie/Documents/Repos/smallB_cursive/cursive/src/cursive_ext.rs	/^    fn run_crossterm(&mut self) -> Result<(), crossterm::ErrorKind> {$/;"	f
run_crossterm	/home/artie/Documents/Repos/smallB_cursive/cursive/src/cursive_ext.rs	/^    fn run_crossterm(&mut self) -> Result<(), crossterm::ErrorKind>;$/;"	f
run_ncurses	/home/artie/Documents/Repos/smallB_cursive/cursive/src/cursive_ext.rs	/^    fn run_ncurses(&mut self) -> std::io::Result<()> {$/;"	f
run_ncurses	/home/artie/Documents/Repos/smallB_cursive/cursive/src/cursive_ext.rs	/^    fn run_ncurses(&mut self) -> std::io::Result<()>;$/;"	f
run_pancurses	/home/artie/Documents/Repos/smallB_cursive/cursive/src/cursive_ext.rs	/^    fn run_pancurses(&mut self) -> std::io::Result<()> {$/;"	f
run_pancurses	/home/artie/Documents/Repos/smallB_cursive/cursive/src/cursive_ext.rs	/^    fn run_pancurses(&mut self) -> std::io::Result<()>;$/;"	f
run_ready	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^fn run_ready($/;"	f
run_select	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^fn run_select($/;"	f
run_termion	/home/artie/Documents/Repos/smallB_cursive/cursive/src/cursive_ext.rs	/^    fn run_termion(&mut self) -> std::io::Result<()> {$/;"	f
run_termion	/home/artie/Documents/Repos/smallB_cursive/cursive/src/cursive_ext.rs	/^    fn run_termion(&mut self) -> std::io::Result<()>;$/;"	f
runner	/home/artie/Documents/Repos/smallB_cursive/cursive/src/cursive_runnable.rs	/^    pub fn runner(&mut self) -> CursiveRunner<&mut Cursive> {$/;"	f
rust_tm_to_tm	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/unix.rs	/^fn rust_tm_to_tm(rust_tm: &Tm, tm: &mut libc::tm) {$/;"	f
rust_tm_to_tm	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn rust_tm_to_tm(rust_tm: &Tm, tm: &mut libc::tm) {$/;"	f
rustc_serialize	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^pub mod rustc_serialize {$/;"	m
rustc_serialize	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^mod rustc_serialize {$/;"	m
rustc_serialize	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^pub mod rustc_serialize {$/;"	m
rustc_serialize	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^mod rustc_serialize {$/;"	m
same_channel	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^    pub fn same_channel(&self, other: &Receiver<T>) -> bool {$/;"	f
same_channel	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^    pub fn same_channel(&self, other: &Sender<T>) -> bool {$/;"	f
sample	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/bernoulli.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> bool {$/;"	f
sample	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/float.rs	/^            fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> $ty {$/;"	f
sample	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/integer.rs	/^            fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> $intrinsic {$/;"	f
sample	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/integer.rs	/^            fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> $ty {$/;"	f
sample	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/integer.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> u128 {$/;"	f
sample	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/integer.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> u16 {$/;"	f
sample	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/integer.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> u32 {$/;"	f
sample	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/integer.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> u64 {$/;"	f
sample	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/integer.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> u8 {$/;"	f
sample	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/integer.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> usize {$/;"	f
sample	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/mod.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> T {$/;"	f
sample	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/mod.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> T;$/;"	f
sample	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/other.rs	/^            fn sample<R: Rng + ?Sized>(&self, _rng: &mut R) -> ( $( $tyvar ),* , ) {$/;"	f
sample	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/other.rs	/^            fn sample<R: Rng + ?Sized>(&self, _rng: &mut R) -> [T; $n] { [] }$/;"	f
sample	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/other.rs	/^            fn sample<R: Rng + ?Sized>(&self, _rng: &mut R) -> [T; $n] {$/;"	f
sample	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/other.rs	/^    fn sample<R: Rng + ?Sized>(&self, _: &mut R) -> () {$/;"	f
sample	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/other.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> Option<T> {$/;"	f
sample	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/other.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> Wrapping<T> {$/;"	f
sample	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/other.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> bool {$/;"	f
sample	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/other.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> char {$/;"	f
sample	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/other.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> u8 {$/;"	f
sample	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^            fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> Self::X {$/;"	f
sample	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> Duration {$/;"	f
sample	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> Self::X {$/;"	f
sample	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> Self::X;$/;"	f
sample	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> X {$/;"	f
sample	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/weighted_index.rs	/^    fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> usize {$/;"	f
sample	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rng.rs	/^    fn sample<T, D: Distribution<T>>(&mut self, distr: D) -> T {$/;"	f
sample	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^pub fn sample<R>(rng: &mut R, length: usize, amount: usize) -> IndexVec$/;"	f
sample_efraimidis_spirakis	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^fn sample_efraimidis_spirakis<R, F, X, N>($/;"	f
sample_floyd	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^fn sample_floyd<R>(rng: &mut R, length: u32, amount: u32) -> IndexVec$/;"	f
sample_inplace	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^fn sample_inplace<R>(rng: &mut R, length: u32, amount: u32) -> IndexVec$/;"	f
sample_iter	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/mod.rs	/^    fn sample_iter<R>(self, rng: R) -> DistIter<Self, R, T>$/;"	f
sample_iter	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rng.rs	/^    fn sample_iter<T, D>(self, distr: D) -> distributions::DistIter<D, Self, T>$/;"	f
sample_rejection	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^fn sample_rejection<X: UInt, R>(rng: &mut R, length: X, amount: X) -> IndexVec$/;"	f
sample_single	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^            fn sample_single<R: Rng + ?Sized, B1, B2>(low_b: B1, high_b: B2, rng: &mut R) -> Self::X$/;"	f
sample_single	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    fn sample_single<R: Rng + ?Sized, B1, B2>(low: B1, high: B2, rng: &mut R) -> Self::X$/;"	f
sample_single	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    fn sample_single<R: RngCore + ?Sized>(self, rng: &mut R) -> T {$/;"	f
sample_single	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    fn sample_single<R: RngCore + ?Sized>(self, rng: &mut R) -> T;$/;"	f
sample_single_inclusive	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^            fn sample_single_inclusive<R: Rng + ?Sized, B1, B2>(low_b: B1, high_b: B2, rng: &mut R) -> Self::X$/;"	f
sample_single_inclusive	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    fn sample_single_inclusive<R: Rng + ?Sized, B1, B2>(low: B1, high: B2, rng: &mut R)$/;"	f
sample_weighted	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^pub fn sample_weighted<R, F, X>($/;"	f
scalar_float_impl	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^macro_rules! scalar_float_impl {$/;"	d
schedule	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/timer.rs	/^    pub fn schedule(&mut self, path: PathBuf) -> u64 {$/;"	f
screen_size	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/blt.rs	/^    fn screen_size(&self) -> Vec2 {$/;"	f
screen_size	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/crossterm.rs	/^    fn screen_size(&self) -> Vec2 {$/;"	f
screen_size	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/n.rs	/^    fn screen_size(&self) -> Vec2 {$/;"	f
screen_size	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/pan.rs	/^    fn screen_size(&self) -> Vec2 {$/;"	f
screen_size	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/mod.rs	/^    fn screen_size(&self) -> Vec2 {$/;"	f
screen_size	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/termion.rs	/^    fn screen_size(&self) -> Vec2 {$/;"	f
second	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn second(&self) -> u32 {$/;"	f
second	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn second(&self) -> u32;$/;"	f
second	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn second(&self) -> u32 {$/;"	f
second	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn second(&self) -> u32 {$/;"	f
seconds	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn seconds(seconds: i64) -> Duration {$/;"	f
seconds	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn seconds(seconds: i64) -> Duration {$/;"	f
seed_from_u64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/xoshiro128plusplus.rs	/^    fn seed_from_u64(mut state: u64) -> Self {$/;"	f
seed_from_u64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/xoshiro256plusplus.rs	/^    fn seed_from_u64(mut state: u64) -> Self {$/;"	f
select	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^    pub fn select(&mut self) -> SelectedOperation<'a> {$/;"	f
select	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^pub fn select<'a>($/;"	f
select	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select_macro.rs	/^macro_rules! select {$/;"	d
select_deadline	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^    pub fn select_deadline($/;"	f
select_deadline	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^pub fn select_deadline<'a>($/;"	f
select_timeout	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^    pub fn select_timeout($/;"	f
select_timeout	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^pub fn select_timeout<'a>($/;"	f
selected	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/context.rs	/^    pub fn selected(&self) -> Selected {$/;"	f
selected_item	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn selected_item(self, item_index: usize) -> Self {$/;"	f
selected_row	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn selected_row(self, row_index: usize) -> Self {$/;"	f
send	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^    pub fn send(&self, msg: T) -> Result<(), SendError<T>> {$/;"	f
send	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/array.rs	/^    pub fn send(&self, msg: T, deadline: Option<Instant>) -> Result<(), SendTimeoutError<T>> {$/;"	f
send	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^    pub fn send(&self, msg: T, _deadline: Option<Instant>) -> Result<(), SendTimeoutError<T>> {$/;"	f
send	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/zero.rs	/^    pub fn send(&self, msg: T, deadline: Option<Instant>) -> Result<(), SendTimeoutError<T>> {$/;"	f
send	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^    pub fn send<T>(&mut self, s: &'a Sender<T>) -> usize {$/;"	f
send	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^    pub fn send<T>(mut self, s: &Sender<T>, msg: T) -> Result<(), SendError<T>> {$/;"	f
send	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/mod.rs	/^    pub fn send(&mut self, event: RawEvent) {$/;"	f
send_action_require_ack	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    fn send_action_require_ack(&mut self, action: Action, pb: &PathBuf) -> Result<()> {$/;"	f
send_deadline	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^    pub fn send_deadline(&self, msg: T, deadline: Instant) -> Result<(), SendTimeoutError<T>> {$/;"	f
send_pending_rename_event	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^fn send_pending_rename_event(event: Option<RawEvent>, event_tx: &mut EventTx) {$/;"	f
send_pending_rename_event	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^fn send_pending_rename_event(rename_event: &mut Option<RawEvent>, event_tx: &mut EventTx) {$/;"	f
send_pending_rename_event	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^fn send_pending_rename_event(event: Option<RawEvent>, event_tx: &mut EventTx) {$/;"	f
send_timeout	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^    pub fn send_timeout(&self, msg: T, timeout: Duration) -> Result<(), SendTimeoutError<T>> {$/;"	f
sender	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/array.rs	/^    pub fn sender(&self) -> Sender<'_, T> {$/;"	f
sender	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^    pub fn sender(&self) -> Sender<'_, T> {$/;"	f
sender	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/zero.rs	/^    pub fn sender(&self) -> Sender<'_, T> {$/;"	f
separator	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/env.rs	/^    pub fn separator(mut self, s: &str) -> Self {$/;"	f
serde	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^pub mod serde {$/;"	m
serde	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    pub mod serde {$/;"	m
serde	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^pub mod serde {$/;"	m
serde	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^mod serde {$/;"	m
serde	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^pub mod serde {$/;"	m
serde	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^mod serde {$/;"	m
serde_from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn serde_from<T, E, V>(me: LocalResult<T>, ts: &V) -> Result<T, E>$/;"	f
serialize	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        pub fn serialize<S>(dt: &DateTime<Utc>, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        pub fn serialize<S>(opt: &Option<DateTime<Utc>>, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        pub fn serialize<S>(dt: &NaiveDateTime, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize_bool	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn serialize_bool(self, v: bool) -> Result<Self::Ok> {$/;"	f
serialize_bytes	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn serialize_bytes(self, v: &[u8]) -> Result<Self::Ok> {$/;"	f
serialize_char	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn serialize_char(self, v: char) -> Result<Self::Ok> {$/;"	f
serialize_element	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn serialize_element<T>(&mut self, value: &T) -> Result<()>$/;"	f
serialize_f32	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn serialize_f32(self, v: f32) -> Result<Self::Ok> {$/;"	f
serialize_f64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn serialize_f64(self, v: f64) -> Result<Self::Ok> {$/;"	f
serialize_field	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn serialize_field<T>(&mut self, key: &'static str, value: &T) -> Result<()>$/;"	f
serialize_field	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn serialize_field<T>(&mut self, value: &T) -> Result<()>$/;"	f
serialize_i16	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn serialize_i16(self, v: i16) -> Result<Self::Ok> {$/;"	f
serialize_i32	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn serialize_i32(self, v: i32) -> Result<Self::Ok> {$/;"	f
serialize_i64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn serialize_i64(self, v: i64) -> Result<Self::Ok> {$/;"	f
serialize_i8	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn serialize_i8(self, v: i8) -> Result<Self::Ok> {$/;"	f
serialize_key	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn serialize_key<T>(&mut self, key: &T) -> Result<()>$/;"	f
serialize_map	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn serialize_map(self, _len: Option<usize>) -> Result<Self::SerializeMap> {$/;"	f
serialize_newtype_struct	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn serialize_newtype_struct<T>(self, _name: &'static str, value: &T) -> Result<Self::Ok>$/;"	f
serialize_newtype_struct	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn serialize_newtype_struct<T>(self, _name: &str, value: &T) -> Result<Self::Ok>$/;"	f
serialize_newtype_variant	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn serialize_newtype_variant<T>($/;"	f
serialize_none	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn serialize_none(self) -> Result<Self::Ok> {$/;"	f
serialize_primitive	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn serialize_primitive<T>(&mut self, value: T) -> Result<()>$/;"	f
serialize_seq	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn serialize_seq(self, _len: Option<usize>) -> Result<Self::SerializeSeq> {$/;"	f
serialize_some	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn serialize_some<T>(self, value: &T) -> Result<Self::Ok>$/;"	f
serialize_str	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn serialize_str(self, v: &str) -> Result<Self::Ok> {$/;"	f
serialize_struct	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn serialize_struct(self, _name: &'static str, len: usize) -> Result<Self::SerializeStruct> {$/;"	f
serialize_struct	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn serialize_struct(self, name: &str, _len: usize) -> Result<Self::SerializeStruct> {$/;"	f
serialize_struct_variant	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn serialize_struct_variant($/;"	f
serialize_tuple	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn serialize_tuple(self, _len: usize) -> Result<Self::SerializeTuple> {$/;"	f
serialize_tuple	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn serialize_tuple(self, len: usize) -> Result<Self::SerializeTuple> {$/;"	f
serialize_tuple_struct	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn serialize_tuple_struct($/;"	f
serialize_tuple_struct	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn serialize_tuple_struct(self, name: &str, _len: usize) -> Result<Self::SerializeTupleStruct> {$/;"	f
serialize_tuple_variant	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn serialize_tuple_variant($/;"	f
serialize_u16	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn serialize_u16(self, v: u16) -> Result<Self::Ok> {$/;"	f
serialize_u32	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn serialize_u32(self, v: u32) -> Result<Self::Ok> {$/;"	f
serialize_u64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn serialize_u64(self, v: u64) -> Result<Self::Ok> {$/;"	f
serialize_u8	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn serialize_u8(self, v: u8) -> Result<Self::Ok> {$/;"	f
serialize_unit	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn serialize_unit(self) -> Result<Self::Ok> {$/;"	f
serialize_unit_struct	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn serialize_unit_struct(self, _name: &'static str) -> Result<Self::Ok> {$/;"	f
serialize_unit_struct	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn serialize_unit_struct(self, _name: &str) -> Result<Self::Ok> {$/;"	f
serialize_unit_variant	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn serialize_unit_variant($/;"	f
serialize_value	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn serialize_value<T>(&mut self, value: &T) -> Result<()>$/;"	f
set	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/config.rs	/^    pub fn set<T>(&mut self, key: &str, value: T) -> Result<&mut Config>$/;"	f
set	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/path/mod.rs	/^    pub fn set<'a>(&self, root: &'a mut Value, value: Value) {$/;"	f
set	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/container.rs	/^    pub fn set<T: Send + Sync + 'static>(&self, state: T) -> bool {$/;"	f
set	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/storage.rs	/^    pub fn set(&self, value: T) -> bool {$/;"	f
set	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/tls.rs	/^    pub fn set<F: Fn() -> T + 'static>(&self, state_init: F) -> bool {$/;"	f
set_ampm	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_ampm(&mut self, value: bool) -> ParseResult<()> {$/;"	f
set_attr	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/crossterm.rs	/^    fn set_attr(&self, attr: Attribute) {$/;"	f
set_callback	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_button.rs	/^    pub fn set_callback<F>(&mut self, cb: F)$/;"	f
set_color	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/blt.rs	/^    fn set_color(&self, color: ColorPair) -> ColorPair {$/;"	f
set_color	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/crossterm.rs	/^    fn set_color(&self, color: theme::ColorPair) -> theme::ColorPair {$/;"	f
set_color	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/n.rs	/^    fn set_color(&self, colors: ColorPair) -> ColorPair {$/;"	f
set_color	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/pan.rs	/^    fn set_color(&self, colors: ColorPair) -> ColorPair {$/;"	f
set_color	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/mod.rs	/^    fn set_color(&self, new_colors: theme::ColorPair) -> theme::ColorPair {$/;"	f
set_color	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/termion.rs	/^    fn set_color(&self, color: theme::ColorPair) -> theme::ColorPair {$/;"	f
set_colors	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/n.rs	/^    fn set_colors(&self, pair: ColorPair) {$/;"	f
set_colors	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/pan.rs	/^    fn set_colors(&self, pair: ColorPair) {$/;"	f
set_content	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn set_content<V: IntoBoxedView>(&mut self, view: V) {$/;"	f
set_content	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_text_view.rs	/^    pub fn set_content<S>(&mut self, content: S)$/;"	f
set_content	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_text_view.rs	/^    pub fn set_content<S>(&self, content: S)$/;"	f
set_content_wrap	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_text_view.rs	/^    pub fn set_content_wrap(&mut self, wrap: bool) {$/;"	f
set_day	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_day(&mut self, value: i64) -> ParseResult<()> {$/;"	f
set_default	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/config.rs	/^    pub fn set_default<T>(&mut self, key: &str, value: T) -> Result<&mut Config>$/;"	f
set_default_column	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn set_default_column(&mut self, column: H) {$/;"	f
set_effect	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_text_view.rs	/^    pub fn set_effect(&mut self, effect: Effect) {$/;"	f
set_effect	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/blt.rs	/^    fn set_effect(&self, effect: Effect) {$/;"	f
set_effect	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/crossterm.rs	/^    fn set_effect(&self, effect: theme::Effect) {$/;"	f
set_effect	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/n.rs	/^    fn set_effect(&self, effect: Effect) {$/;"	f
set_effect	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/pan.rs	/^    fn set_effect(&self, effect: Effect) {$/;"	f
set_effect	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/mod.rs	/^    fn set_effect(&self, effect: theme::Effect) {$/;"	f
set_effect	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/termion.rs	/^    fn set_effect(&self, effect: theme::Effect) {$/;"	f
set_enabled	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn set_enabled(&mut self, enabled: bool) {$/;"	f
set_hour	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_hour(&mut self, value: i64) -> ParseResult<()> {$/;"	f
set_hour12	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_hour12(&mut self, value: i64) -> ParseResult<()> {$/;"	f
set_if_consistent	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^fn set_if_consistent<T: PartialEq>(old: &mut Option<T>, new: T) -> ParseResult<()> {$/;"	f
set_isoweek	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_isoweek(&mut self, value: i64) -> ParseResult<()> {$/;"	f
set_isoyear	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_isoyear(&mut self, value: i64) -> ParseResult<()> {$/;"	f
set_isoyear_div_100	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_isoyear_div_100(&mut self, value: i64) -> ParseResult<()> {$/;"	f
set_isoyear_mod_100	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_isoyear_mod_100(&mut self, value: i64) -> ParseResult<()> {$/;"	f
set_items	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn set_items(&mut self, items: Vec<T>) {$/;"	f
set_label	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_button.rs	/^    pub fn set_label<S>(&mut self, label: S)$/;"	f
set_label_raw	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_button.rs	/^    pub fn set_label_raw<S>(&mut self, label: S)$/;"	f
set_local	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/container.rs	/^    pub fn set_local<T, F>(&self, state_init: F) -> bool$/;"	f
set_london_with_dst_time_zone	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub fn set_london_with_dst_time_zone() -> TzReset {$/;"	f
set_los_angeles_time_zone	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub fn set_los_angeles_time_zone() -> TzReset {$/;"	f
set_minute	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_minute(&mut self, value: i64) -> ParseResult<()> {$/;"	f
set_month	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_month(&mut self, value: i64) -> ParseResult<()> {$/;"	f
set_nanosecond	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_nanosecond(&mut self, value: i64) -> ParseResult<()> {$/;"	f
set_offset	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_offset(&mut self, value: i64) -> ParseResult<()> {$/;"	f
set_on_select	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn set_on_select<F>(&mut self, cb: F)$/;"	f
set_on_sort	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn set_on_sort<F>(&mut self, cb: F)$/;"	f
set_on_submit	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn set_on_submit<F>(&mut self, cb: F)$/;"	f
set_ordinal	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_ordinal(&mut self, value: i64) -> ParseResult<()> {$/;"	f
set_padding	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn set_padding(&mut self, padding: Margins) {$/;"	f
set_padding_bottom	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn set_padding_bottom(&mut self, padding: usize) {$/;"	f
set_padding_left	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn set_padding_left(&mut self, padding: usize) {$/;"	f
set_padding_right	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn set_padding_right(&mut self, padding: usize) {$/;"	f
set_padding_top	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn set_padding_top(&mut self, padding: usize) {$/;"	f
set_second	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_second(&mut self, value: i64) -> ParseResult<()> {$/;"	f
set_selected_item	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn set_selected_item(&mut self, item_index: usize) {$/;"	f
set_selected_row	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn set_selected_row(&mut self, row_index: usize) {$/;"	f
set_style	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_text_view.rs	/^    pub fn set_style<S: Into<Style>>(&mut self, style: S) {$/;"	f
set_time_zone	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn set_time_zone() -> TzReset {$/;"	f
set_time_zone_la_or_london	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn set_time_zone_la_or_london(london: bool) -> TzReset {$/;"	f
set_time_zone_london_dst	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn set_time_zone_london_dst() -> TzReset {$/;"	f
set_timestamp	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_timestamp(&mut self, value: i64) -> ParseResult<()> {$/;"	f
set_title	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn set_title<S: Into<String>>(&mut self, label: S) {$/;"	f
set_title_bottom	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn set_title_bottom<S: Into<String>>(&mut self, label: S) {$/;"	f
set_title_bottom_position	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn set_title_bottom_position(&mut self, align: HAlign) {$/;"	f
set_title_position	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn set_title_position(&mut self, align: HAlign) {$/;"	f
set_title_position_bottom_vert	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn set_title_position_bottom_vert(&mut self, align: VAlign) {$/;"	f
set_title_position_vert	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn set_title_position_vert(&mut self, align: VAlign) {$/;"	f
set_week_from_mon	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_week_from_mon(&mut self, value: i64) -> ParseResult<()> {$/;"	f
set_week_from_sun	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_week_from_sun(&mut self, value: i64) -> ParseResult<()> {$/;"	f
set_weekday	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_weekday(&mut self, value: Weekday) -> ParseResult<()> {$/;"	f
set_weekday_with_num_days_from_sunday	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^fn set_weekday_with_num_days_from_sunday(p: &mut Parsed, v: i64) -> ParseResult<()> {$/;"	f
set_weekday_with_number_from_monday	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^fn set_weekday_with_number_from_monday(p: &mut Parsed, v: i64) -> ParseResult<()> {$/;"	f
set_year	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_year(&mut self, value: i64) -> ParseResult<()> {$/;"	f
set_year_div_100	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_year_div_100(&mut self, value: i64) -> ParseResult<()> {$/;"	f
set_year_mod_100	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_year_mod_100(&mut self, value: i64) -> ParseResult<()> {$/;"	f
setup_test_table	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    fn setup_test_table() -> TableView<SimpleItem, SimpleColumn> {$/;"	f
short_month0	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn short_month0(s: &str) -> ParseResult<(&str, u8)> {$/;"	f
short_or_long_month0	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn short_or_long_month0(s: &str) -> ParseResult<(&str, u8)> {$/;"	f
short_or_long_weekday	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn short_or_long_weekday(s: &str) -> ParseResult<(&str, Weekday)> {$/;"	f
short_weekday	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn short_weekday(s: &str) -> ParseResult<(&str, Weekday)> {$/;"	f
should_insert_into_empty_table	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    fn should_insert_into_empty_table() {$/;"	f
should_insert_into_existing_table	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    fn should_insert_into_existing_table() {$/;"	f
shuffle	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/utils.rs	/^pub fn shuffle<T>(v: &mut [T]) {$/;"	f
shuffle	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^    fn shuffle<R>(&mut self, rng: &mut R)$/;"	f
signed_duration_since	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn signed_duration_since<Tz2: TimeZone>(self, rhs: Date<Tz2>) -> OldDuration {$/;"	f
signed_duration_since	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn signed_duration_since<Tz2: TimeZone>(self, rhs: DateTime<Tz2>) -> OldDuration {$/;"	f
signed_duration_since	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn signed_duration_since(self, rhs: NaiveDate) -> OldDuration {$/;"	f
signed_duration_since	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn signed_duration_since(self, rhs: NaiveDateTime) -> OldDuration {$/;"	f
signed_duration_since	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn signed_duration_since(self, rhs: NaiveTime) -> OldDuration {$/;"	f
simd_impl	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/integer.rs	/^macro_rules! simd_impl {$/;"	d
simd_impl	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^macro_rules! simd_impl {$/;"	d
simd_wmul	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^mod simd_wmul {$/;"	m
simple_if	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-width-0.1.8/src/tests.rs	/^fn simple_if(b: &mut Bencher) {$/;"	f
simple_match	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-width-0.1.8/src/tests.rs	/^fn simple_match(b: &mut Bencher) {$/;"	f
simple_width_if	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-width-0.1.8/src/tests.rs	/^fn simple_width_if(c: char) -> Option<usize> {$/;"	f
simple_width_match	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-width-0.1.8/src/tests.rs	/^fn simple_width_match(c: char) -> Option<usize> {$/;"	f
sindex_to_uindex	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/path/mod.rs	/^fn sindex_to_uindex(index: isize, len: usize) -> usize {$/;"	f
single	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    pub fn single(self) -> Option<T> {$/;"	f
size	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^    fn size(&self) -> Vec2 {$/;"	f
size	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^    pub fn size(&self) -> Vec2 {$/;"	f
size_hint	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	f
size_hint	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/mod.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^        fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
sleep_until	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/utils.rs	/^pub fn sleep_until(deadline: Option<Instant>) {$/;"	f
sort	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn sort(&mut self) {$/;"	f
sort_by	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn sort_by(&mut self, column: H, order: Ordering) {$/;"	f
sort_items	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    fn sort_items(&mut self, column: H, order: Ordering) {$/;"	f
source	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/read.rs	/^    fn source(&self) -> Option<&(dyn std::error::Error + 'static)> {$/;"	f
sp	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^macro_rules! sp {$/;"	d
space	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn space(s: &str) -> ParseResult<&str> {$/;"	f
span	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn span<F>(f: F) -> Duration where F: FnOnce() {$/;"	f
span_for_digits	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^fn span_for_digits(digits: u16) -> u32 {$/;"	f
splat	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^    fn splat(scalar: Self) -> Self {$/;"	f
split_i32	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/mod.rs	/^fn split_i32(code: i32) -> Vec<u8> {$/;"	f
start	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    fn start($/;"	f
start_dir_watcher_thread	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^fn start_dir_watcher_thread(siv: &mut Cursive, a_table_name: String, a_path: String, rx: Receiver<notify::DebouncedEvent>) {$/;"	f
start_read	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^fn start_read(rd: &ReadData, event_tx: Arc<Mutex<EventTx>>, handle: HANDLE) {$/;"	f
start_recv	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/array.rs	/^    fn start_recv(&self, token: &mut Token) -> bool {$/;"	f
start_recv	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^    fn start_recv(&self, token: &mut Token) -> bool {$/;"	f
start_recv	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/zero.rs	/^    fn start_recv(&self, token: &mut Token) -> bool {$/;"	f
start_resize_thread	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/resize.rs	/^pub fn start_resize_thread($/;"	f
start_send	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/array.rs	/^    fn start_send(&self, token: &mut Token) -> bool {$/;"	f
start_send	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^    fn start_send(&self, token: &mut Token) -> bool {$/;"	f
start_send	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/zero.rs	/^    fn start_send(&self, token: &mut Token) -> bool {$/;"	f
stdlib	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-width-0.1.8/src/tests.rs	/^fn stdlib(b: &mut Bencher) {$/;"	f
stdout_mut	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/crossterm.rs	/^    fn stdout_mut(&self) -> RefMut<BufWriter<Stdout>> {$/;"	f
stop	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^    fn stop(&mut self) {$/;"	f
stop_watch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^fn stop_watch(ws: &WatchState, meta_tx: &Sender<MetaEvent>) {$/;"	f
store_packet	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/context.rs	/^    pub fn store_packet(&self, packet: usize) {$/;"	f
stream	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/mod.rs	/^    pub fn stream(&self) -> Receiver<ObservedScreen> {$/;"	f
strftime	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub fn strftime<'a>(&'a self, format: &'a str) -> Result<TmFmt<'a>, ParseError> {$/;"	f
strftime	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub fn strftime(format: &str, tm: &Tm) -> Result<String, ParseError> {$/;"	f
strptime	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/parse.rs	/^pub fn strptime(mut s: &str, format: &str) -> Result<Tm, ParseError> {$/;"	f
struct_variant	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^    fn struct_variant<V>($/;"	f
structural_error	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^    fn structural_error(&self) -> ConfigError {$/;"	f
style	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_text_view.rs	/^    pub fn style<S: Into<Style>>(self, style: S) -> Self {$/;"	f
sub	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn sub(self, rhs: Date<Tz>) -> OldDuration {$/;"	f
sub	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn sub(self, rhs: OldDuration) -> Date<Tz> {$/;"	f
sub	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn sub(self, rhs: DateTime<Tz>) -> OldDuration {$/;"	f
sub	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn sub(self, rhs: OldDuration) -> DateTime<Tz> {$/;"	f
sub	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn sub(self, rhs: NaiveDate) -> OldDuration {$/;"	f
sub	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn sub(self, rhs: OldDuration) -> NaiveDate {$/;"	f
sub	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn sub(self, rhs: NaiveDateTime) -> OldDuration {$/;"	f
sub	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn sub(self, rhs: OldDuration) -> NaiveDateTime {$/;"	f
sub	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn sub(self, rhs: NaiveTime) -> OldDuration {$/;"	f
sub	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn sub(self, rhs: OldDuration) -> NaiveTime {$/;"	f
sub	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn sub(self, rhs: FixedOffset) -> DateTime<Tz> {$/;"	f
sub	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn sub(self, rhs: FixedOffset) -> NaiveDateTime {$/;"	f
sub	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn sub(self, rhs: FixedOffset) -> NaiveTime {$/;"	f
sub	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn sub(self, rhs: Duration) -> Duration {$/;"	f
sub	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn sub(self, rhs: Duration) -> Duration {$/;"	f
sub	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn sub(self, other: Duration) -> SteadyTime {$/;"	f
sub	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn sub(self, other: Duration) -> Timespec {$/;"	f
sub	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn sub(self, other: Duration) -> Tm {$/;"	f
sub	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn sub(self, other: SteadyTime) -> Duration {$/;"	f
sub	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn sub(self, other: Timespec) -> Duration {$/;"	f
sub	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn sub(self, other: Tm) -> Duration {$/;"	f
sub	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            fn sub(self, other: Duration) -> SteadyTime {$/;"	f
sub	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            fn sub(self, other: SteadyTime) -> Duration {$/;"	f
sub	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        fn sub(self, _other: Duration) -> SteadyTime {$/;"	f
sub	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        fn sub(self, _other: SteadyTime) -> Duration {$/;"	f
sub	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        fn sub(self, other: Duration) -> SteadyTime {$/;"	f
sub	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        fn sub(self, other: SteadyTime) -> Duration {$/;"	f
sub_assign	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn sub_assign(&mut self, rhs: OldDuration) {$/;"	f
sub_assign	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn sub_assign(&mut self, rhs: OldDuration) {$/;"	f
sub_assign	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn sub_assign(&mut self, rhs: OldDuration) {$/;"	f
succ	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn succ(&self) -> Date<Tz> {$/;"	f
succ	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    pub fn succ(&self) -> Month {$/;"	f
succ	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    pub fn succ(&self) -> Weekday {$/;"	f
succ	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn succ(&self) -> NaiveDate {$/;"	f
succ	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn succ(&self) -> Of {$/;"	f
succ_opt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn succ_opt(&self) -> Option<Date<Tz>> {$/;"	f
succ_opt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn succ_opt(&self) -> Option<NaiveDate> {$/;"	f
suspend_cpy_thread	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^fn suspend_cpy_thread(siv: &mut Cursive) {}$/;"	f
switch_panel	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^fn switch_panel(s: &mut cursive::Cursive) {$/;"	f
system_time_to_file_time	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/windows.rs	/^fn system_time_to_file_time(sys: &SYSTEMTIME) -> FILETIME {$/;"	f
system_time_to_file_time	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn system_time_to_file_time(sys: &SYSTEMTIME) -> FILETIME {$/;"	f
system_time_to_tm	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/windows.rs	/^fn system_time_to_tm(sys: &SYSTEMTIME, tm: &mut Tm) {$/;"	f
system_time_to_tm	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn system_time_to_tm(sys: &SYSTEMTIME, tm: &mut Tm) {$/;"	f
t	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^        macro_rules! t {$/;"	d
tableViewType	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^type tableViewType = TableView<ExplorerColumnData, ExplorerColumn>;$/;"	T
table_deserializer	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^    fn table_deserializer(&self, table: &Table) -> Result<StrDeserializer> {$/;"	f
take_focus	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_button.rs	/^    fn take_focus(&mut self, _: Direction) -> bool {$/;"	f
take_focus	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    fn take_focus(&mut self, source: Direction) -> bool {$/;"	f
take_focus	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    fn take_focus(&mut self, _: Direction) -> bool {$/;"	f
take_items	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn take_items(&mut self) -> Vec<T> {$/;"	f
ten_dice_rolls_other_than_five	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/mod.rs	/^        fn ten_dice_rolls_other_than_five<'a, R: Rng>($/;"	f
termion	/home/artie/Documents/Repos/smallB_cursive/cursive/src/cursive_runnable.rs	/^    pub fn termion() -> Self {$/;"	f
termion	/home/artie/Documents/Repos/smallB_cursive/cursive/src/lib.rs	/^pub fn termion() -> CursiveRunnable {$/;"	f
test	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^mod test {$/;"	m
test	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/path/parser.rs	/^mod test {$/;"	m
test	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^mod test {$/;"	m
test	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/bernoulli.rs	/^mod test {$/;"	m
test	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/weighted_index.rs	/^mod test {$/;"	m
test	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/lib.rs	/^mod test {$/;"	m
test	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rng.rs	/^mod test {$/;"	m
test	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/read.rs	/^mod test {$/;"	m
test	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/reseeding.rs	/^mod test {$/;"	m
test	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/std.rs	/^mod test {$/;"	m
test	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/thread.rs	/^mod test {$/;"	m
test	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^mod test {$/;"	m
test	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^mod test {$/;"	m
test	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^        fn test(s: &str, format: &str) -> bool {$/;"	f
test_accepting_nan	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/weighted_index.rs	/^    fn test_accepting_nan(){$/;"	f
test_alphanumeric	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/other.rs	/^    fn test_alphanumeric() {$/;"	f
test_asctime	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_asctime() {$/;"	f
test_at	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_at() {$/;"	f
test_at_utc	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_at_utc() {$/;"	f
test_auto_conversion	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^fn test_auto_conversion() {$/;"	f
test_average	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/bernoulli.rs	/^    fn test_average() {$/;"	f
test_char	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    fn test_char() {$/;"	f
test_char	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-width-0.1.8/src/tests.rs	/^fn test_char() {$/;"	f
test_char2	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-width-0.1.8/src/tests.rs	/^fn test_char2() {$/;"	f
test_chars	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/other.rs	/^    fn test_chars() {$/;"	f
test_child	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/path/parser.rs	/^    fn test_child() {$/;"	f
test_clone_reseeding	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/reseeding.rs	/^    fn test_clone_reseeding() {$/;"	f
test_conversions	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_conversions() {$/;"	f
test_ctime	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_ctime() {$/;"	f
test_custom_uniform	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    fn test_custom_uniform() {$/;"	f
test_date_add	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_add() {$/;"	f
test_date_addassignment	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_addassignment() {$/;"	f
test_date_before_1970	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_date_before_1970() {$/;"	f
test_date_bounds	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^fn test_date_bounds() {$/;"	f
test_date_extreme_offset	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn test_date_extreme_offset() {$/;"	f
test_date_fields	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_fields() {$/;"	f
test_date_fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_fmt() {$/;"	f
test_date_format	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_format() {$/;"	f
test_date_from_isoywd	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_from_isoywd() {$/;"	f
test_date_from_isoywd_and_iso_week	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_from_isoywd_and_iso_week() {$/;"	f
test_date_from_num_days_from_ce	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_from_num_days_from_ce() {$/;"	f
test_date_from_str	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_from_str() {$/;"	f
test_date_from_str	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_date_from_str() {$/;"	f
test_date_from_weekday_of_month_opt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_from_weekday_of_month_opt() {$/;"	f
test_date_from_ymd	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_from_ymd() {$/;"	f
test_date_from_yo	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_from_yo() {$/;"	f
test_date_num_days_from_ce	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_num_days_from_ce() {$/;"	f
test_date_parse_from_str	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_parse_from_str() {$/;"	f
test_date_pred	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_pred() {$/;"	f
test_date_sub	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_sub() {$/;"	f
test_date_subassignment	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_subassignment() {$/;"	f
test_date_succ	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_succ() {$/;"	f
test_date_weekday	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_weekday() {$/;"	f
test_date_with_fields	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_with_fields() {$/;"	f
test_datetime_add	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_datetime_add() {$/;"	f
test_datetime_add_sub_invariant	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_datetime_add_sub_invariant() {$/;"	f
test_datetime_addassignment	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_datetime_addassignment() {$/;"	f
test_datetime_date_and_time	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_datetime_date_and_time() {$/;"	f
test_datetime_format	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_datetime_format() {$/;"	f
test_datetime_format_alignment	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_datetime_format_alignment() {$/;"	f
test_datetime_format_with_local	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_datetime_format_with_local() {$/;"	f
test_datetime_from_str	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_datetime_from_str() {$/;"	f
test_datetime_from_str	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_datetime_from_str() {$/;"	f
test_datetime_from_timestamp	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_datetime_from_timestamp() {$/;"	f
test_datetime_is_copy	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_datetime_is_copy() {$/;"	f
test_datetime_is_send	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_datetime_is_send() {$/;"	f
test_datetime_offset	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_datetime_offset() {$/;"	f
test_datetime_parse_from_str	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_datetime_parse_from_str() {$/;"	f
test_datetime_parse_from_str	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_datetime_parse_from_str() {$/;"	f
test_datetime_rfc2822_and_rfc3339	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_datetime_rfc2822_and_rfc3339() {$/;"	f
test_datetime_sub	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_datetime_sub() {$/;"	f
test_datetime_subassignment	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_datetime_subassignment() {$/;"	f
test_datetime_timestamp	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_datetime_timestamp() {$/;"	f
test_datetime_with_timezone	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_datetime_with_timezone() {$/;"	f
test_day_iterator_limit	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_day_iterator_limit() {$/;"	f
test_decodable	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_decodable() {$/;"	f
test_decodable	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_decodable() {$/;"	f
test_decodable	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_decodable() {$/;"	f
test_decodable	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_decodable() {$/;"	f
test_decodable_json	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^fn test_decodable_json<FUtc, FFixed, FLocal, E>($/;"	f
test_decodable_json	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^fn test_decodable_json<F, E>(from_str: F)$/;"	f
test_decodable_json	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^fn test_decodable_json<F, E>(from_str: F)$/;"	f
test_decodable_json	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^fn test_decodable_json<F, E>(from_str: F)$/;"	f
test_decodable_json_timestamp	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^fn test_decodable_json_timestamp<F, E>(from_str: F)$/;"	f
test_decodable_json_timestamps	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^fn test_decodable_json_timestamps<FUtc, FFixed, FLocal, E>($/;"	f
test_decodable_timestamps	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_decodable_timestamps() {$/;"	f
test_decodable_timestamps	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_decodable_timestamps() {$/;"	f
test_distributions_iter	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/mod.rs	/^    fn test_distributions_iter() {$/;"	f
test_div_mod_floor	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/div.rs	/^    fn test_div_mod_floor() {$/;"	f
test_dst	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_dst() {$/;"	f
test_duration	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn test_duration() {$/;"	f
test_duration	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn test_duration() {$/;"	f
test_duration_checked_ops	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn test_duration_checked_ops() {$/;"	f
test_duration_checked_ops	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn test_duration_checked_ops() {$/;"	f
test_duration_div	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn test_duration_div() {$/;"	f
test_duration_div	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn test_duration_div() {$/;"	f
test_duration_fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn test_duration_fmt() {$/;"	f
test_duration_fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn test_duration_fmt() {$/;"	f
test_duration_mul	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn test_duration_mul() {$/;"	f
test_duration_mul	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn test_duration_mul() {$/;"	f
test_duration_num_days	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn test_duration_num_days() {$/;"	f
test_duration_num_days	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn test_duration_num_days() {$/;"	f
test_duration_num_microseconds	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn test_duration_num_microseconds() {$/;"	f
test_duration_num_microseconds	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn test_duration_num_microseconds() {$/;"	f
test_duration_num_milliseconds	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn test_duration_num_milliseconds() {$/;"	f
test_duration_num_milliseconds	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn test_duration_num_milliseconds() {$/;"	f
test_duration_num_nanoseconds	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn test_duration_num_nanoseconds() {$/;"	f
test_duration_num_nanoseconds	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn test_duration_num_nanoseconds() {$/;"	f
test_duration_num_seconds	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn test_duration_num_seconds() {$/;"	f
test_duration_num_seconds	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn test_duration_num_seconds() {$/;"	f
test_duration_round	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn test_duration_round() {$/;"	f
test_duration_round_pre_epoch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn test_duration_round_pre_epoch() {$/;"	f
test_duration_trunc	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn test_duration_trunc() {$/;"	f
test_duration_trunc_pre_epoch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn test_duration_trunc_pre_epoch() {$/;"	f
test_durations	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    fn test_durations() {$/;"	f
test_emoji	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-width-0.1.8/src/tests.rs	/^fn test_emoji() {$/;"	f
test_encodable	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_encodable() {$/;"	f
test_encodable	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_encodable() {$/;"	f
test_encodable	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_encodable() {$/;"	f
test_encodable	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_encodable() {$/;"	f
test_encodable_json	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^fn test_encodable_json<FUtc, FFixed, E>(to_string_utc: FUtc, to_string_fixed: FFixed)$/;"	f
test_encodable_json	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^fn test_encodable_json<F, E>(to_string: F)$/;"	f
test_encodable_json	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^fn test_encodable_json<F, E>(to_string: F)$/;"	f
test_encodable_json	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^fn test_encodable_json<F, E>(to_string: F)$/;"	f
test_expand_lines	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^    fn test_expand_lines() {$/;"	f
test_expand_lines_weird_symbol_1	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^    fn test_expand_lines_weird_symbol_1() {$/;"	f
test_expand_lines_weird_symbol_2	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^    fn test_expand_lines_weird_symbol_2() {$/;"	f
test_f32	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/float.rs	/^    macro_rules! test_f32 {$/;"	d
test_f64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/float.rs	/^    macro_rules! test_f64 {$/;"	d
test_fill	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rng.rs	/^    fn test_fill() {$/;"	f
test_fill_bytes_default	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rng.rs	/^    fn test_fill_bytes_default() {$/;"	f
test_fill_empty	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rng.rs	/^    fn test_fill_empty() {$/;"	f
test_float_assertions	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    fn test_float_assertions() {$/;"	f
test_floats	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    fn test_floats() {$/;"	f
test_from_std	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn test_from_std() {$/;"	f
test_from_std	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn test_from_std() {$/;"	f
test_from_system_time	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_from_system_time() {$/;"	f
test_fsevent_watcher_drop	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^fn test_fsevent_watcher_drop() {$/;"	f
test_gen_bool	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rng.rs	/^    fn test_gen_bool() {$/;"	f
test_gen_range_float	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rng.rs	/^    fn test_gen_range_float() {$/;"	f
test_gen_range_int	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rng.rs	/^    fn test_gen_range_int() {$/;"	f
test_gen_range_panic_int	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rng.rs	/^    fn test_gen_range_panic_int() {$/;"	f
test_gen_range_panic_usize	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rng.rs	/^    fn test_gen_range_panic_usize() {$/;"	f
test_gen_ratio_average	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rng.rs	/^    fn test_gen_ratio_average() {$/;"	f
test_get_time	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_get_time() {$/;"	f
test_id	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/path/parser.rs	/^    fn test_id() {$/;"	f
test_id_dash	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/path/parser.rs	/^    fn test_id_dash() {$/;"	f
test_integers	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/integer.rs	/^    fn test_integers() {$/;"	f
test_integers	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    fn test_integers() {$/;"	f
test_iso_week_extremes	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/isoweek.rs	/^    fn test_iso_week_extremes() {$/;"	f
test_iter	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^        fn test_iter(iter: impl Iterator<Item = usize> + Clone) -> [i32; 9] {$/;"	f
test_iter	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^        fn test_iter<R: Rng + ?Sized, Iter: Iterator<Item = usize> + Clone>(r: &mut R, iter: Iter) {$/;"	f
test_iterator_choose	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^    fn test_iterator_choose() {$/;"	f
test_iterator_choose_stable	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^    fn test_iterator_choose_stable() {$/;"	f
test_iterator_choose_stable_stability	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^    fn test_iterator_choose_stable_stability() {$/;"	f
test_leap_second	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    fn test_leap_second() {$/;"	f
test_local_date_sanity_check	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    fn test_local_date_sanity_check() {$/;"	f
test_make_an_iter	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/mod.rs	/^    fn test_make_an_iter() {$/;"	f
test_mdf_fields	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_mdf_fields() {$/;"	f
test_mdf_to_of	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_mdf_to_of() {$/;"	f
test_mdf_to_of_to_mdf	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_mdf_to_of_to_mdf() {$/;"	f
test_mdf_valid	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_mdf_valid() {$/;"	f
test_mdf_with_fields	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_mdf_with_fields() {$/;"	f
test_misc	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/other.rs	/^    fn test_misc() {$/;"	f
test_mod_floor	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/div.rs	/^    fn test_mod_floor() {$/;"	f
test_month_enum_primitive_parse	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn test_month_enum_primitive_parse() {$/;"	f
test_month_enum_succ_pred	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^fn test_month_enum_succ_pred() {$/;"	f
test_muldiv	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn test_muldiv() {$/;"	f
test_multiple_weighted_distributions	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^    fn test_multiple_weighted_distributions() {$/;"	f
test_multiple_weighted_edge_cases	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^    fn test_multiple_weighted_edge_cases() {$/;"	f
test_nanos_never_panics	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn test_nanos_never_panics() {$/;"	f
test_nanosecond_range	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_nanosecond_range() {$/;"	f
test_negative_millis	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn test_negative_millis() {$/;"	f
test_negative_nanos	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn test_negative_nanos() {$/;"	f
test_num_days_from_ce_against_alternative_impl	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^fn test_num_days_from_ce_against_alternative_impl() {$/;"	f
test_of	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_of() {$/;"	f
test_of_fields	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_of_fields() {$/;"	f
test_of_isoweekdate_raw	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_of_isoweekdate_raw() {$/;"	f
test_of_to_mdf	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_of_to_mdf() {$/;"	f
test_of_to_mdf_to_of	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_of_to_mdf_to_of() {$/;"	f
test_of_weekday	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_of_weekday() {$/;"	f
test_of_with_fields	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_of_with_fields() {$/;"	f
test_oneway	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^        fn test_oneway(s : &str, format : &str) -> bool {$/;"	f
test_parse	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^fn test_parse() {$/;"	f
test_parsed_set_fields	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    fn test_parsed_set_fields() {$/;"	f
test_parsed_to_datetime	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    fn test_parsed_to_datetime() {$/;"	f
test_parsed_to_datetime_with_timezone	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    fn test_parsed_to_datetime_with_timezone() {$/;"	f
test_parsed_to_naive_date	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    fn test_parsed_to_naive_date() {$/;"	f
test_parsed_to_naive_datetime_with_offset	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    fn test_parsed_to_naive_datetime_with_offset() {$/;"	f
test_parsed_to_naive_time	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    fn test_parsed_to_naive_time() {$/;"	f
test_partial_shuffle	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^    fn test_partial_shuffle() {$/;"	f
test_precise_time	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_precise_time() {$/;"	f
test_precise_time_to	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_precise_time_to() {$/;"	f
test_random	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/lib.rs	/^    fn test_random() {$/;"	f
test_reader_rng_fill_bytes	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/read.rs	/^    fn test_reader_rng_fill_bytes() {$/;"	f
test_reader_rng_insufficient_bytes	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/read.rs	/^    fn test_reader_rng_insufficient_bytes() {$/;"	f
test_reader_rng_u32	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/read.rs	/^    fn test_reader_rng_u32() {$/;"	f
test_reader_rng_u64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/read.rs	/^    fn test_reader_rng_u64() {$/;"	f
test_readme_doomsday	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn test_readme_doomsday() {$/;"	f
test_reseeding	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/reseeding.rs	/^    fn test_reseeding() {$/;"	f
test_rfc2822	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^fn test_rfc2822() {$/;"	f
test_rfc3339	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^fn test_rfc3339() {$/;"	f
test_rfc3339_opts	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_rfc3339_opts() {$/;"	f
test_rfc3339_opts_nonexhaustive	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_rfc3339_opts_nonexhaustive() {$/;"	f
test_rng_boxed_trait	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rng.rs	/^    fn test_rng_boxed_trait() {$/;"	f
test_rng_trait_object	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rng.rs	/^    fn test_rng_trait_object() {$/;"	f
test_round_leap_nanos	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn test_round_leap_nanos() {$/;"	f
test_round_subsecs	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn test_round_subsecs() {$/;"	f
test_sample_alg	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^    fn test_sample_alg() {$/;"	f
test_sample_boundaries	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^    fn test_sample_boundaries() {$/;"	f
test_sample_iter	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^    fn test_sample_iter() {$/;"	f
test_sample_weighted	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^    fn test_sample_weighted() {$/;"	f
test_samples	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/float.rs	/^        fn test_samples<T: Copy + core::fmt::Debug + PartialEq, D: Distribution<T>>($/;"	f
test_samples	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/integer.rs	/^        fn test_samples<T: Copy + core::fmt::Debug + PartialEq>(zero: T, expected: &[T])$/;"	f
test_samples	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/other.rs	/^        fn test_samples<T: Copy + core::fmt::Debug + PartialEq, D: Distribution<T>>($/;"	f
test_samples	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^        fn test_samples<T: SampleUniform + Copy + core::fmt::Debug + PartialEq>($/;"	f
test_samples	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/weighted_index.rs	/^        fn test_samples<X: SampleUniform + PartialOrd, I>($/;"	f
test_serde_bincode	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_serde_bincode() {$/;"	f
test_serde_bincode	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_serde_bincode() {$/;"	f
test_serde_bincode	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_serde_bincode() {$/;"	f
test_serde_bincode	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_serde_bincode() {$/;"	f
test_serde_bincode_optional	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_serde_bincode_optional() {$/;"	f
test_serde_deserialize	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_serde_deserialize() {$/;"	f
test_serde_deserialize	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn test_serde_deserialize() {$/;"	f
test_serde_deserialize	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_serde_deserialize() {$/;"	f
test_serde_deserialize	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_serde_deserialize() {$/;"	f
test_serde_deserialize	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_serde_deserialize() {$/;"	f
test_serde_serialize	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_serde_serialize() {$/;"	f
test_serde_serialize	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn test_serde_serialize() {$/;"	f
test_serde_serialize	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_serde_serialize() {$/;"	f
test_serde_serialize	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_serde_serialize() {$/;"	f
test_serde_serialize	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_serde_serialize() {$/;"	f
test_serialization_index_vec	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^    fn test_serialization_index_vec() {$/;"	f
test_serialization_step_rng	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/mock.rs	/^    fn test_serialization_step_rng() {$/;"	f
test_serialization_uniform_duration	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    fn test_serialization_uniform_duration() {$/;"	f
test_serializing_deserializing_bernoulli	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/bernoulli.rs	/^    fn test_serializing_deserializing_bernoulli() {$/;"	f
test_shuffle	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^    fn test_shuffle() {$/;"	f
test_slice_choose	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^    fn test_slice_choose() {$/;"	f
test_stdrng_construction	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/std.rs	/^    fn test_stdrng_construction() {$/;"	f
test_steadytime_sub	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_steadytime_sub() {$/;"	f
test_str	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-width-0.1.8/src/tests.rs	/^fn test_str() {$/;"	f
test_strftime	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_strftime() {$/;"	f
test_strftime_docs	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^fn test_strftime_docs() {$/;"	f
test_strftime_docs_localized	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^fn test_strftime_docs_localized() {$/;"	f
test_strftime_items	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^fn test_strftime_items() {$/;"	f
test_strptime	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_strptime() {$/;"	f
test_struct	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/ser.rs	/^    fn test_struct() {$/;"	f
test_subscript	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/path/parser.rs	/^    fn test_subscript() {$/;"	f
test_subscript_neg	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/path/parser.rs	/^    fn test_subscript_neg() {$/;"	f
test_subsecond_part	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_subsecond_part() {$/;"	f
test_test	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^    fn test_test() {$/;"	f
test_thread_rng	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/thread.rs	/^    fn test_thread_rng() {$/;"	f
test_time_add	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_time_add() {$/;"	f
test_time_addassignment	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_time_addassignment() {$/;"	f
test_time_fmt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_time_fmt() {$/;"	f
test_time_format	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_time_format() {$/;"	f
test_time_from_hms_micro	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_time_from_hms_micro() {$/;"	f
test_time_from_hms_milli	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_time_from_hms_milli() {$/;"	f
test_time_hms	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_time_hms() {$/;"	f
test_time_overflowing_add	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_time_overflowing_add() {$/;"	f
test_time_parse_from_str	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_time_parse_from_str() {$/;"	f
test_time_sub	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_time_sub() {$/;"	f
test_time_sub	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_time_sub() {$/;"	f
test_time_subassignment	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_time_subassignment() {$/;"	f
test_timespec_add	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_timespec_add() {$/;"	f
test_timespec_eq_ord	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_timespec_eq_ord() {$/;"	f
test_timespec_hash	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_timespec_hash() {$/;"	f
test_timespec_sub	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_timespec_sub() {$/;"	f
test_to_std	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn test_to_std() {$/;"	f
test_to_std	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn test_to_std() {$/;"	f
test_to_string_round_trip	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_to_string_round_trip() {$/;"	f
test_to_string_round_trip_with_local	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_to_string_round_trip_with_local() {$/;"	f
test_to_timespec	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_to_timespec() {$/;"	f
test_trivial	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/bernoulli.rs	/^    fn test_trivial() {$/;"	f
test_trunc_leap_nanos	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn test_trunc_leap_nanos() {$/;"	f
test_trunc_subsecs	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn test_trunc_subsecs() {$/;"	f
test_uniform_bad_limits_equal_int	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    fn test_uniform_bad_limits_equal_int() {$/;"	f
test_uniform_bad_limits_flipped_int	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    fn test_uniform_bad_limits_flipped_int() {$/;"	f
test_uniform_from_std_range	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    fn test_uniform_from_std_range() {$/;"	f
test_uniform_from_std_range_inclusive	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    fn test_uniform_from_std_range_inclusive() {$/;"	f
test_uniform_good_limits_equal_int	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    fn test_uniform_good_limits_equal_int() {$/;"	f
test_uniform_serialization	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    fn test_uniform_serialization() {$/;"	f
test_update_weights	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/weighted_index.rs	/^    fn test_update_weights() {$/;"	f
test_week_iterator_limit	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_week_iterator_limit() {$/;"	f
test_weighted	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^    fn test_weighted() {$/;"	f
test_weightedindex	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/weighted_index.rs	/^    fn test_weightedindex() {$/;"	f
test_weightedindex_serde1	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/weighted_index.rs	/^    fn test_weightedindex_serde1() {$/;"	f
test_year_flags_ndays_from_year	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_year_flags_ndays_from_year() {$/;"	f
test_year_flags_nisoweeks	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_year_flags_nisoweeks() {$/;"	f
tests	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^mod tests {$/;"	m
tests	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/div.rs	/^mod tests {$/;"	m
tests	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^mod tests {$/;"	m
tests	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^mod tests {$/;"	m
tests	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^mod tests {$/;"	m
tests	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^mod tests {$/;"	m
tests	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/isoweek.rs	/^mod tests {$/;"	m
tests	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^mod tests {$/;"	m
tests	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^mod tests {$/;"	m
tests	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^mod tests {$/;"	m
tests	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^mod tests {$/;"	m
tests	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^mod tests {$/;"	m
tests	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^mod tests {$/;"	m
tests	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^mod tests {$/;"	m
tests	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/float.rs	/^mod tests {$/;"	m
tests	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/integer.rs	/^mod tests {$/;"	m
tests	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/mod.rs	/^mod tests {$/;"	m
tests	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/other.rs	/^mod tests {$/;"	m
tests	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^mod tests {$/;"	m
tests	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/mock.rs	/^mod tests {$/;"	m
tests	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/xoshiro128plusplus.rs	/^mod tests {$/;"	m
tests	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/xoshiro256plusplus.rs	/^mod tests {$/;"	m
tests	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^mod tests {$/;"	m
tests	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^mod tests {$/;"	m
tests	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^mod tests {$/;"	m
tests	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^mod tests {$/;"	m
text	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn text<S: Into<StyledString>>(text: S) -> Self {$/;"	f
text_view_copying_total	/home/artie/Documents/Projects/rust/FileManager/src/internals/literals/copy_progress_dlg.rs	/^    pub static text_view_copying_total: &str = "TextView_total";$/;"	c
thread_id	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/context.rs	/^    pub fn thread_id(&self) -> ThreadId {$/;"	f
thread_rng	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/thread.rs	/^pub fn thread_rng() -> ThreadRng {$/;"	f
tick	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^pub fn tick(duration: Duration) -> Receiver<Instant> {$/;"	f
time	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn time(&self) -> NaiveTime {$/;"	f
time	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn time(&self) -> NaiveTime {$/;"	f
time_to_file_time	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/windows.rs	/^fn time_to_file_time(sec: i64) -> FILETIME {$/;"	f
time_to_file_time	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn time_to_file_time(sec: i64) -> FILETIME {$/;"	f
time_to_local_tm	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/stub.rs	/^pub fn time_to_local_tm(sec: i64, tm: &mut Tm) {$/;"	f
time_to_local_tm	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/unix.rs	/^pub fn time_to_local_tm(sec: i64, tm: &mut Tm) {$/;"	f
time_to_local_tm	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/windows.rs	/^pub fn time_to_local_tm(sec: i64, tm: &mut Tm) {$/;"	f
time_to_local_tm	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub fn time_to_local_tm(sec: i64, tm: &mut Tm) {$/;"	f
time_to_tm	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/stub.rs	/^fn time_to_tm(ts: i64, tm: &mut Tm) {$/;"	f
time_to_tm	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub fn time_to_tm(ts: i64, tm: &mut Tm) {$/;"	f
time_to_utc_tm	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub fn time_to_utc_tm(sec: i64, tm: &mut Tm) {$/;"	f
timegm	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/unix.rs	/^unsafe fn timegm(tm: *mut libc::tm) -> time_t {$/;"	f
timegm	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    unsafe fn timegm(tm: *mut libc::tm) -> time_t {$/;"	f
timestamp	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn timestamp(&self) -> i64 {$/;"	f
timestamp	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn timestamp(&self) -> i64 {$/;"	f
timestamp	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn timestamp(&self, secs: i64, nsecs: u32) -> DateTime<Self> {$/;"	f
timestamp_millis	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn timestamp_millis(&self) -> i64 {$/;"	f
timestamp_millis	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn timestamp_millis(&self) -> i64 {$/;"	f
timestamp_millis	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn timestamp_millis(&self, millis: i64) -> DateTime<Self> {$/;"	f
timestamp_millis_opt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn timestamp_millis_opt(&self, millis: i64) -> LocalResult<DateTime<Self>> {$/;"	f
timestamp_nanos	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn timestamp_nanos(&self) -> i64 {$/;"	f
timestamp_nanos	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn timestamp_nanos(&self) -> i64 {$/;"	f
timestamp_nanos	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn timestamp_nanos(&self, nanos: i64) -> DateTime<Self> {$/;"	f
timestamp_opt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn timestamp_opt(&self, secs: i64, nsecs: u32) -> LocalResult<DateTime<Self>> {$/;"	f
timestamp_subsec_micros	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn timestamp_subsec_micros(&self) -> u32 {$/;"	f
timestamp_subsec_micros	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn timestamp_subsec_micros(&self) -> u32 {$/;"	f
timestamp_subsec_millis	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn timestamp_subsec_millis(&self) -> u32 {$/;"	f
timestamp_subsec_millis	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn timestamp_subsec_millis(&self) -> u32 {$/;"	f
timestamp_subsec_nanos	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn timestamp_subsec_nanos(&self) -> u32 {$/;"	f
timestamp_subsec_nanos	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn timestamp_subsec_nanos(&self) -> u32 {$/;"	f
timezone	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn timezone(&self) -> Tz {$/;"	f
timezone	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn timezone(&self) -> Tz {$/;"	f
timezone	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/unix.rs	/^    static timezone: time_t;$/;"	c
timezone	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        static timezone: time_t;$/;"	c
timezone_name_skip	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn timezone_name_skip(s: &str) -> ParseResult<(&str, ())> {$/;"	f
timezone_offset	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn timezone_offset<F>(s: &str, consume_colon: F) -> ParseResult<(&str, i32)>$/;"	f
timezone_offset_2822	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn timezone_offset_2822(s: &str) -> ParseResult<(&str, Option<i32>)> {$/;"	f
timezone_offset_internal	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^fn timezone_offset_internal<F>($/;"	f
timezone_offset_permissive	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn timezone_offset_permissive<F>(s: &str, colon: F) -> ParseResult<(&str, i32)>$/;"	f
timezone_offset_zulu	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn timezone_offset_zulu<F>(s: &str, colon: F) -> ParseResult<(&str, i32)>$/;"	f
title	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn title<S: Into<String>>(self, label: S) -> Self {$/;"	f
title_bottom	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn title_bottom<S: Into<String>>(self, label: S) -> Self {$/;"	f
title_bottom_position	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn title_bottom_position(self, align: HAlign) -> Self {$/;"	f
title_position	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn title_position(self, align: HAlign) -> Self {$/;"	f
tm_to_datetime	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^fn tm_to_datetime(mut tm: sys::Tm) -> DateTime<Local> {$/;"	f
tm_to_naive_date	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    fn tm_to_naive_date(tm: &sys::Tm) -> NaiveDate {$/;"	f
tm_to_rust_tm	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/unix.rs	/^fn tm_to_rust_tm(tm: &libc::tm, utcoff: i32, rust_tm: &mut Tm) {$/;"	f
tm_to_rust_tm	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn tm_to_rust_tm(tm: &libc::tm, utcoff: i32, rust_tm: &mut Tm) {$/;"	f
tm_to_system_time	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/windows.rs	/^fn tm_to_system_time(tm: &Tm) -> SYSTEMTIME {$/;"	f
tm_to_system_time	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn tm_to_system_time(tm: &Tm) -> SYSTEMTIME {$/;"	f
tm_to_time	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/stub.rs	/^fn tm_to_time(tm: &Tm) -> i64 {$/;"	f
tm_to_time	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub fn tm_to_time(tm: &Tm) -> i64 {$/;"	f
to	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub fn to(&self, later: PreciseTime) -> Duration {$/;"	f
to_column	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^        fn to_column(&self, column: SimpleColumn) -> String {$/;"	f
to_column	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    fn to_column(&self, column: H) -> String;$/;"	f
to_column	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^    fn to_column(&self, column: ExplorerColumn) -> String {$/;"	f
to_datetime	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn to_datetime(&self) -> ParseResult<DateTime<FixedOffset>> {$/;"	f
to_datetime_with_timezone	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn to_datetime_with_timezone<Tz: TimeZone>(&self, tz: &Tz) -> ParseResult<DateTime<Tz>> {$/;"	f
to_fixed_offset	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn to_fixed_offset(&self) -> ParseResult<FixedOffset> {$/;"	f
to_handle	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    unsafe fn to_handle(x: *const Self) -> Self::Handle { (*x).borrow() }$/;"	f
to_handle	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    unsafe fn to_handle(x: *const Self) -> Self::Handle;$/;"	f
to_handle_mut	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    unsafe fn to_handle_mut(x: *const Self) -> Self::HandleMut { (*x).borrow_mut() }$/;"	f
to_handle_mut	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    unsafe fn to_handle_mut(x: *const Self) -> Self::HandleMut;$/;"	f
to_local	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub fn to_local(&self) -> Tm {$/;"	f
to_mdf	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn to_mdf(&self) -> Mdf {$/;"	f
to_naive_date	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn to_naive_date(&self) -> ParseResult<NaiveDate> {$/;"	f
to_naive_datetime_with_offset	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn to_naive_datetime_with_offset(&self, offset: i32) -> ParseResult<NaiveDateTime> {$/;"	f
to_naive_time	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn to_naive_time(&self) -> ParseResult<NaiveTime> {$/;"	f
to_of	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn to_of(&self) -> Of {$/;"	f
to_rfc2822	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn to_rfc2822(&self) -> String {$/;"	f
to_rfc3339	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn to_rfc3339(&self) -> String {$/;"	f
to_rfc3339_opts	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn to_rfc3339_opts(&self, secform: SecondsFormat, use_z: bool) -> String {$/;"	f
to_std	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn to_std(&self) -> Result<StdDuration, OutOfRangeError> {$/;"	f
to_std	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn to_std(&self) -> Result<StdDuration, OutOfRangeError> {$/;"	f
to_string	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^    fn to_string(&self) -> String {$/;"	f
to_timespec	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^    pub fn to_timespec(&self) -> Timespec {$/;"	f
to_timespec	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub fn to_timespec(&self) -> Timespec {$/;"	f
to_utc	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub fn to_utc(&self) -> Tm {$/;"	f
today	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    pub fn today() -> Date<Local> {$/;"	f
today	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^    pub fn today() -> Date<Utc> {$/;"	f
total_erase	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn total_erase() {$/;"	f
total_erase_box	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn total_erase_box() {$/;"	f
trace	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/lib.rs	/^macro_rules! trace { ($($x:tt)*) => ($/;"	d
translate_button	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/crossterm.rs	/^fn translate_button(button: CMouseButton) -> MouseButton {$/;"	f
translate_color	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/crossterm.rs	/^fn translate_color(base_color: theme::Color) -> Color {$/;"	f
translate_event	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/crossterm.rs	/^fn translate_event(event: CKeyEvent) -> Event {$/;"	f
translate_flags	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^fn translate_flags(flags: fse::StreamFlags) -> op::Op {$/;"	f
translate_key	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/crossterm.rs	/^fn translate_key(code: KeyCode) -> Key {$/;"	f
trunc_subsecs	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn trunc_subsecs(self, digits: u16) -> Self;$/;"	f
trunc_subsecs	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn trunc_subsecs(self, digits: u16) -> T {$/;"	f
try_consume	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^    macro_rules! try_consume {$/;"	d
try_fill	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rng.rs	/^            fn try_fill<R: Rng + ?Sized>(&mut self, rng: &mut R) -> Result<(), Error> {$/;"	f
try_fill	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rng.rs	/^    fn try_fill<R: Rng + ?Sized>(&mut self, rng: &mut R) -> Result<(), Error> {$/;"	f
try_fill	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rng.rs	/^    fn try_fill<R: Rng + ?Sized>(&mut self, rng: &mut R) -> Result<(), Error>;$/;"	f
try_fill	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rng.rs	/^    fn try_fill<T: Fill + ?Sized>(&mut self, dest: &mut T) -> Result<(), Error> {$/;"	f
try_fill_bytes	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/read.rs	/^    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {$/;"	f
try_fill_bytes	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/adapter/reseeding.rs	/^    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {$/;"	f
try_fill_bytes	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/mock.rs	/^    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {$/;"	f
try_fill_bytes	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/small.rs	/^    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {$/;"	f
try_fill_bytes	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/std.rs	/^    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {$/;"	f
try_fill_bytes	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/thread.rs	/^    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {$/;"	f
try_fill_bytes	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/xoshiro128plusplus.rs	/^    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {$/;"	f
try_fill_bytes	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/rngs/xoshiro256plusplus.rs	/^    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {$/;"	f
try_from	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/config.rs	/^    pub fn try_from<T: Serialize>(from: &T) -> Result<Self> {$/;"	f
try_get	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/container.rs	/^    pub fn try_get<T: Send + Sync + 'static>(&self) -> Option<&T> {$/;"	f
try_get	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/storage.rs	/^    pub fn try_get(&self) -> Option<&T> {$/;"	f
try_get	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/tls.rs	/^    pub fn try_get(&self) -> Option<&T> {$/;"	f
try_get_local	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/container.rs	/^    pub fn try_get_local<T: Send + 'static>(&self) -> Option<&T> {$/;"	f
try_into	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/config.rs	/^    pub fn try_into<'de, T: Deserialize<'de>>(self) -> Result<T> {$/;"	f
try_into	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^    pub fn try_into<'de, T: Deserialize<'de>>(self) -> Result<T> {$/;"	f
try_into_runner	/home/artie/Documents/Repos/smallB_cursive/cursive/src/cursive_runnable.rs	/^    pub fn try_into_runner($/;"	f
try_iter	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^    pub fn try_iter(&self) -> TryIter<'_, T> {$/;"	f
try_map	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    pub fn try_map<F, U: ?Sized, E>(mut self, f: F) -> Result<OwningRef<O, U>, E>$/;"	f
try_map	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    pub fn try_map<F, U: ?Sized, E>(self, f: F) -> Result<OwningRef<O, U>, E>$/;"	f
try_map1	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn try_map1() {$/;"	f
try_map2	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn try_map2() {$/;"	f
try_map3	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn try_map3() {$/;"	f
try_map4	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn try_map4() {$/;"	f
try_map_mut	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn try_map_mut() {$/;"	f
try_map_mut	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    pub fn try_map_mut<F, U: ?Sized, E>(mut self, f: F) -> Result<OwningRefMut<O, U>, E>$/;"	f
try_map_with_owner	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    pub fn try_map_with_owner<F, U: ?Sized, E>(self, f: F) -> Result<OwningRef<O, U>, E>$/;"	f
try_map_with_owner_err	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn try_map_with_owner_err() {$/;"	f
try_map_with_owner_ok	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn try_map_with_owner_ok() {$/;"	f
try_new	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^    pub fn try_new<F, E>(o: O, f: F) -> Result<Self, E>$/;"	f
try_opt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^macro_rules! try_opt {$/;"	d
try_opt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^macro_rules! try_opt {$/;"	d
try_opt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^macro_rules! try_opt {$/;"	d
try_owning_handle_err	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn try_owning_handle_err() {$/;"	f
try_owning_handle_ok	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.4.1/src/lib.rs	/^        fn try_owning_handle_ok() {$/;"	f
try_ready	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^    pub fn try_ready(&mut self) -> Result<usize, TryReadyError> {$/;"	f
try_recv	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^    pub fn try_recv(&self) -> Result<T, TryRecvError> {$/;"	f
try_recv	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/array.rs	/^    pub fn try_recv(&self) -> Result<T, TryRecvError> {$/;"	f
try_recv	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/at.rs	/^    pub fn try_recv(&self) -> Result<Instant, TryRecvError> {$/;"	f
try_recv	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^    pub fn try_recv(&self) -> Result<T, TryRecvError> {$/;"	f
try_recv	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/never.rs	/^    pub fn try_recv(&self) -> Result<T, TryRecvError> {$/;"	f
try_recv	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/tick.rs	/^    pub fn try_recv(&self) -> Result<Instant, TryRecvError> {$/;"	f
try_recv	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/zero.rs	/^    pub fn try_recv(&self) -> Result<T, TryRecvError> {$/;"	f
try_run	/home/artie/Documents/Repos/smallB_cursive/cursive/src/cursive_runnable.rs	/^    pub fn try_run(&mut self) -> Result<(), Box<dyn std::error::Error>> {$/;"	f
try_runner	/home/artie/Documents/Repos/smallB_cursive/cursive/src/cursive_runnable.rs	/^    pub fn try_runner($/;"	f
try_select	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^    fn try_select(&self, token: &mut Token) -> bool {$/;"	f
try_select	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/context.rs	/^    pub fn try_select(&self, select: Selected) -> Result<(), Selected> {$/;"	f
try_select	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/array.rs	/^    fn try_select(&self, token: &mut Token) -> bool {$/;"	f
try_select	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/at.rs	/^    fn try_select(&self, token: &mut Token) -> bool {$/;"	f
try_select	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^    fn try_select(&self, token: &mut Token) -> bool {$/;"	f
try_select	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/never.rs	/^    fn try_select(&self, _token: &mut Token) -> bool {$/;"	f
try_select	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/tick.rs	/^    fn try_select(&self, token: &mut Token) -> bool {$/;"	f
try_select	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/zero.rs	/^    fn try_select(&self, token: &mut Token) -> bool {$/;"	f
try_select	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^    fn try_select(&self, token: &mut Token) -> bool {$/;"	f
try_select	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^    fn try_select(&self, token: &mut Token) -> bool;$/;"	f
try_select	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^    pub fn try_select(&mut self) -> Result<SelectedOperation<'a>, TrySelectError> {$/;"	f
try_select	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^pub fn try_select<'a>($/;"	f
try_select	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/waker.rs	/^    pub fn try_select(&mut self) -> Option<Entry> {$/;"	f
try_send	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^    pub fn try_send(&self, msg: T) -> Result<(), TrySendError<T>> {$/;"	f
try_send	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/array.rs	/^    pub fn try_send(&self, msg: T) -> Result<(), TrySendError<T>> {$/;"	f
try_send	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^    pub fn try_send(&self, msg: T) -> Result<(), TrySendError<T>> {$/;"	f
try_send	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/zero.rs	/^    pub fn try_send(&self, msg: T) -> Result<(), TrySendError<T>> {$/;"	f
try_to_need_init	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/init.rs	/^    fn try_to_need_init(&self) -> bool {$/;"	f
ts_milliseconds	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub mod ts_milliseconds {$/;"	m
ts_milliseconds	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub mod ts_milliseconds {$/;"	m
ts_milliseconds_option	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub mod ts_milliseconds_option {$/;"	m
ts_nanoseconds	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub mod ts_nanoseconds {$/;"	m
ts_nanoseconds	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub mod ts_nanoseconds {$/;"	m
ts_nanoseconds_option	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub mod ts_nanoseconds_option {$/;"	m
ts_seconds	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub mod ts_seconds {$/;"	m
ts_seconds	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub mod ts_seconds {$/;"	m
ts_seconds_option	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub mod ts_seconds_option {$/;"	m
tuple_impl	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/other.rs	/^macro_rules! tuple_impl {$/;"	d
tuple_variant	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^    fn tuple_variant<V>(self, _len: usize, visitor: V) -> Result<V::Value>$/;"	f
tzset	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/unix.rs	/^        fn tzset();$/;"	f
tzset	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/unix.rs	/^fn tzset() {$/;"	f
tzset	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub fn tzset() {$/;"	f
tzset	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub fn tzset() {}$/;"	f
tzset	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            fn tzset();$/;"	f
unbind	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select_macro.rs	/^                    unsafe fn unbind<'a, T>(x: &T) -> &'a T {$/;"	f
unbounded	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^pub fn unbounded<T>() -> (Sender<T>, Receiver<T>) {$/;"	f
unchecked_unwrap	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/thread_local/unreachable.rs	/^    unsafe fn unchecked_unwrap(self) -> T {$/;"	f
unchecked_unwrap	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/thread_local/unreachable.rs	/^    unsafe fn unchecked_unwrap(self) -> T;$/;"	f
unchecked_unwrap_err	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/thread_local/unreachable.rs	/^    unsafe fn unchecked_unwrap_err(self) -> E {$/;"	f
unchecked_unwrap_err	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/thread_local/unreachable.rs	/^    unsafe fn unchecked_unwrap_err(self) -> E;$/;"	f
unchecked_unwrap_none	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/thread_local/unreachable.rs	/^    unsafe fn unchecked_unwrap_none(self) {$/;"	f
unchecked_unwrap_none	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/thread_local/unreachable.rs	/^    unsafe fn unchecked_unwrap_none(self);$/;"	f
unchecked_unwrap_ok	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/thread_local/unreachable.rs	/^    unsafe fn unchecked_unwrap_ok(self) -> T {$/;"	f
unchecked_unwrap_ok	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/thread_local/unreachable.rs	/^    unsafe fn unchecked_unwrap_ok(self) -> T;$/;"	f
unflatten_index	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^    fn unflatten_index(&self, index: usize) -> Vec2 {$/;"	f
unicode_12	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-width-0.1.8/src/tests.rs	/^fn unicode_12() {$/;"	f
uniform_float_impl	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^macro_rules! uniform_float_impl {$/;"	d
uniform_int_impl	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^macro_rules! uniform_int_impl {$/;"	d
uniform_simd_int_impl	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^macro_rules! uniform_simd_int_impl {$/;"	d
unit_variant	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^    fn unit_variant(self) -> Result<()> {$/;"	f
unix	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    mod unix {$/;"	m
unlock	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/container.rs	/^    fn unlock(&self) {$/;"	f
unpark	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/context.rs	/^    pub fn unpark(&self) {$/;"	f
unreachable	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/thread_local/unreachable.rs	/^pub unsafe fn unreachable() -> ! {$/;"	f
unregister	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^    fn unregister(&self, oper: Operation) {$/;"	f
unregister	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/array.rs	/^    fn unregister(&self, oper: Operation) {$/;"	f
unregister	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/at.rs	/^    fn unregister(&self, _oper: Operation) {}$/;"	f
unregister	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^    fn unregister(&self, _oper: Operation) {}$/;"	f
unregister	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^    fn unregister(&self, oper: Operation) {$/;"	f
unregister	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/never.rs	/^    fn unregister(&self, _oper: Operation) {}$/;"	f
unregister	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/tick.rs	/^    fn unregister(&self, _oper: Operation) {}$/;"	f
unregister	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/zero.rs	/^    fn unregister(&self, oper: Operation) {$/;"	f
unregister	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^    fn unregister(&self, oper: Operation) {$/;"	f
unregister	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^    fn unregister(&self, oper: Operation);$/;"	f
unregister	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/waker.rs	/^    pub fn unregister(&mut self, oper: Operation) -> Option<Entry> {$/;"	f
unregister	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/waker.rs	/^    pub fn unregister(&self, oper: Operation) -> Option<Entry> {$/;"	f
unset_effect	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/blt.rs	/^    fn unset_effect(&self, effect: Effect) {$/;"	f
unset_effect	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/crossterm.rs	/^    fn unset_effect(&self, effect: theme::Effect) {$/;"	f
unset_effect	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/n.rs	/^    fn unset_effect(&self, effect: Effect) {$/;"	f
unset_effect	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/pan.rs	/^    fn unset_effect(&self, effect: Effect) {$/;"	f
unset_effect	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/mod.rs	/^    fn unset_effect(&self, effect: theme::Effect) {$/;"	f
unset_effect	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/termion.rs	/^    fn unset_effect(&self, effect: theme::Effect) {$/;"	f
unwatch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^    fn unwatch(&self, oper: Operation) {$/;"	f
unwatch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/array.rs	/^    fn unwatch(&self, oper: Operation) {$/;"	f
unwatch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/at.rs	/^    fn unwatch(&self, _oper: Operation) {}$/;"	f
unwatch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^    fn unwatch(&self, _oper: Operation) {}$/;"	f
unwatch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^    fn unwatch(&self, oper: Operation) {$/;"	f
unwatch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/never.rs	/^    fn unwatch(&self, _oper: Operation) {}$/;"	f
unwatch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/tick.rs	/^    fn unwatch(&self, _oper: Operation) {}$/;"	f
unwatch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/zero.rs	/^    fn unwatch(&self, oper: Operation) {$/;"	f
unwatch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^    fn unwatch(&self, oper: Operation) {$/;"	f
unwatch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^    fn unwatch(&self, oper: Operation);$/;"	f
unwatch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/waker.rs	/^    pub fn unwatch(&mut self, oper: Operation) {$/;"	f
unwatch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/waker.rs	/^    pub fn unwatch(&self, oper: Operation) {$/;"	f
unwatch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^    fn unwatch<P: AsRef<Path>>(&mut self, path: P) -> Result<()> {$/;"	f
unwatch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    fn unwatch<P: AsRef<Path>>(&mut self, path: P) -> Result<()> {$/;"	f
unwatch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    fn unwatch<P: AsRef<Path>>(&mut self, path: P) -> Result<()>;$/;"	f
unwatch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/null.rs	/^    fn unwatch<P: AsRef<Path>>(&mut self, path: P) -> Result<()> {$/;"	f
unwatch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/poll.rs	/^    fn unwatch<P: AsRef<Path>>(&mut self, path: P) -> Result<()> {$/;"	f
unwatch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    fn unwatch<P: AsRef<Path>>(&mut self, path: P) -> Result<()> {$/;"	f
unwrap	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    pub fn unwrap(self) -> T {$/;"	f
unwrap	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/puppet/observed.rs	/^    pub fn unwrap(&self) -> String {$/;"	f
update_cpy_dlg	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^fn update_cpy_dlg(siv: &mut Cursive, process_info: fs_extra::file::TransitProcess, file_name: String, current_inx: usize) {$/;"	f
update_table	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^fn update_table(siv: &mut Cursive, a_name: String, a_path: String) {$/;"	f
update_weights	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/weighted_index.rs	/^    pub fn update_weights(&mut self, new_weights: &[(usize, &X)]) -> Result<(), WeightedError>$/;"	f
utc_minus_local	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    pub fn utc_minus_local(&self) -> i32 {$/;"	f
utc_tm_to_time	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/stub.rs	/^pub fn utc_tm_to_time(tm: &Tm) -> i64 {$/;"	f
utc_tm_to_time	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/unix.rs	/^pub fn utc_tm_to_time(rust_tm: &Tm) -> i64 {$/;"	f
utc_tm_to_time	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/windows.rs	/^pub fn utc_tm_to_time(tm: &Tm) -> i64 {$/;"	f
utc_tm_to_time	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub fn utc_tm_to_time(rust_tm: &Tm) -> i64 {$/;"	f
utc_tm_to_time	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub fn utc_tm_to_time(tm: &Tm) -> i64 {$/;"	f
v_align	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog.rs	/^    pub fn v_align(mut self, v: VAlign) -> Self {$/;"	f
v_align	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_text_view.rs	/^    pub fn v_align(mut self, v: VAlign) -> Self {$/;"	f
valid	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn valid(&self) -> bool {$/;"	f
validate_format	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^fn validate_format<'a>(fmt: TmFmt<'a>) -> Result<TmFmt<'a>, ParseError> {$/;"	f
value_stability	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/bernoulli.rs	/^    fn value_stability() {$/;"	f
value_stability	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/float.rs	/^    fn value_stability() {$/;"	f
value_stability	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/integer.rs	/^    fn value_stability() {$/;"	f
value_stability	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/other.rs	/^    fn value_stability() {$/;"	f
value_stability	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/uniform.rs	/^    fn value_stability() {$/;"	f
value_stability	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/weighted_index.rs	/^    fn value_stability() {$/;"	f
value_stability_choose	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^    fn value_stability_choose() {$/;"	f
value_stability_choose_multiple	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^    fn value_stability_choose_multiple() {$/;"	f
value_stability_choose_stable	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^    fn value_stability_choose_stable() {$/;"	f
value_stability_sample	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^    fn value_stability_sample() {$/;"	f
value_stability_slice	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/mod.rs	/^    fn value_stability_slice() {$/;"	f
variant_deserializer	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^    fn variant_deserializer(&self, name: &String) -> Result<StrDeserializer> {$/;"	f
variant_seed	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/de.rs	/^    fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self::Variant)>$/;"	f
view	/home/artie/Documents/Projects/rust/FileManager/src/internals/file_explorer_utils.rs	/^fn view(siv: &mut cursive::Cursive) {}$/;"	f
visit_bool	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^            fn visit_bool<E>(self, value: bool) -> ::std::result::Result<Value, E> {$/;"	f
visit_f64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^            fn visit_f64<E>(self, value: f64) -> ::std::result::Result<Value, E> {$/;"	f
visit_i16	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^            fn visit_i16<E>(self, value: i16) -> ::std::result::Result<Value, E> {$/;"	f
visit_i32	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^            fn visit_i32<E>(self, value: i32) -> ::std::result::Result<Value, E> {$/;"	f
visit_i64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn visit_i64<E>(self, value: i64) -> Result<DateTime<Utc>, E>$/;"	f
visit_i64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^            fn visit_i64<E>(self, value: i64) -> Result<NaiveDateTime, E>$/;"	f
visit_i64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^            fn visit_i64<E>(self, value: i64) -> ::std::result::Result<Value, E> {$/;"	f
visit_i8	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^            fn visit_i8<E>(self, value: i8) -> ::std::result::Result<Value, E> {$/;"	f
visit_map	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^            fn visit_map<V>(self, mut visitor: V) -> ::std::result::Result<Value, V::Error>$/;"	f
visit_none	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn visit_none<E>(self) -> Result<Option<DateTime<Utc>>, E>$/;"	f
visit_none	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^            fn visit_none<E>(self) -> ::std::result::Result<Value, E> {$/;"	f
visit_seq	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^            fn visit_seq<V>(self, mut visitor: V) -> ::std::result::Result<Value, V::Error>$/;"	f
visit_some	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn visit_some<D>(self, d: D) -> Result<Option<DateTime<Utc>>, D::Error>$/;"	f
visit_some	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^            fn visit_some<D>(self, deserializer: D) -> ::std::result::Result<Value, D::Error>$/;"	f
visit_str	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        fn visit_str<E>(self, value: &str) -> Result<DateTime<FixedOffset>, E>$/;"	f
visit_str	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^        fn visit_str<E>(self, value: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^        fn visit_str<E>(self, value: &str) -> Result<NaiveDate, E>$/;"	f
visit_str	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        fn visit_str<E>(self, value: &str) -> Result<NaiveDateTime, E>$/;"	f
visit_str	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^        fn visit_str<E>(self, value: &str) -> Result<NaiveTime, E>$/;"	f
visit_str	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^            fn visit_str<E>(self, value: &str) -> ::std::result::Result<Value, E>$/;"	f
visit_string	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^            fn visit_string<E>(self, value: String) -> ::std::result::Result<Value, E> {$/;"	f
visit_u16	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^            fn visit_u16<E>(self, value: u16) -> ::std::result::Result<Value, E> {$/;"	f
visit_u32	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^            fn visit_u32<E>(self, value: u32) -> ::std::result::Result<Value, E> {$/;"	f
visit_u64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn visit_u64<E>(self, value: u64) -> Result<DateTime<Utc>, E>$/;"	f
visit_u64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^            fn visit_u64<E>(self, value: u64) -> Result<NaiveDateTime, E>$/;"	f
visit_u64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^            fn visit_u64<E>(self, value: u64) -> ::std::result::Result<Value, E> {$/;"	f
visit_u8	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^            fn visit_u8<E>(self, value: u8) -> ::std::result::Result<Value, E> {$/;"	f
visit_unit	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn visit_unit<E>(self) -> Result<Option<DateTime<Utc>>, E>$/;"	f
visit_unit	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/value.rs	/^            fn visit_unit<E>(self) -> ::std::result::Result<Value, E> {$/;"	f
wait_next	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^    fn wait_next(&self) -> *mut Block<T> {$/;"	f
wait_packet	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/context.rs	/^    pub fn wait_packet(&self) -> usize {$/;"	f
wait_ready	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/zero.rs	/^    fn wait_ready(&self) {$/;"	f
wait_until	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/context.rs	/^    pub fn wait_until(&self, deadline: Option<Instant>) -> Selected {$/;"	f
wait_write	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^    fn wait_write(&self) {$/;"	f
wakeup_server	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    fn wakeup_server(&mut self) {$/;"	f
warn	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/lib.rs	/^macro_rules! warn { ($($x:tt)*) => ($/;"	d
watch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^    fn watch(&self, oper: Operation, cx: &Context) -> bool {$/;"	f
watch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/array.rs	/^    fn watch(&self, oper: Operation, cx: &Context) -> bool {$/;"	f
watch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/at.rs	/^    fn watch(&self, _oper: Operation, _cx: &Context) -> bool {$/;"	f
watch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^    fn watch(&self, _oper: Operation, _cx: &Context) -> bool {$/;"	f
watch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^    fn watch(&self, oper: Operation, cx: &Context) -> bool {$/;"	f
watch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/never.rs	/^    fn watch(&self, _oper: Operation, _cx: &Context) -> bool {$/;"	f
watch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/tick.rs	/^    fn watch(&self, _oper: Operation, _cx: &Context) -> bool {$/;"	f
watch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/zero.rs	/^    fn watch(&self, oper: Operation, cx: &Context) -> bool {$/;"	f
watch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^    fn watch(&self, oper: Operation, cx: &Context) -> bool {$/;"	f
watch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/select.rs	/^    fn watch(&self, oper: Operation, cx: &Context) -> bool;$/;"	f
watch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/waker.rs	/^    pub fn watch(&mut self, oper: Operation, cx: &Context) {$/;"	f
watch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/waker.rs	/^    pub fn watch(&self, oper: Operation, cx: &Context) {$/;"	f
watch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^    fn watch<P: AsRef<Path>>(&mut self, path: P, recursive_mode: RecursiveMode) -> Result<()> {$/;"	f
watch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    fn watch<P: AsRef<Path>>(&mut self, path: P, recursive_mode: RecursiveMode) -> Result<()> {$/;"	f
watch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    fn watch<P: AsRef<Path>>(&mut self, path: P, recursive_mode: RecursiveMode) -> Result<()>;$/;"	f
watch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/null.rs	/^    fn watch<P: AsRef<Path>>(&mut self, path: P, recursive_mode: RecursiveMode) -> Result<()> {$/;"	f
watch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/poll.rs	/^    fn watch<P: AsRef<Path>>(&mut self, path: P, recursive_mode: RecursiveMode) -> Result<()> {$/;"	f
watch	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    fn watch<P: AsRef<Path>>(&mut self, path: P, recursive_mode: RecursiveMode) -> Result<()> {$/;"	f
watcher	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^pub fn watcher(tx: Sender<DebouncedEvent>, delay: Duration) -> Result<RecommendedWatcher> {$/;"	f
week	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/isoweek.rs	/^    pub fn week(&self) -> u32 {$/;"	f
week0	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/isoweek.rs	/^    pub fn week0(&self) -> u32 {$/;"	f
weekday	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn weekday(&self) -> Weekday {$/;"	f
weekday	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn weekday(&self) -> Weekday {$/;"	f
weekday	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn weekday(&self) -> Weekday;$/;"	f
weekday	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn weekday(&self) -> Weekday {$/;"	f
weekday	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn weekday(&self) -> Weekday {$/;"	f
weekday	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn weekday(&self) -> Weekday {$/;"	f
weekday_serde	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^mod weekday_serde {$/;"	m
weeks	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn weeks(weeks: i64) -> Duration {$/;"	f
weeks	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn weeks(weeks: i64) -> Duration {$/;"	f
west	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    pub fn west(secs: i32) -> FixedOffset {$/;"	f
west_opt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    pub fn west_opt(secs: i32) -> Option<FixedOffset> {$/;"	f
widget_names	/home/artie/Documents/Projects/rust/FileManager/src/internals/literals/copy_progress_dlg.rs	/^pub mod widget_names {$/;"	m
width	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-width-0.1.8/src/lib.rs	/^    fn width(&self) -> usize {$/;"	f
width	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-width-0.1.8/src/lib.rs	/^    fn width(self) -> Option<usize> { cw::width(self, false) }$/;"	f
width	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-width-0.1.8/src/lib.rs	/^    fn width(self) -> Option<usize>;$/;"	f
width	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-width-0.1.8/src/lib.rs	/^    fn width<'a>(&'a self) -> usize;$/;"	f
width	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-width-0.1.8/src/tables.rs	/^    pub fn width(c: char, is_cjk: bool) -> Option<usize> {$/;"	f
width	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn width(mut self, width: usize) -> Self {$/;"	f
width_cjk	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-width-0.1.8/src/lib.rs	/^    fn width_cjk(&self) -> usize {$/;"	f
width_cjk	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-width-0.1.8/src/lib.rs	/^    fn width_cjk(self) -> Option<usize> { cw::width(self, true) }$/;"	f
width_cjk	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-width-0.1.8/src/lib.rs	/^    fn width_cjk(self) -> Option<usize>;$/;"	f
width_cjk	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-width-0.1.8/src/lib.rs	/^    fn width_cjk<'a>(&'a self) -> usize;$/;"	f
width_percent	/home/artie/Documents/Projects/rust/FileManager/src/internals/cursive_table_view.rs	/^    pub fn width_percent(mut self, width: usize) -> Self {$/;"	f
with	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/context.rs	/^    pub fn with<F, R>(f: F) -> R$/;"	f
with_capacity	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/array.rs	/^    pub fn with_capacity(cap: usize) -> Self {$/;"	f
with_color	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/termion.rs	/^fn with_color<F, R>(clr: theme::Color, f: F) -> R$/;"	f
with_content	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_text_view.rs	/^    pub fn with_content<F, O>(&self, f: F) -> O$/;"	f
with_content_inner	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_text_view.rs	/^    fn with_content_inner<F, O>(&self, f: F) -> O$/;"	f
with_day	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn with_day(&self, day: u32) -> Option<Date<Tz>> {$/;"	f
with_day	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn with_day(&self, day: u32) -> Option<DateTime<Tz>> {$/;"	f
with_day	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn with_day(&self, day: u32) -> Option<Self>;$/;"	f
with_day	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn with_day(&self, day: u32) -> Option<NaiveDate> {$/;"	f
with_day	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn with_day(&self, day: u32) -> Option<NaiveDateTime> {$/;"	f
with_day	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn with_day(&self, day: u32) -> Mdf {$/;"	f
with_day0	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn with_day0(&self, day0: u32) -> Option<Date<Tz>> {$/;"	f
with_day0	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn with_day0(&self, day0: u32) -> Option<DateTime<Tz>> {$/;"	f
with_day0	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn with_day0(&self, day0: u32) -> Option<Self>;$/;"	f
with_day0	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn with_day0(&self, day0: u32) -> Option<NaiveDate> {$/;"	f
with_day0	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn with_day0(&self, day0: u32) -> Option<NaiveDateTime> {$/;"	f
with_delay_ms	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/poll.rs	/^    pub fn with_delay_ms(tx: Sender<RawEvent>, delay: u32) -> Result<PollWatcher> {$/;"	f
with_flags	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn with_flags(&self, YearFlags(flags): YearFlags) -> Mdf {$/;"	f
with_flags	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn with_flags(&self, YearFlags(flags): YearFlags) -> Of {$/;"	f
with_hour	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn with_hour(&self, hour: u32) -> Option<DateTime<Tz>> {$/;"	f
with_hour	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn with_hour(&self, hour: u32) -> Option<Self>;$/;"	f
with_hour	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn with_hour(&self, hour: u32) -> Option<NaiveDateTime> {$/;"	f
with_hour	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn with_hour(&self, hour: u32) -> Option<NaiveTime> {$/;"	f
with_mdf	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn with_mdf(&self, mdf: Mdf) -> Option<NaiveDate> {$/;"	f
with_minute	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn with_minute(&self, min: u32) -> Option<DateTime<Tz>> {$/;"	f
with_minute	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn with_minute(&self, min: u32) -> Option<Self>;$/;"	f
with_minute	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn with_minute(&self, min: u32) -> Option<NaiveDateTime> {$/;"	f
with_minute	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn with_minute(&self, min: u32) -> Option<NaiveTime> {$/;"	f
with_month	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn with_month(&self, month: u32) -> Option<Date<Tz>> {$/;"	f
with_month	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn with_month(&self, month: u32) -> Option<DateTime<Tz>> {$/;"	f
with_month	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn with_month(&self, month: u32) -> Option<Self>;$/;"	f
with_month	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn with_month(&self, month: u32) -> Option<NaiveDate> {$/;"	f
with_month	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn with_month(&self, month: u32) -> Option<NaiveDateTime> {$/;"	f
with_month	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn with_month(&self, month: u32) -> Mdf {$/;"	f
with_month0	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn with_month0(&self, month0: u32) -> Option<Date<Tz>> {$/;"	f
with_month0	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn with_month0(&self, month0: u32) -> Option<DateTime<Tz>> {$/;"	f
with_month0	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn with_month0(&self, month0: u32) -> Option<Self>;$/;"	f
with_month0	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn with_month0(&self, month0: u32) -> Option<NaiveDate> {$/;"	f
with_month0	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn with_month0(&self, month0: u32) -> Option<NaiveDateTime> {$/;"	f
with_name	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/file/mod.rs	/^    pub fn with_name(name: &str) -> Self {$/;"	f
with_nanosecond	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn with_nanosecond(&self, nano: u32) -> Option<DateTime<Tz>> {$/;"	f
with_nanosecond	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn with_nanosecond(&self, nano: u32) -> Option<Self>;$/;"	f
with_nanosecond	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn with_nanosecond(&self, nano: u32) -> Option<NaiveDateTime> {$/;"	f
with_nanosecond	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn with_nanosecond(&self, nano: u32) -> Option<NaiveTime> {$/;"	f
with_of	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn with_of(&self, of: Of) -> Option<NaiveDate> {$/;"	f
with_ordinal	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn with_ordinal(&self, ordinal: u32) -> Option<Date<Tz>> {$/;"	f
with_ordinal	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn with_ordinal(&self, ordinal: u32) -> Option<DateTime<Tz>> {$/;"	f
with_ordinal	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn with_ordinal(&self, ordinal: u32) -> Option<Self>;$/;"	f
with_ordinal	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn with_ordinal(&self, ordinal: u32) -> Option<NaiveDate> {$/;"	f
with_ordinal	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn with_ordinal(&self, ordinal: u32) -> Option<NaiveDateTime> {$/;"	f
with_ordinal	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn with_ordinal(&self, ordinal: u32) -> Of {$/;"	f
with_ordinal0	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn with_ordinal0(&self, ordinal0: u32) -> Option<Date<Tz>> {$/;"	f
with_ordinal0	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn with_ordinal0(&self, ordinal0: u32) -> Option<DateTime<Tz>> {$/;"	f
with_ordinal0	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn with_ordinal0(&self, ordinal0: u32) -> Option<Self>;$/;"	f
with_ordinal0	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn with_ordinal0(&self, ordinal0: u32) -> Option<NaiveDate> {$/;"	f
with_ordinal0	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn with_ordinal0(&self, ordinal0: u32) -> Option<NaiveDateTime> {$/;"	f
with_prefix	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/config-0.9.3/src/env.rs	/^    pub fn with_prefix(s: &str) -> Self {$/;"	f
with_remainer	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^    fn with_remainer(s: &'a str) -> StrftimeItems<'a> {$/;"	f
with_second	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn with_second(&self, sec: u32) -> Option<DateTime<Tz>> {$/;"	f
with_second	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn with_second(&self, sec: u32) -> Option<Self>;$/;"	f
with_second	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn with_second(&self, sec: u32) -> Option<NaiveDateTime> {$/;"	f
with_second	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn with_second(&self, sec: u32) -> Option<NaiveTime> {$/;"	f
with_timezone	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn with_timezone<Tz2: TimeZone>(&self, tz: &Tz2) -> Date<Tz2> {$/;"	f
with_timezone	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn with_timezone<Tz2: TimeZone>(&self, tz: &Tz2) -> DateTime<Tz2> {$/;"	f
with_view	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog_try.rs	/^        fn with_view<F, R>(&self, f: F) -> ::std::option::Option<R>$/;"	f
with_view_mut	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog_try.rs	/^        fn with_view_mut<F, R>(&mut self, f: F) -> ::std::option::Option<R>$/;"	f
with_year	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn with_year(&self, year: i32) -> Option<Date<Tz>> {$/;"	f
with_year	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn with_year(&self, year: i32) -> Option<DateTime<Tz>> {$/;"	f
with_year	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn with_year(&self, year: i32) -> Option<Self>;$/;"	f
with_year	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn with_year(&self, year: i32) -> Option<NaiveDate> {$/;"	f
with_year	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn with_year(&self, year: i32) -> Option<NaiveDateTime> {$/;"	f
wmul	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^                fn wmul(self, b: $ty) -> Self::Output {$/;"	f
wmul	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^                fn wmul(self, x: $ty) -> Self::Output {$/;"	f
wmul	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^            fn wmul(self, b: $ty) -> Self::Output {$/;"	f
wmul	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^            fn wmul(self, x: $ty) -> Self::Output {$/;"	f
wmul	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^            fn wmul(self, x: usize) -> Self::Output {$/;"	f
wmul	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^    fn wmul(self, x: RHS) -> Self::Output;$/;"	f
wmul_impl	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^macro_rules! wmul_impl {$/;"	d
wmul_impl_16	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^    macro_rules! wmul_impl_16 {$/;"	d
wmul_impl_large	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^macro_rules! wmul_impl_large {$/;"	d
wmul_impl_usize	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/distributions/utils.rs	/^macro_rules! wmul_impl_usize {$/;"	d
wrap_impl	/home/artie/Documents/Projects/rust/FileManager/src/internals/atomic_dialog_try.rs	/^macro_rules! wrap_impl {$/;"	d
write	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/channel.rs	/^pub unsafe fn write<T>(s: &Sender<T>, token: &mut Token, msg: T) -> Result<(), T> {$/;"	f
write	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/array.rs	/^    pub unsafe fn write(&self, token: &mut Token, msg: T) -> Result<(), T> {$/;"	f
write	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/list.rs	/^    pub unsafe fn write(&self, token: &mut Token, msg: T) -> Result<(), T> {$/;"	f
write	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-channel-0.5.0/src/flavors/zero.rs	/^    pub unsafe fn write(&self, token: &mut Token, msg: T) -> Result<(), T> {$/;"	f
write	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/ident_hash.rs	/^    fn write(&mut self, bytes: &[u8]) {$/;"	f
write	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/termion.rs	/^    fn write<T>(&self, content: T)$/;"	f
write_all	/home/artie/Documents/Repos/fs_extra/src/file.rs	/^pub fn write_all<P>(path: P, content: &str) -> Result<()>$/;"	f
write_local_minus_utc	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^            fn write_local_minus_utc($/;"	f
write_to_tty	/home/artie/Documents/Repos/smallB_cursive/cursive/src/backends/curses/n.rs	/^fn write_to_tty(bytes: &[u8]) -> io::Result<()> {$/;"	f
write_u64	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/ident_hash.rs	/^    fn write_u64(&mut self, i: u64) {$/;"	f
write_u8	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/state-0.4.2/src/ident_hash.rs	/^    fn write_u8(&mut self, i: u8) {$/;"	f
yday	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/windows.rs	/^    fn yday(year: i32, month: i32, day: i32) -> i32 {$/;"	f
yday	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        fn yday(year: i32, month: i32, day: i32) -> i32 {$/;"	f
year	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn year(&self) -> i32 {$/;"	f
year	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn year(&self) -> i32 {$/;"	f
year	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn year(&self) -> i32;$/;"	f
year	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn year(&self) -> i32 {$/;"	f
year	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn year(&self) -> i32 {$/;"	f
year	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/isoweek.rs	/^    pub fn year(&self) -> i32 {$/;"	f
year_ce	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn year_ce(&self) -> (bool, u32) {$/;"	f
ymd	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn ymd(&self, year: i32, month: u32, day: u32) -> Date<Self> {$/;"	f
ymd_opt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn ymd_opt(&self, year: i32, month: u32, day: u32) -> LocalResult<Date<Self>> {$/;"	f
yo	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn yo(&self, year: i32, ordinal: u32) -> Date<Self> {$/;"	f
yo_opt	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn yo_opt(&self, year: i32, ordinal: u32) -> LocalResult<Date<Self>> {$/;"	f
yo_to_cycle	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^pub fn yo_to_cycle(year_mod_400: u32, ordinal: u32) -> u32 {$/;"	f
zero	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn zero() -> Duration {$/;"	f
zero	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^    fn zero() -> Self {$/;"	f
zero	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.3/src/seq/index.rs	/^    fn zero() -> Self;$/;"	f
zero	/home/artie/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn zero() -> Duration {$/;"	f
